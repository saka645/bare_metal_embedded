
19_Timers_Interrupt.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000021c  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002dc  080002e4  000102e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002dc  080002dc  000102e4  2**0
                  CONTENTS
  4 .ARM          00000000  080002dc  080002dc  000102e4  2**0
                  CONTENTS
  5 .preinit_array 00000000  080002dc  080002e4  000102e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002dc  080002dc  000102dc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080002e0  080002e0  000102e0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000102e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000000  080002e4  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000020  080002e4  00020020  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000102e4  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0001030c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000829  00000000  00000000  0001034f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000029c  00000000  00000000  00010b78  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000088  00000000  00000000  00010e18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000057  00000000  00000000  00010ea0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00000d64  00000000  00000000  00010ef7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000c8a  00000000  00000000  00011c5b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0002fe87  00000000  00000000  000128e5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000000f8  00000000  00000000  0004276c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004f  00000000  00000000  00042864  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000000 	.word	0x20000000
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080002c4 	.word	0x080002c4

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000004 	.word	0x20000004
 8000104:	080002c4 	.word	0x080002c4

08000108 <main>:
uint32_t sensor_value = 0;


int count=0;
int main()
{
 8000108:	b580      	push	{r7, lr}
 800010a:	af00      	add	r7, sp, #0
	RCC->AHBENR |= GPIOCEN;
 800010c:	4b0b      	ldr	r3, [pc, #44]	; (800013c <main+0x34>)
 800010e:	695a      	ldr	r2, [r3, #20]
 8000110:	4b0a      	ldr	r3, [pc, #40]	; (800013c <main+0x34>)
 8000112:	2180      	movs	r1, #128	; 0x80
 8000114:	0309      	lsls	r1, r1, #12
 8000116:	430a      	orrs	r2, r1
 8000118:	615a      	str	r2, [r3, #20]
	GPIOC->MODER |= (1<<18);
 800011a:	4b09      	ldr	r3, [pc, #36]	; (8000140 <main+0x38>)
 800011c:	681a      	ldr	r2, [r3, #0]
 800011e:	4b08      	ldr	r3, [pc, #32]	; (8000140 <main+0x38>)
 8000120:	2180      	movs	r1, #128	; 0x80
 8000122:	02c9      	lsls	r1, r1, #11
 8000124:	430a      	orrs	r2, r1
 8000126:	601a      	str	r2, [r3, #0]
	GPIOC->MODER &= ~(1<<19);
 8000128:	4b05      	ldr	r3, [pc, #20]	; (8000140 <main+0x38>)
 800012a:	681a      	ldr	r2, [r3, #0]
 800012c:	4b04      	ldr	r3, [pc, #16]	; (8000140 <main+0x38>)
 800012e:	4905      	ldr	r1, [pc, #20]	; (8000144 <main+0x3c>)
 8000130:	400a      	ands	r2, r1
 8000132:	601a      	str	r2, [r3, #0]
	timer6_init1HzInterrupt();
 8000134:	f000 f84c 	bl	80001d0 <timer6_init1HzInterrupt>
	while(1)
 8000138:	e7fe      	b.n	8000138 <main+0x30>
 800013a:	46c0      	nop			; (mov r8, r8)
 800013c:	40021000 	.word	0x40021000
 8000140:	48000800 	.word	0x48000800
 8000144:	fff7ffff 	.word	0xfff7ffff

08000148 <timer_callback>:
	{

	}
}
static void timer_callback()
{
 8000148:	b580      	push	{r7, lr}
 800014a:	af00      	add	r7, sp, #0
	GPIOC->ODR ^= LED_PIN;
 800014c:	4b07      	ldr	r3, [pc, #28]	; (800016c <timer_callback+0x24>)
 800014e:	695a      	ldr	r2, [r3, #20]
 8000150:	4b06      	ldr	r3, [pc, #24]	; (800016c <timer_callback+0x24>)
 8000152:	2180      	movs	r1, #128	; 0x80
 8000154:	0089      	lsls	r1, r1, #2
 8000156:	404a      	eors	r2, r1
 8000158:	615a      	str	r2, [r3, #20]
	count++;
 800015a:	4b05      	ldr	r3, [pc, #20]	; (8000170 <timer_callback+0x28>)
 800015c:	681b      	ldr	r3, [r3, #0]
 800015e:	1c5a      	adds	r2, r3, #1
 8000160:	4b03      	ldr	r3, [pc, #12]	; (8000170 <timer_callback+0x28>)
 8000162:	601a      	str	r2, [r3, #0]
}
 8000164:	46c0      	nop			; (mov r8, r8)
 8000166:	46bd      	mov	sp, r7
 8000168:	bd80      	pop	{r7, pc}
 800016a:	46c0      	nop			; (mov r8, r8)
 800016c:	48000800 	.word	0x48000800
 8000170:	2000001c 	.word	0x2000001c

08000174 <TIM6_IRQHandler>:
void TIM6_IRQHandler(void)
{
 8000174:	b580      	push	{r7, lr}
 8000176:	af00      	add	r7, sp, #0
	if(TIM6->SR & UIF)
 8000178:	4b07      	ldr	r3, [pc, #28]	; (8000198 <TIM6_IRQHandler+0x24>)
 800017a:	691b      	ldr	r3, [r3, #16]
 800017c:	2201      	movs	r2, #1
 800017e:	4013      	ands	r3, r2
 8000180:	d007      	beq.n	8000192 <TIM6_IRQHandler+0x1e>
	{
		TIM6->SR &= ~UIF;
 8000182:	4b05      	ldr	r3, [pc, #20]	; (8000198 <TIM6_IRQHandler+0x24>)
 8000184:	691a      	ldr	r2, [r3, #16]
 8000186:	4b04      	ldr	r3, [pc, #16]	; (8000198 <TIM6_IRQHandler+0x24>)
 8000188:	2101      	movs	r1, #1
 800018a:	438a      	bics	r2, r1
 800018c:	611a      	str	r2, [r3, #16]
		timer_callback();
 800018e:	f7ff ffdb 	bl	8000148 <timer_callback>
	}
}
 8000192:	46c0      	nop			; (mov r8, r8)
 8000194:	46bd      	mov	sp, r7
 8000196:	bd80      	pop	{r7, pc}
 8000198:	40001000 	.word	0x40001000

0800019c <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 800019c:	b580      	push	{r7, lr}
 800019e:	b082      	sub	sp, #8
 80001a0:	af00      	add	r7, sp, #0
 80001a2:	0002      	movs	r2, r0
 80001a4:	1dfb      	adds	r3, r7, #7
 80001a6:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 80001a8:	1dfb      	adds	r3, r7, #7
 80001aa:	781b      	ldrb	r3, [r3, #0]
 80001ac:	2b7f      	cmp	r3, #127	; 0x7f
 80001ae:	d809      	bhi.n	80001c4 <__NVIC_EnableIRQ+0x28>
  {
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80001b0:	1dfb      	adds	r3, r7, #7
 80001b2:	781b      	ldrb	r3, [r3, #0]
 80001b4:	001a      	movs	r2, r3
 80001b6:	231f      	movs	r3, #31
 80001b8:	401a      	ands	r2, r3
 80001ba:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__NVIC_EnableIRQ+0x30>)
 80001bc:	2101      	movs	r1, #1
 80001be:	4091      	lsls	r1, r2
 80001c0:	000a      	movs	r2, r1
 80001c2:	601a      	str	r2, [r3, #0]
  }
}
 80001c4:	46c0      	nop			; (mov r8, r8)
 80001c6:	46bd      	mov	sp, r7
 80001c8:	b002      	add	sp, #8
 80001ca:	bd80      	pop	{r7, pc}
 80001cc:	e000e100 	.word	0xe000e100

080001d0 <timer6_init1HzInterrupt>:
	TIM6->CNT = 0;
	TIM6->CR1 |= CR1_CEN;
}

void timer6_init1HzInterrupt()
{
 80001d0:	b580      	push	{r7, lr}
 80001d2:	af00      	add	r7, sp, #0
	/*enable clock access to timer6/*	 */
	RCC->APB1ENR |= TIMER6_EN;
 80001d4:	4b10      	ldr	r3, [pc, #64]	; (8000218 <timer6_init1HzInterrupt+0x48>)
 80001d6:	69da      	ldr	r2, [r3, #28]
 80001d8:	4b0f      	ldr	r3, [pc, #60]	; (8000218 <timer6_init1HzInterrupt+0x48>)
 80001da:	2110      	movs	r1, #16
 80001dc:	430a      	orrs	r2, r1
 80001de:	61da      	str	r2, [r3, #28]
	/*set prescalar value*/
	TIM6->PSC = 800 -1;
 80001e0:	4b0e      	ldr	r3, [pc, #56]	; (800021c <timer6_init1HzInterrupt+0x4c>)
 80001e2:	4a0f      	ldr	r2, [pc, #60]	; (8000220 <timer6_init1HzInterrupt+0x50>)
 80001e4:	629a      	str	r2, [r3, #40]	; 0x28
	/*set auto reload value*/
	TIM6->ARR = 10000 -1;
 80001e6:	4b0d      	ldr	r3, [pc, #52]	; (800021c <timer6_init1HzInterrupt+0x4c>)
 80001e8:	4a0e      	ldr	r2, [pc, #56]	; (8000224 <timer6_init1HzInterrupt+0x54>)
 80001ea:	62da      	str	r2, [r3, #44]	; 0x2c
	/*enable timer*/
	TIM6->CNT = 0;
 80001ec:	4b0b      	ldr	r3, [pc, #44]	; (800021c <timer6_init1HzInterrupt+0x4c>)
 80001ee:	2200      	movs	r2, #0
 80001f0:	625a      	str	r2, [r3, #36]	; 0x24
	TIM6->CR1 |= CR1_CEN;
 80001f2:	4b0a      	ldr	r3, [pc, #40]	; (800021c <timer6_init1HzInterrupt+0x4c>)
 80001f4:	681a      	ldr	r2, [r3, #0]
 80001f6:	4b09      	ldr	r3, [pc, #36]	; (800021c <timer6_init1HzInterrupt+0x4c>)
 80001f8:	2101      	movs	r1, #1
 80001fa:	430a      	orrs	r2, r1
 80001fc:	601a      	str	r2, [r3, #0]

	/*enable timer interrupt*/
	TIM6->DIER |= DIER_UI;
 80001fe:	4b07      	ldr	r3, [pc, #28]	; (800021c <timer6_init1HzInterrupt+0x4c>)
 8000200:	68da      	ldr	r2, [r3, #12]
 8000202:	4b06      	ldr	r3, [pc, #24]	; (800021c <timer6_init1HzInterrupt+0x4c>)
 8000204:	2101      	movs	r1, #1
 8000206:	430a      	orrs	r2, r1
 8000208:	60da      	str	r2, [r3, #12]
	/*enable timer interrupt in nvic*/
	NVIC_EnableIRQ(TIM6_IRQn);
 800020a:	2011      	movs	r0, #17
 800020c:	f7ff ffc6 	bl	800019c <__NVIC_EnableIRQ>
}
 8000210:	46c0      	nop			; (mov r8, r8)
 8000212:	46bd      	mov	sp, r7
 8000214:	bd80      	pop	{r7, pc}
 8000216:	46c0      	nop			; (mov r8, r8)
 8000218:	40021000 	.word	0x40021000
 800021c:	40001000 	.word	0x40001000
 8000220:	0000031f 	.word	0x0000031f
 8000224:	0000270f 	.word	0x0000270f

08000228 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000228:	480d      	ldr	r0, [pc, #52]	; (8000260 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800022a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800022c:	e000      	b.n	8000230 <Reset_Handler+0x8>
 800022e:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000230:	480c      	ldr	r0, [pc, #48]	; (8000264 <LoopForever+0x6>)
  ldr r1, =_edata
 8000232:	490d      	ldr	r1, [pc, #52]	; (8000268 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000234:	4a0d      	ldr	r2, [pc, #52]	; (800026c <LoopForever+0xe>)
  movs r3, #0
 8000236:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000238:	e002      	b.n	8000240 <LoopCopyDataInit>

0800023a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800023a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800023c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800023e:	3304      	adds	r3, #4

08000240 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000240:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000242:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000244:	d3f9      	bcc.n	800023a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000246:	4a0a      	ldr	r2, [pc, #40]	; (8000270 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000248:	4c0a      	ldr	r4, [pc, #40]	; (8000274 <LoopForever+0x16>)
  movs r3, #0
 800024a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800024c:	e001      	b.n	8000252 <LoopFillZerobss>

0800024e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800024e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000250:	3204      	adds	r2, #4

08000252 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000252:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000254:	d3fb      	bcc.n	800024e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000256:	f000 f811 	bl	800027c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800025a:	f7ff ff55 	bl	8000108 <main>

0800025e <LoopForever>:

LoopForever:
  b LoopForever
 800025e:	e7fe      	b.n	800025e <LoopForever>
  ldr   r0, =_estack
 8000260:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 8000264:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000268:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800026c:	080002e4 	.word	0x080002e4
  ldr r2, =_sbss
 8000270:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000274:	20000020 	.word	0x20000020

08000278 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000278:	e7fe      	b.n	8000278 <ADC_IRQHandler>
	...

0800027c <__libc_init_array>:
 800027c:	b570      	push	{r4, r5, r6, lr}
 800027e:	2600      	movs	r6, #0
 8000280:	4c0c      	ldr	r4, [pc, #48]	; (80002b4 <__libc_init_array+0x38>)
 8000282:	4d0d      	ldr	r5, [pc, #52]	; (80002b8 <__libc_init_array+0x3c>)
 8000284:	1b64      	subs	r4, r4, r5
 8000286:	10a4      	asrs	r4, r4, #2
 8000288:	42a6      	cmp	r6, r4
 800028a:	d109      	bne.n	80002a0 <__libc_init_array+0x24>
 800028c:	2600      	movs	r6, #0
 800028e:	f000 f819 	bl	80002c4 <_init>
 8000292:	4c0a      	ldr	r4, [pc, #40]	; (80002bc <__libc_init_array+0x40>)
 8000294:	4d0a      	ldr	r5, [pc, #40]	; (80002c0 <__libc_init_array+0x44>)
 8000296:	1b64      	subs	r4, r4, r5
 8000298:	10a4      	asrs	r4, r4, #2
 800029a:	42a6      	cmp	r6, r4
 800029c:	d105      	bne.n	80002aa <__libc_init_array+0x2e>
 800029e:	bd70      	pop	{r4, r5, r6, pc}
 80002a0:	00b3      	lsls	r3, r6, #2
 80002a2:	58eb      	ldr	r3, [r5, r3]
 80002a4:	4798      	blx	r3
 80002a6:	3601      	adds	r6, #1
 80002a8:	e7ee      	b.n	8000288 <__libc_init_array+0xc>
 80002aa:	00b3      	lsls	r3, r6, #2
 80002ac:	58eb      	ldr	r3, [r5, r3]
 80002ae:	4798      	blx	r3
 80002b0:	3601      	adds	r6, #1
 80002b2:	e7f2      	b.n	800029a <__libc_init_array+0x1e>
 80002b4:	080002dc 	.word	0x080002dc
 80002b8:	080002dc 	.word	0x080002dc
 80002bc:	080002e0 	.word	0x080002e0
 80002c0:	080002dc 	.word	0x080002dc

080002c4 <_init>:
 80002c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002c6:	46c0      	nop			; (mov r8, r8)
 80002c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002ca:	bc08      	pop	{r3}
 80002cc:	469e      	mov	lr, r3
 80002ce:	4770      	bx	lr

080002d0 <_fini>:
 80002d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002d2:	46c0      	nop			; (mov r8, r8)
 80002d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002d6:	bc08      	pop	{r3}
 80002d8:	469e      	mov	lr, r3
 80002da:	4770      	bx	lr
