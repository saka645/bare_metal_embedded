
10_adc_cont_conv.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001450  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000044  08001510  08001510  00011510  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001554  08001554  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  08001554  08001554  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001554  08001554  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001554  08001554  00011554  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001558  08001558  00011558  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  0800155c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000170  2000005c  080015b8  0002005c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200001cc  080015b8  000201cc  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020084  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000f2f  00000000  00000000  000200c7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000005a4  00000000  00000000  00020ff6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000168  00000000  00000000  000215a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000f6  00000000  00000000  00021708  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000a219  00000000  00000000  000217fe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001b19  00000000  00000000  0002ba17  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00031ee9  00000000  00000000  0002d530  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000b84  00000000  00000000  0005f41c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004f  00000000  00000000  0005ffa0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	2000005c 	.word	0x2000005c
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080014f8 	.word	0x080014f8

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000060 	.word	0x20000060
 8000104:	080014f8 	.word	0x080014f8

08000108 <__gnu_thumb1_case_shi>:
 8000108:	b403      	push	{r0, r1}
 800010a:	4671      	mov	r1, lr
 800010c:	0849      	lsrs	r1, r1, #1
 800010e:	0040      	lsls	r0, r0, #1
 8000110:	0049      	lsls	r1, r1, #1
 8000112:	5e09      	ldrsh	r1, [r1, r0]
 8000114:	0049      	lsls	r1, r1, #1
 8000116:	448e      	add	lr, r1
 8000118:	bc03      	pop	{r0, r1}
 800011a:	4770      	bx	lr

0800011c <__udivsi3>:
 800011c:	2200      	movs	r2, #0
 800011e:	0843      	lsrs	r3, r0, #1
 8000120:	428b      	cmp	r3, r1
 8000122:	d374      	bcc.n	800020e <__udivsi3+0xf2>
 8000124:	0903      	lsrs	r3, r0, #4
 8000126:	428b      	cmp	r3, r1
 8000128:	d35f      	bcc.n	80001ea <__udivsi3+0xce>
 800012a:	0a03      	lsrs	r3, r0, #8
 800012c:	428b      	cmp	r3, r1
 800012e:	d344      	bcc.n	80001ba <__udivsi3+0x9e>
 8000130:	0b03      	lsrs	r3, r0, #12
 8000132:	428b      	cmp	r3, r1
 8000134:	d328      	bcc.n	8000188 <__udivsi3+0x6c>
 8000136:	0c03      	lsrs	r3, r0, #16
 8000138:	428b      	cmp	r3, r1
 800013a:	d30d      	bcc.n	8000158 <__udivsi3+0x3c>
 800013c:	22ff      	movs	r2, #255	; 0xff
 800013e:	0209      	lsls	r1, r1, #8
 8000140:	ba12      	rev	r2, r2
 8000142:	0c03      	lsrs	r3, r0, #16
 8000144:	428b      	cmp	r3, r1
 8000146:	d302      	bcc.n	800014e <__udivsi3+0x32>
 8000148:	1212      	asrs	r2, r2, #8
 800014a:	0209      	lsls	r1, r1, #8
 800014c:	d065      	beq.n	800021a <__udivsi3+0xfe>
 800014e:	0b03      	lsrs	r3, r0, #12
 8000150:	428b      	cmp	r3, r1
 8000152:	d319      	bcc.n	8000188 <__udivsi3+0x6c>
 8000154:	e000      	b.n	8000158 <__udivsi3+0x3c>
 8000156:	0a09      	lsrs	r1, r1, #8
 8000158:	0bc3      	lsrs	r3, r0, #15
 800015a:	428b      	cmp	r3, r1
 800015c:	d301      	bcc.n	8000162 <__udivsi3+0x46>
 800015e:	03cb      	lsls	r3, r1, #15
 8000160:	1ac0      	subs	r0, r0, r3
 8000162:	4152      	adcs	r2, r2
 8000164:	0b83      	lsrs	r3, r0, #14
 8000166:	428b      	cmp	r3, r1
 8000168:	d301      	bcc.n	800016e <__udivsi3+0x52>
 800016a:	038b      	lsls	r3, r1, #14
 800016c:	1ac0      	subs	r0, r0, r3
 800016e:	4152      	adcs	r2, r2
 8000170:	0b43      	lsrs	r3, r0, #13
 8000172:	428b      	cmp	r3, r1
 8000174:	d301      	bcc.n	800017a <__udivsi3+0x5e>
 8000176:	034b      	lsls	r3, r1, #13
 8000178:	1ac0      	subs	r0, r0, r3
 800017a:	4152      	adcs	r2, r2
 800017c:	0b03      	lsrs	r3, r0, #12
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x6a>
 8000182:	030b      	lsls	r3, r1, #12
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0ac3      	lsrs	r3, r0, #11
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x76>
 800018e:	02cb      	lsls	r3, r1, #11
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0a83      	lsrs	r3, r0, #10
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x82>
 800019a:	028b      	lsls	r3, r1, #10
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0a43      	lsrs	r3, r0, #9
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x8e>
 80001a6:	024b      	lsls	r3, r1, #9
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0a03      	lsrs	r3, r0, #8
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x9a>
 80001b2:	020b      	lsls	r3, r1, #8
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	d2cd      	bcs.n	8000156 <__udivsi3+0x3a>
 80001ba:	09c3      	lsrs	r3, r0, #7
 80001bc:	428b      	cmp	r3, r1
 80001be:	d301      	bcc.n	80001c4 <__udivsi3+0xa8>
 80001c0:	01cb      	lsls	r3, r1, #7
 80001c2:	1ac0      	subs	r0, r0, r3
 80001c4:	4152      	adcs	r2, r2
 80001c6:	0983      	lsrs	r3, r0, #6
 80001c8:	428b      	cmp	r3, r1
 80001ca:	d301      	bcc.n	80001d0 <__udivsi3+0xb4>
 80001cc:	018b      	lsls	r3, r1, #6
 80001ce:	1ac0      	subs	r0, r0, r3
 80001d0:	4152      	adcs	r2, r2
 80001d2:	0943      	lsrs	r3, r0, #5
 80001d4:	428b      	cmp	r3, r1
 80001d6:	d301      	bcc.n	80001dc <__udivsi3+0xc0>
 80001d8:	014b      	lsls	r3, r1, #5
 80001da:	1ac0      	subs	r0, r0, r3
 80001dc:	4152      	adcs	r2, r2
 80001de:	0903      	lsrs	r3, r0, #4
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xcc>
 80001e4:	010b      	lsls	r3, r1, #4
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	08c3      	lsrs	r3, r0, #3
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xd8>
 80001f0:	00cb      	lsls	r3, r1, #3
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0883      	lsrs	r3, r0, #2
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xe4>
 80001fc:	008b      	lsls	r3, r1, #2
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0843      	lsrs	r3, r0, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xf0>
 8000208:	004b      	lsls	r3, r1, #1
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	1a41      	subs	r1, r0, r1
 8000210:	d200      	bcs.n	8000214 <__udivsi3+0xf8>
 8000212:	4601      	mov	r1, r0
 8000214:	4152      	adcs	r2, r2
 8000216:	4610      	mov	r0, r2
 8000218:	4770      	bx	lr
 800021a:	e7ff      	b.n	800021c <__udivsi3+0x100>
 800021c:	b501      	push	{r0, lr}
 800021e:	2000      	movs	r0, #0
 8000220:	f000 f806 	bl	8000230 <__aeabi_idiv0>
 8000224:	bd02      	pop	{r1, pc}
 8000226:	46c0      	nop			; (mov r8, r8)

08000228 <__aeabi_uidivmod>:
 8000228:	2900      	cmp	r1, #0
 800022a:	d0f7      	beq.n	800021c <__udivsi3+0x100>
 800022c:	e776      	b.n	800011c <__udivsi3>
 800022e:	4770      	bx	lr

08000230 <__aeabi_idiv0>:
 8000230:	4770      	bx	lr
 8000232:	46c0      	nop			; (mov r8, r8)

08000234 <pa1_adc_init>:
#define ADC_SR_EOC		(1U<<2)
#define ADC1_CH1		(1U<<1)
#define ADC_CFGR1_CONT	(1U<<13)

void pa1_adc_init(void)
{
 8000234:	b580      	push	{r7, lr}
 8000236:	af00      	add	r7, sp, #0
	/* configure adc gpio pin */

	/* enable clock access to gpioa */
	RCC->AHBENR |= GPIOA_EN;
 8000238:	4b16      	ldr	r3, [pc, #88]	; (8000294 <pa1_adc_init+0x60>)
 800023a:	695a      	ldr	r2, [r3, #20]
 800023c:	4b15      	ldr	r3, [pc, #84]	; (8000294 <pa1_adc_init+0x60>)
 800023e:	2180      	movs	r1, #128	; 0x80
 8000240:	0249      	lsls	r1, r1, #9
 8000242:	430a      	orrs	r2, r1
 8000244:	615a      	str	r2, [r3, #20]
	/* set pa1 mode to analog */
	GPIOA->MODER |= (1U<<2);
 8000246:	2390      	movs	r3, #144	; 0x90
 8000248:	05db      	lsls	r3, r3, #23
 800024a:	681a      	ldr	r2, [r3, #0]
 800024c:	2390      	movs	r3, #144	; 0x90
 800024e:	05db      	lsls	r3, r3, #23
 8000250:	2104      	movs	r1, #4
 8000252:	430a      	orrs	r2, r1
 8000254:	601a      	str	r2, [r3, #0]
	GPIOA->MODER |= (1U<<3);
 8000256:	2390      	movs	r3, #144	; 0x90
 8000258:	05db      	lsls	r3, r3, #23
 800025a:	681a      	ldr	r2, [r3, #0]
 800025c:	2390      	movs	r3, #144	; 0x90
 800025e:	05db      	lsls	r3, r3, #23
 8000260:	2108      	movs	r1, #8
 8000262:	430a      	orrs	r2, r1
 8000264:	601a      	str	r2, [r3, #0]
	/*configure adc module */
	ADC1->CHSELR |= ADC1_CH1;
 8000266:	4b0c      	ldr	r3, [pc, #48]	; (8000298 <pa1_adc_init+0x64>)
 8000268:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800026a:	4b0b      	ldr	r3, [pc, #44]	; (8000298 <pa1_adc_init+0x64>)
 800026c:	2102      	movs	r1, #2
 800026e:	430a      	orrs	r2, r1
 8000270:	629a      	str	r2, [r3, #40]	; 0x28
	/* enable clock access to adc */
	RCC->APB2ENR |= ADC1_EN;
 8000272:	4b08      	ldr	r3, [pc, #32]	; (8000294 <pa1_adc_init+0x60>)
 8000274:	699a      	ldr	r2, [r3, #24]
 8000276:	4b07      	ldr	r3, [pc, #28]	; (8000294 <pa1_adc_init+0x60>)
 8000278:	2180      	movs	r1, #128	; 0x80
 800027a:	0089      	lsls	r1, r1, #2
 800027c:	430a      	orrs	r2, r1
 800027e:	619a      	str	r2, [r3, #24]
	/* configure adc parameters */

	ADC1->CR |= ADC_EN;
 8000280:	4b05      	ldr	r3, [pc, #20]	; (8000298 <pa1_adc_init+0x64>)
 8000282:	689a      	ldr	r2, [r3, #8]
 8000284:	4b04      	ldr	r3, [pc, #16]	; (8000298 <pa1_adc_init+0x64>)
 8000286:	2101      	movs	r1, #1
 8000288:	430a      	orrs	r2, r1
 800028a:	609a      	str	r2, [r3, #8]

}
 800028c:	46c0      	nop			; (mov r8, r8)
 800028e:	46bd      	mov	sp, r7
 8000290:	bd80      	pop	{r7, pc}
 8000292:	46c0      	nop			; (mov r8, r8)
 8000294:	40021000 	.word	0x40021000
 8000298:	40012400 	.word	0x40012400

0800029c <start_conversion>:

void start_conversion(void)
{
 800029c:	b580      	push	{r7, lr}
 800029e:	af00      	add	r7, sp, #0
	/*ENABLE CONT CONV*/
	ADC1->CFGR1 |= ADC_CFGR1_CONT;
 80002a0:	4b07      	ldr	r3, [pc, #28]	; (80002c0 <start_conversion+0x24>)
 80002a2:	68da      	ldr	r2, [r3, #12]
 80002a4:	4b06      	ldr	r3, [pc, #24]	; (80002c0 <start_conversion+0x24>)
 80002a6:	2180      	movs	r1, #128	; 0x80
 80002a8:	0189      	lsls	r1, r1, #6
 80002aa:	430a      	orrs	r2, r1
 80002ac:	60da      	str	r2, [r3, #12]
	ADC1->CR |= ADC_START;
 80002ae:	4b04      	ldr	r3, [pc, #16]	; (80002c0 <start_conversion+0x24>)
 80002b0:	689a      	ldr	r2, [r3, #8]
 80002b2:	4b03      	ldr	r3, [pc, #12]	; (80002c0 <start_conversion+0x24>)
 80002b4:	2110      	movs	r1, #16
 80002b6:	430a      	orrs	r2, r1
 80002b8:	609a      	str	r2, [r3, #8]
}
 80002ba:	46c0      	nop			; (mov r8, r8)
 80002bc:	46bd      	mov	sp, r7
 80002be:	bd80      	pop	{r7, pc}
 80002c0:	40012400 	.word	0x40012400

080002c4 <adc_read>:

uint32_t adc_read(void)
{
 80002c4:	b580      	push	{r7, lr}
 80002c6:	af00      	add	r7, sp, #0
	/*wait for conversion to finish*/
	while(!(ADC1->ISR & ADC_SR_EOC));
 80002c8:	46c0      	nop			; (mov r8, r8)
 80002ca:	4b05      	ldr	r3, [pc, #20]	; (80002e0 <adc_read+0x1c>)
 80002cc:	681b      	ldr	r3, [r3, #0]
 80002ce:	2204      	movs	r2, #4
 80002d0:	4013      	ands	r3, r2
 80002d2:	d0fa      	beq.n	80002ca <adc_read+0x6>
	/*read data */
	return ADC1->DR;
 80002d4:	4b02      	ldr	r3, [pc, #8]	; (80002e0 <adc_read+0x1c>)
 80002d6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
}
 80002d8:	0018      	movs	r0, r3
 80002da:	46bd      	mov	sp, r7
 80002dc:	bd80      	pop	{r7, pc}
 80002de:	46c0      	nop			; (mov r8, r8)
 80002e0:	40012400 	.word	0x40012400

080002e4 <__io_putchar>:
void uart2_tx_init();

uint32_t sensor_value = 0;

int __io_putchar(int ch)
{
 80002e4:	b580      	push	{r7, lr}
 80002e6:	b082      	sub	sp, #8
 80002e8:	af00      	add	r7, sp, #0
 80002ea:	6078      	str	r0, [r7, #4]
	uart2_write(ch);
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	b2db      	uxtb	r3, r3
 80002f0:	0018      	movs	r0, r3
 80002f2:	f000 f8b9 	bl	8000468 <uart2_write>
	return ch;
 80002f6:	687b      	ldr	r3, [r7, #4]
}
 80002f8:	0018      	movs	r0, r3
 80002fa:	46bd      	mov	sp, r7
 80002fc:	b002      	add	sp, #8
 80002fe:	bd80      	pop	{r7, pc}

08000300 <main>:

int main()
{
 8000300:	b580      	push	{r7, lr}
 8000302:	b082      	sub	sp, #8
 8000304:	af00      	add	r7, sp, #0
	uart2_tx_init();
 8000306:	f000 f823 	bl	8000350 <uart2_tx_init>
	pa1_adc_init();
 800030a:	f7ff ff93 	bl	8000234 <pa1_adc_init>
	start_conversion();
 800030e:	f7ff ffc5 	bl	800029c <start_conversion>
	while(1)
	{
		sensor_value = adc_read();
 8000312:	f7ff ffd7 	bl	80002c4 <adc_read>
 8000316:	0002      	movs	r2, r0
 8000318:	4b0a      	ldr	r3, [pc, #40]	; (8000344 <main+0x44>)
 800031a:	601a      	str	r2, [r3, #0]
		//uart2_write("Hello\n");
		printf("sensor value=%d\n",(int)sensor_value);
 800031c:	4b09      	ldr	r3, [pc, #36]	; (8000344 <main+0x44>)
 800031e:	681b      	ldr	r3, [r3, #0]
 8000320:	001a      	movs	r2, r3
 8000322:	4b09      	ldr	r3, [pc, #36]	; (8000348 <main+0x48>)
 8000324:	0011      	movs	r1, r2
 8000326:	0018      	movs	r0, r3
 8000328:	f000 fa40 	bl	80007ac <iprintf>
		for(int i=0; i<100000; i++);
 800032c:	2300      	movs	r3, #0
 800032e:	607b      	str	r3, [r7, #4]
 8000330:	e002      	b.n	8000338 <main+0x38>
 8000332:	687b      	ldr	r3, [r7, #4]
 8000334:	3301      	adds	r3, #1
 8000336:	607b      	str	r3, [r7, #4]
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	4a04      	ldr	r2, [pc, #16]	; (800034c <main+0x4c>)
 800033c:	4293      	cmp	r3, r2
 800033e:	ddf8      	ble.n	8000332 <main+0x32>
		sensor_value = adc_read();
 8000340:	e7e7      	b.n	8000312 <main+0x12>
 8000342:	46c0      	nop			; (mov r8, r8)
 8000344:	20000078 	.word	0x20000078
 8000348:	08001510 	.word	0x08001510
 800034c:	0001869f 	.word	0x0001869f

08000350 <uart2_tx_init>:
	}
}

void uart2_tx_init()
{
 8000350:	b580      	push	{r7, lr}
 8000352:	af00      	add	r7, sp, #0
	//enable clock to gpio//
	RCC->AHBENR |= GPIOAEN;
 8000354:	4b2a      	ldr	r3, [pc, #168]	; (8000400 <uart2_tx_init+0xb0>)
 8000356:	695a      	ldr	r2, [r3, #20]
 8000358:	4b29      	ldr	r3, [pc, #164]	; (8000400 <uart2_tx_init+0xb0>)
 800035a:	2180      	movs	r1, #128	; 0x80
 800035c:	0289      	lsls	r1, r1, #10
 800035e:	430a      	orrs	r2, r1
 8000360:	615a      	str	r2, [r3, #20]
	//alternate fun mode//
	GPIOA->MODER &= ~(1U<<4);
 8000362:	2390      	movs	r3, #144	; 0x90
 8000364:	05db      	lsls	r3, r3, #23
 8000366:	681a      	ldr	r2, [r3, #0]
 8000368:	2390      	movs	r3, #144	; 0x90
 800036a:	05db      	lsls	r3, r3, #23
 800036c:	2110      	movs	r1, #16
 800036e:	438a      	bics	r2, r1
 8000370:	601a      	str	r2, [r3, #0]
	GPIOA->MODER |= (1U<<5);
 8000372:	2390      	movs	r3, #144	; 0x90
 8000374:	05db      	lsls	r3, r3, #23
 8000376:	681a      	ldr	r2, [r3, #0]
 8000378:	2390      	movs	r3, #144	; 0x90
 800037a:	05db      	lsls	r3, r3, #23
 800037c:	2120      	movs	r1, #32
 800037e:	430a      	orrs	r2, r1
 8000380:	601a      	str	r2, [r3, #0]
	//pa2 to alternate fun tx, af1
	GPIOA->AFR[0] |= (1<<8);
 8000382:	2390      	movs	r3, #144	; 0x90
 8000384:	05db      	lsls	r3, r3, #23
 8000386:	6a1a      	ldr	r2, [r3, #32]
 8000388:	2390      	movs	r3, #144	; 0x90
 800038a:	05db      	lsls	r3, r3, #23
 800038c:	2180      	movs	r1, #128	; 0x80
 800038e:	0049      	lsls	r1, r1, #1
 8000390:	430a      	orrs	r2, r1
 8000392:	621a      	str	r2, [r3, #32]
	GPIOA->AFR[0] &= ~(1<<9);
 8000394:	2390      	movs	r3, #144	; 0x90
 8000396:	05db      	lsls	r3, r3, #23
 8000398:	6a1a      	ldr	r2, [r3, #32]
 800039a:	2390      	movs	r3, #144	; 0x90
 800039c:	05db      	lsls	r3, r3, #23
 800039e:	4919      	ldr	r1, [pc, #100]	; (8000404 <uart2_tx_init+0xb4>)
 80003a0:	400a      	ands	r2, r1
 80003a2:	621a      	str	r2, [r3, #32]
	GPIOA->AFR[0] &= ~(1<<10);
 80003a4:	2390      	movs	r3, #144	; 0x90
 80003a6:	05db      	lsls	r3, r3, #23
 80003a8:	6a1a      	ldr	r2, [r3, #32]
 80003aa:	2390      	movs	r3, #144	; 0x90
 80003ac:	05db      	lsls	r3, r3, #23
 80003ae:	4916      	ldr	r1, [pc, #88]	; (8000408 <uart2_tx_init+0xb8>)
 80003b0:	400a      	ands	r2, r1
 80003b2:	621a      	str	r2, [r3, #32]
	GPIOA->AFR[0] &= ~(1<<11);
 80003b4:	2390      	movs	r3, #144	; 0x90
 80003b6:	05db      	lsls	r3, r3, #23
 80003b8:	6a1a      	ldr	r2, [r3, #32]
 80003ba:	2390      	movs	r3, #144	; 0x90
 80003bc:	05db      	lsls	r3, r3, #23
 80003be:	4913      	ldr	r1, [pc, #76]	; (800040c <uart2_tx_init+0xbc>)
 80003c0:	400a      	ands	r2, r1
 80003c2:	621a      	str	r2, [r3, #32]
	//enable clock to uart2//
	RCC->APB1ENR |= UART2EN;
 80003c4:	4b0e      	ldr	r3, [pc, #56]	; (8000400 <uart2_tx_init+0xb0>)
 80003c6:	69da      	ldr	r2, [r3, #28]
 80003c8:	4b0d      	ldr	r3, [pc, #52]	; (8000400 <uart2_tx_init+0xb0>)
 80003ca:	2180      	movs	r1, #128	; 0x80
 80003cc:	0289      	lsls	r1, r1, #10
 80003ce:	430a      	orrs	r2, r1
 80003d0:	61da      	str	r2, [r3, #28]
	//baud rate//
	set_baudrate(USART2, APB1_CLK, UART_BAUDRATE);
 80003d2:	2396      	movs	r3, #150	; 0x96
 80003d4:	019b      	lsls	r3, r3, #6
 80003d6:	490e      	ldr	r1, [pc, #56]	; (8000410 <uart2_tx_init+0xc0>)
 80003d8:	480e      	ldr	r0, [pc, #56]	; (8000414 <uart2_tx_init+0xc4>)
 80003da:	001a      	movs	r2, r3
 80003dc:	f000 f81c 	bl	8000418 <set_baudrate>
	//USART2->BRR = 0x1388;
	//program stop bits//
	USART2->CR2 = 0x00;
 80003e0:	4b0c      	ldr	r3, [pc, #48]	; (8000414 <uart2_tx_init+0xc4>)
 80003e2:	2200      	movs	r2, #0
 80003e4:	605a      	str	r2, [r3, #4]
	//configure transmit direction//
	USART2->CR1 = CR1_TE;
 80003e6:	4b0b      	ldr	r3, [pc, #44]	; (8000414 <uart2_tx_init+0xc4>)
 80003e8:	2208      	movs	r2, #8
 80003ea:	601a      	str	r2, [r3, #0]
	//enable uart module//
	USART2->CR1 |= UART_EN;
 80003ec:	4b09      	ldr	r3, [pc, #36]	; (8000414 <uart2_tx_init+0xc4>)
 80003ee:	681a      	ldr	r2, [r3, #0]
 80003f0:	4b08      	ldr	r3, [pc, #32]	; (8000414 <uart2_tx_init+0xc4>)
 80003f2:	2101      	movs	r1, #1
 80003f4:	430a      	orrs	r2, r1
 80003f6:	601a      	str	r2, [r3, #0]
}
 80003f8:	46c0      	nop			; (mov r8, r8)
 80003fa:	46bd      	mov	sp, r7
 80003fc:	bd80      	pop	{r7, pc}
 80003fe:	46c0      	nop			; (mov r8, r8)
 8000400:	40021000 	.word	0x40021000
 8000404:	fffffdff 	.word	0xfffffdff
 8000408:	fffffbff 	.word	0xfffffbff
 800040c:	fffff7ff 	.word	0xfffff7ff
 8000410:	02dc6c00 	.word	0x02dc6c00
 8000414:	40004400 	.word	0x40004400

08000418 <set_baudrate>:
static void set_baudrate(USART_TypeDef *USARTTX, uint32_t PeriphClk, uint32_t BaudRate)
{
 8000418:	b580      	push	{r7, lr}
 800041a:	b084      	sub	sp, #16
 800041c:	af00      	add	r7, sp, #0
 800041e:	60f8      	str	r0, [r7, #12]
 8000420:	60b9      	str	r1, [r7, #8]
 8000422:	607a      	str	r2, [r7, #4]
	USARTTX->BRR = compute_uart_div(PeriphClk, BaudRate);//0x340//1a1
 8000424:	687a      	ldr	r2, [r7, #4]
 8000426:	68bb      	ldr	r3, [r7, #8]
 8000428:	0011      	movs	r1, r2
 800042a:	0018      	movs	r0, r3
 800042c:	f000 f808 	bl	8000440 <compute_uart_div>
 8000430:	0003      	movs	r3, r0
 8000432:	001a      	movs	r2, r3
 8000434:	68fb      	ldr	r3, [r7, #12]
 8000436:	60da      	str	r2, [r3, #12]
}
 8000438:	46c0      	nop			; (mov r8, r8)
 800043a:	46bd      	mov	sp, r7
 800043c:	b004      	add	sp, #16
 800043e:	bd80      	pop	{r7, pc}

08000440 <compute_uart_div>:

static uint16_t compute_uart_div(uint32_t PeriphClk, uint32_t BaudRate)
{
 8000440:	b580      	push	{r7, lr}
 8000442:	b082      	sub	sp, #8
 8000444:	af00      	add	r7, sp, #0
 8000446:	6078      	str	r0, [r7, #4]
 8000448:	6039      	str	r1, [r7, #0]
	return ((PeriphClk + (BaudRate/2U))/BaudRate);
 800044a:	683b      	ldr	r3, [r7, #0]
 800044c:	085a      	lsrs	r2, r3, #1
 800044e:	687b      	ldr	r3, [r7, #4]
 8000450:	18d3      	adds	r3, r2, r3
 8000452:	6839      	ldr	r1, [r7, #0]
 8000454:	0018      	movs	r0, r3
 8000456:	f7ff fe61 	bl	800011c <__udivsi3>
 800045a:	0003      	movs	r3, r0
 800045c:	b29b      	uxth	r3, r3
}
 800045e:	0018      	movs	r0, r3
 8000460:	46bd      	mov	sp, r7
 8000462:	b002      	add	sp, #8
 8000464:	bd80      	pop	{r7, pc}
	...

08000468 <uart2_write>:

void uart2_write(uint8_t ch)
{
 8000468:	b580      	push	{r7, lr}
 800046a:	b082      	sub	sp, #8
 800046c:	af00      	add	r7, sp, #0
 800046e:	0002      	movs	r2, r0
 8000470:	1dfb      	adds	r3, r7, #7
 8000472:	701a      	strb	r2, [r3, #0]
	//while(*ch)
	{
	//make sure transmit data reg is empty//
	//write transmit data to reg//
	while(!(USART2->ISR & SR_TXE));
 8000474:	46c0      	nop			; (mov r8, r8)
 8000476:	4b07      	ldr	r3, [pc, #28]	; (8000494 <uart2_write+0x2c>)
 8000478:	69db      	ldr	r3, [r3, #28]
 800047a:	2280      	movs	r2, #128	; 0x80
 800047c:	4013      	ands	r3, r2
 800047e:	d0fa      	beq.n	8000476 <uart2_write+0xe>
	USART2->TDR = (ch&0xff);
 8000480:	4a04      	ldr	r2, [pc, #16]	; (8000494 <uart2_write+0x2c>)
 8000482:	1dfb      	adds	r3, r7, #7
 8000484:	781b      	ldrb	r3, [r3, #0]
 8000486:	b29b      	uxth	r3, r3
 8000488:	8513      	strh	r3, [r2, #40]	; 0x28
	//for(int i=0; i<1000; i++);
	//ch++;
	}
}
 800048a:	46c0      	nop			; (mov r8, r8)
 800048c:	46bd      	mov	sp, r7
 800048e:	b002      	add	sp, #8
 8000490:	bd80      	pop	{r7, pc}
 8000492:	46c0      	nop			; (mov r8, r8)
 8000494:	40004400 	.word	0x40004400

08000498 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000498:	b580      	push	{r7, lr}
 800049a:	b086      	sub	sp, #24
 800049c:	af00      	add	r7, sp, #0
 800049e:	60f8      	str	r0, [r7, #12]
 80004a0:	60b9      	str	r1, [r7, #8]
 80004a2:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004a4:	2300      	movs	r3, #0
 80004a6:	617b      	str	r3, [r7, #20]
 80004a8:	e00a      	b.n	80004c0 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80004aa:	e000      	b.n	80004ae <_read+0x16>
 80004ac:	bf00      	nop
 80004ae:	0001      	movs	r1, r0
 80004b0:	68bb      	ldr	r3, [r7, #8]
 80004b2:	1c5a      	adds	r2, r3, #1
 80004b4:	60ba      	str	r2, [r7, #8]
 80004b6:	b2ca      	uxtb	r2, r1
 80004b8:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004ba:	697b      	ldr	r3, [r7, #20]
 80004bc:	3301      	adds	r3, #1
 80004be:	617b      	str	r3, [r7, #20]
 80004c0:	697a      	ldr	r2, [r7, #20]
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	429a      	cmp	r2, r3
 80004c6:	dbf0      	blt.n	80004aa <_read+0x12>
  }

  return len;
 80004c8:	687b      	ldr	r3, [r7, #4]
}
 80004ca:	0018      	movs	r0, r3
 80004cc:	46bd      	mov	sp, r7
 80004ce:	b006      	add	sp, #24
 80004d0:	bd80      	pop	{r7, pc}

080004d2 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80004d2:	b580      	push	{r7, lr}
 80004d4:	b086      	sub	sp, #24
 80004d6:	af00      	add	r7, sp, #0
 80004d8:	60f8      	str	r0, [r7, #12]
 80004da:	60b9      	str	r1, [r7, #8]
 80004dc:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004de:	2300      	movs	r3, #0
 80004e0:	617b      	str	r3, [r7, #20]
 80004e2:	e009      	b.n	80004f8 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80004e4:	68bb      	ldr	r3, [r7, #8]
 80004e6:	1c5a      	adds	r2, r3, #1
 80004e8:	60ba      	str	r2, [r7, #8]
 80004ea:	781b      	ldrb	r3, [r3, #0]
 80004ec:	0018      	movs	r0, r3
 80004ee:	f7ff fef9 	bl	80002e4 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004f2:	697b      	ldr	r3, [r7, #20]
 80004f4:	3301      	adds	r3, #1
 80004f6:	617b      	str	r3, [r7, #20]
 80004f8:	697a      	ldr	r2, [r7, #20]
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	429a      	cmp	r2, r3
 80004fe:	dbf1      	blt.n	80004e4 <_write+0x12>
  }
  return len;
 8000500:	687b      	ldr	r3, [r7, #4]
}
 8000502:	0018      	movs	r0, r3
 8000504:	46bd      	mov	sp, r7
 8000506:	b006      	add	sp, #24
 8000508:	bd80      	pop	{r7, pc}

0800050a <_close>:

int _close(int file)
{
 800050a:	b580      	push	{r7, lr}
 800050c:	b082      	sub	sp, #8
 800050e:	af00      	add	r7, sp, #0
 8000510:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000512:	2301      	movs	r3, #1
 8000514:	425b      	negs	r3, r3
}
 8000516:	0018      	movs	r0, r3
 8000518:	46bd      	mov	sp, r7
 800051a:	b002      	add	sp, #8
 800051c:	bd80      	pop	{r7, pc}

0800051e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800051e:	b580      	push	{r7, lr}
 8000520:	b082      	sub	sp, #8
 8000522:	af00      	add	r7, sp, #0
 8000524:	6078      	str	r0, [r7, #4]
 8000526:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000528:	683b      	ldr	r3, [r7, #0]
 800052a:	2280      	movs	r2, #128	; 0x80
 800052c:	0192      	lsls	r2, r2, #6
 800052e:	605a      	str	r2, [r3, #4]
  return 0;
 8000530:	2300      	movs	r3, #0
}
 8000532:	0018      	movs	r0, r3
 8000534:	46bd      	mov	sp, r7
 8000536:	b002      	add	sp, #8
 8000538:	bd80      	pop	{r7, pc}

0800053a <_isatty>:

int _isatty(int file)
{
 800053a:	b580      	push	{r7, lr}
 800053c:	b082      	sub	sp, #8
 800053e:	af00      	add	r7, sp, #0
 8000540:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000542:	2301      	movs	r3, #1
}
 8000544:	0018      	movs	r0, r3
 8000546:	46bd      	mov	sp, r7
 8000548:	b002      	add	sp, #8
 800054a:	bd80      	pop	{r7, pc}

0800054c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800054c:	b580      	push	{r7, lr}
 800054e:	b084      	sub	sp, #16
 8000550:	af00      	add	r7, sp, #0
 8000552:	60f8      	str	r0, [r7, #12]
 8000554:	60b9      	str	r1, [r7, #8]
 8000556:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000558:	2300      	movs	r3, #0
}
 800055a:	0018      	movs	r0, r3
 800055c:	46bd      	mov	sp, r7
 800055e:	b004      	add	sp, #16
 8000560:	bd80      	pop	{r7, pc}
	...

08000564 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000564:	b580      	push	{r7, lr}
 8000566:	b086      	sub	sp, #24
 8000568:	af00      	add	r7, sp, #0
 800056a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800056c:	4a14      	ldr	r2, [pc, #80]	; (80005c0 <_sbrk+0x5c>)
 800056e:	4b15      	ldr	r3, [pc, #84]	; (80005c4 <_sbrk+0x60>)
 8000570:	1ad3      	subs	r3, r2, r3
 8000572:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000574:	697b      	ldr	r3, [r7, #20]
 8000576:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000578:	4b13      	ldr	r3, [pc, #76]	; (80005c8 <_sbrk+0x64>)
 800057a:	681b      	ldr	r3, [r3, #0]
 800057c:	2b00      	cmp	r3, #0
 800057e:	d102      	bne.n	8000586 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000580:	4b11      	ldr	r3, [pc, #68]	; (80005c8 <_sbrk+0x64>)
 8000582:	4a12      	ldr	r2, [pc, #72]	; (80005cc <_sbrk+0x68>)
 8000584:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000586:	4b10      	ldr	r3, [pc, #64]	; (80005c8 <_sbrk+0x64>)
 8000588:	681a      	ldr	r2, [r3, #0]
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	18d3      	adds	r3, r2, r3
 800058e:	693a      	ldr	r2, [r7, #16]
 8000590:	429a      	cmp	r2, r3
 8000592:	d207      	bcs.n	80005a4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000594:	f000 f9bc 	bl	8000910 <__errno>
 8000598:	0003      	movs	r3, r0
 800059a:	220c      	movs	r2, #12
 800059c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800059e:	2301      	movs	r3, #1
 80005a0:	425b      	negs	r3, r3
 80005a2:	e009      	b.n	80005b8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80005a4:	4b08      	ldr	r3, [pc, #32]	; (80005c8 <_sbrk+0x64>)
 80005a6:	681b      	ldr	r3, [r3, #0]
 80005a8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80005aa:	4b07      	ldr	r3, [pc, #28]	; (80005c8 <_sbrk+0x64>)
 80005ac:	681a      	ldr	r2, [r3, #0]
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	18d2      	adds	r2, r2, r3
 80005b2:	4b05      	ldr	r3, [pc, #20]	; (80005c8 <_sbrk+0x64>)
 80005b4:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 80005b6:	68fb      	ldr	r3, [r7, #12]
}
 80005b8:	0018      	movs	r0, r3
 80005ba:	46bd      	mov	sp, r7
 80005bc:	b006      	add	sp, #24
 80005be:	bd80      	pop	{r7, pc}
 80005c0:	20002000 	.word	0x20002000
 80005c4:	00000400 	.word	0x00000400
 80005c8:	2000007c 	.word	0x2000007c
 80005cc:	200001d0 	.word	0x200001d0

080005d0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005d0:	480d      	ldr	r0, [pc, #52]	; (8000608 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005d2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80005d4:	e000      	b.n	80005d8 <Reset_Handler+0x8>
 80005d6:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80005d8:	480c      	ldr	r0, [pc, #48]	; (800060c <LoopForever+0x6>)
  ldr r1, =_edata
 80005da:	490d      	ldr	r1, [pc, #52]	; (8000610 <LoopForever+0xa>)
  ldr r2, =_sidata
 80005dc:	4a0d      	ldr	r2, [pc, #52]	; (8000614 <LoopForever+0xe>)
  movs r3, #0
 80005de:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005e0:	e002      	b.n	80005e8 <LoopCopyDataInit>

080005e2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80005e2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005e4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005e6:	3304      	adds	r3, #4

080005e8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80005e8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80005ea:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80005ec:	d3f9      	bcc.n	80005e2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005ee:	4a0a      	ldr	r2, [pc, #40]	; (8000618 <LoopForever+0x12>)
  ldr r4, =_ebss
 80005f0:	4c0a      	ldr	r4, [pc, #40]	; (800061c <LoopForever+0x16>)
  movs r3, #0
 80005f2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005f4:	e001      	b.n	80005fa <LoopFillZerobss>

080005f6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80005f6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80005f8:	3204      	adds	r2, #4

080005fa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80005fa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80005fc:	d3fb      	bcc.n	80005f6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80005fe:	f000 f98d 	bl	800091c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000602:	f7ff fe7d 	bl	8000300 <main>

08000606 <LoopForever>:

LoopForever:
  b LoopForever
 8000606:	e7fe      	b.n	8000606 <LoopForever>
  ldr   r0, =_estack
 8000608:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 800060c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000610:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000614:	0800155c 	.word	0x0800155c
  ldr r2, =_sbss
 8000618:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 800061c:	200001cc 	.word	0x200001cc

08000620 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000620:	e7fe      	b.n	8000620 <ADC_IRQHandler>
	...

08000624 <std>:
 8000624:	2300      	movs	r3, #0
 8000626:	b510      	push	{r4, lr}
 8000628:	0004      	movs	r4, r0
 800062a:	6003      	str	r3, [r0, #0]
 800062c:	6043      	str	r3, [r0, #4]
 800062e:	6083      	str	r3, [r0, #8]
 8000630:	8181      	strh	r1, [r0, #12]
 8000632:	6643      	str	r3, [r0, #100]	; 0x64
 8000634:	81c2      	strh	r2, [r0, #14]
 8000636:	6103      	str	r3, [r0, #16]
 8000638:	6143      	str	r3, [r0, #20]
 800063a:	6183      	str	r3, [r0, #24]
 800063c:	0019      	movs	r1, r3
 800063e:	2208      	movs	r2, #8
 8000640:	305c      	adds	r0, #92	; 0x5c
 8000642:	f000 f90f 	bl	8000864 <memset>
 8000646:	4b0b      	ldr	r3, [pc, #44]	; (8000674 <std+0x50>)
 8000648:	6224      	str	r4, [r4, #32]
 800064a:	6263      	str	r3, [r4, #36]	; 0x24
 800064c:	4b0a      	ldr	r3, [pc, #40]	; (8000678 <std+0x54>)
 800064e:	62a3      	str	r3, [r4, #40]	; 0x28
 8000650:	4b0a      	ldr	r3, [pc, #40]	; (800067c <std+0x58>)
 8000652:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000654:	4b0a      	ldr	r3, [pc, #40]	; (8000680 <std+0x5c>)
 8000656:	6323      	str	r3, [r4, #48]	; 0x30
 8000658:	4b0a      	ldr	r3, [pc, #40]	; (8000684 <std+0x60>)
 800065a:	429c      	cmp	r4, r3
 800065c:	d005      	beq.n	800066a <std+0x46>
 800065e:	4b0a      	ldr	r3, [pc, #40]	; (8000688 <std+0x64>)
 8000660:	429c      	cmp	r4, r3
 8000662:	d002      	beq.n	800066a <std+0x46>
 8000664:	4b09      	ldr	r3, [pc, #36]	; (800068c <std+0x68>)
 8000666:	429c      	cmp	r4, r3
 8000668:	d103      	bne.n	8000672 <std+0x4e>
 800066a:	0020      	movs	r0, r4
 800066c:	3058      	adds	r0, #88	; 0x58
 800066e:	f000 f979 	bl	8000964 <__retarget_lock_init_recursive>
 8000672:	bd10      	pop	{r4, pc}
 8000674:	080007cd 	.word	0x080007cd
 8000678:	080007f5 	.word	0x080007f5
 800067c:	0800082d 	.word	0x0800082d
 8000680:	08000859 	.word	0x08000859
 8000684:	20000080 	.word	0x20000080
 8000688:	200000e8 	.word	0x200000e8
 800068c:	20000150 	.word	0x20000150

08000690 <stdio_exit_handler>:
 8000690:	b510      	push	{r4, lr}
 8000692:	4a03      	ldr	r2, [pc, #12]	; (80006a0 <stdio_exit_handler+0x10>)
 8000694:	4903      	ldr	r1, [pc, #12]	; (80006a4 <stdio_exit_handler+0x14>)
 8000696:	4804      	ldr	r0, [pc, #16]	; (80006a8 <stdio_exit_handler+0x18>)
 8000698:	f000 f86c 	bl	8000774 <_fwalk_sglue>
 800069c:	bd10      	pop	{r4, pc}
 800069e:	46c0      	nop			; (mov r8, r8)
 80006a0:	20000000 	.word	0x20000000
 80006a4:	08001205 	.word	0x08001205
 80006a8:	2000000c 	.word	0x2000000c

080006ac <cleanup_stdio>:
 80006ac:	6841      	ldr	r1, [r0, #4]
 80006ae:	4b0b      	ldr	r3, [pc, #44]	; (80006dc <cleanup_stdio+0x30>)
 80006b0:	b510      	push	{r4, lr}
 80006b2:	0004      	movs	r4, r0
 80006b4:	4299      	cmp	r1, r3
 80006b6:	d001      	beq.n	80006bc <cleanup_stdio+0x10>
 80006b8:	f000 fda4 	bl	8001204 <_fflush_r>
 80006bc:	68a1      	ldr	r1, [r4, #8]
 80006be:	4b08      	ldr	r3, [pc, #32]	; (80006e0 <cleanup_stdio+0x34>)
 80006c0:	4299      	cmp	r1, r3
 80006c2:	d002      	beq.n	80006ca <cleanup_stdio+0x1e>
 80006c4:	0020      	movs	r0, r4
 80006c6:	f000 fd9d 	bl	8001204 <_fflush_r>
 80006ca:	68e1      	ldr	r1, [r4, #12]
 80006cc:	4b05      	ldr	r3, [pc, #20]	; (80006e4 <cleanup_stdio+0x38>)
 80006ce:	4299      	cmp	r1, r3
 80006d0:	d002      	beq.n	80006d8 <cleanup_stdio+0x2c>
 80006d2:	0020      	movs	r0, r4
 80006d4:	f000 fd96 	bl	8001204 <_fflush_r>
 80006d8:	bd10      	pop	{r4, pc}
 80006da:	46c0      	nop			; (mov r8, r8)
 80006dc:	20000080 	.word	0x20000080
 80006e0:	200000e8 	.word	0x200000e8
 80006e4:	20000150 	.word	0x20000150

080006e8 <global_stdio_init.part.0>:
 80006e8:	b510      	push	{r4, lr}
 80006ea:	4b09      	ldr	r3, [pc, #36]	; (8000710 <global_stdio_init.part.0+0x28>)
 80006ec:	4a09      	ldr	r2, [pc, #36]	; (8000714 <global_stdio_init.part.0+0x2c>)
 80006ee:	2104      	movs	r1, #4
 80006f0:	601a      	str	r2, [r3, #0]
 80006f2:	4809      	ldr	r0, [pc, #36]	; (8000718 <global_stdio_init.part.0+0x30>)
 80006f4:	2200      	movs	r2, #0
 80006f6:	f7ff ff95 	bl	8000624 <std>
 80006fa:	2201      	movs	r2, #1
 80006fc:	2109      	movs	r1, #9
 80006fe:	4807      	ldr	r0, [pc, #28]	; (800071c <global_stdio_init.part.0+0x34>)
 8000700:	f7ff ff90 	bl	8000624 <std>
 8000704:	2202      	movs	r2, #2
 8000706:	2112      	movs	r1, #18
 8000708:	4805      	ldr	r0, [pc, #20]	; (8000720 <global_stdio_init.part.0+0x38>)
 800070a:	f7ff ff8b 	bl	8000624 <std>
 800070e:	bd10      	pop	{r4, pc}
 8000710:	200001b8 	.word	0x200001b8
 8000714:	08000691 	.word	0x08000691
 8000718:	20000080 	.word	0x20000080
 800071c:	200000e8 	.word	0x200000e8
 8000720:	20000150 	.word	0x20000150

08000724 <__sfp_lock_acquire>:
 8000724:	b510      	push	{r4, lr}
 8000726:	4802      	ldr	r0, [pc, #8]	; (8000730 <__sfp_lock_acquire+0xc>)
 8000728:	f000 f91d 	bl	8000966 <__retarget_lock_acquire_recursive>
 800072c:	bd10      	pop	{r4, pc}
 800072e:	46c0      	nop			; (mov r8, r8)
 8000730:	200001c1 	.word	0x200001c1

08000734 <__sfp_lock_release>:
 8000734:	b510      	push	{r4, lr}
 8000736:	4802      	ldr	r0, [pc, #8]	; (8000740 <__sfp_lock_release+0xc>)
 8000738:	f000 f916 	bl	8000968 <__retarget_lock_release_recursive>
 800073c:	bd10      	pop	{r4, pc}
 800073e:	46c0      	nop			; (mov r8, r8)
 8000740:	200001c1 	.word	0x200001c1

08000744 <__sinit>:
 8000744:	b510      	push	{r4, lr}
 8000746:	0004      	movs	r4, r0
 8000748:	f7ff ffec 	bl	8000724 <__sfp_lock_acquire>
 800074c:	6a23      	ldr	r3, [r4, #32]
 800074e:	2b00      	cmp	r3, #0
 8000750:	d002      	beq.n	8000758 <__sinit+0x14>
 8000752:	f7ff ffef 	bl	8000734 <__sfp_lock_release>
 8000756:	bd10      	pop	{r4, pc}
 8000758:	4b04      	ldr	r3, [pc, #16]	; (800076c <__sinit+0x28>)
 800075a:	6223      	str	r3, [r4, #32]
 800075c:	4b04      	ldr	r3, [pc, #16]	; (8000770 <__sinit+0x2c>)
 800075e:	681b      	ldr	r3, [r3, #0]
 8000760:	2b00      	cmp	r3, #0
 8000762:	d1f6      	bne.n	8000752 <__sinit+0xe>
 8000764:	f7ff ffc0 	bl	80006e8 <global_stdio_init.part.0>
 8000768:	e7f3      	b.n	8000752 <__sinit+0xe>
 800076a:	46c0      	nop			; (mov r8, r8)
 800076c:	080006ad 	.word	0x080006ad
 8000770:	200001b8 	.word	0x200001b8

08000774 <_fwalk_sglue>:
 8000774:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000776:	0014      	movs	r4, r2
 8000778:	2600      	movs	r6, #0
 800077a:	9000      	str	r0, [sp, #0]
 800077c:	9101      	str	r1, [sp, #4]
 800077e:	68a5      	ldr	r5, [r4, #8]
 8000780:	6867      	ldr	r7, [r4, #4]
 8000782:	3f01      	subs	r7, #1
 8000784:	d504      	bpl.n	8000790 <_fwalk_sglue+0x1c>
 8000786:	6824      	ldr	r4, [r4, #0]
 8000788:	2c00      	cmp	r4, #0
 800078a:	d1f8      	bne.n	800077e <_fwalk_sglue+0xa>
 800078c:	0030      	movs	r0, r6
 800078e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000790:	89ab      	ldrh	r3, [r5, #12]
 8000792:	2b01      	cmp	r3, #1
 8000794:	d908      	bls.n	80007a8 <_fwalk_sglue+0x34>
 8000796:	220e      	movs	r2, #14
 8000798:	5eab      	ldrsh	r3, [r5, r2]
 800079a:	3301      	adds	r3, #1
 800079c:	d004      	beq.n	80007a8 <_fwalk_sglue+0x34>
 800079e:	0029      	movs	r1, r5
 80007a0:	9800      	ldr	r0, [sp, #0]
 80007a2:	9b01      	ldr	r3, [sp, #4]
 80007a4:	4798      	blx	r3
 80007a6:	4306      	orrs	r6, r0
 80007a8:	3568      	adds	r5, #104	; 0x68
 80007aa:	e7ea      	b.n	8000782 <_fwalk_sglue+0xe>

080007ac <iprintf>:
 80007ac:	b40f      	push	{r0, r1, r2, r3}
 80007ae:	b507      	push	{r0, r1, r2, lr}
 80007b0:	4905      	ldr	r1, [pc, #20]	; (80007c8 <iprintf+0x1c>)
 80007b2:	ab04      	add	r3, sp, #16
 80007b4:	6808      	ldr	r0, [r1, #0]
 80007b6:	cb04      	ldmia	r3!, {r2}
 80007b8:	6881      	ldr	r1, [r0, #8]
 80007ba:	9301      	str	r3, [sp, #4]
 80007bc:	f000 f9fc 	bl	8000bb8 <_vfiprintf_r>
 80007c0:	b003      	add	sp, #12
 80007c2:	bc08      	pop	{r3}
 80007c4:	b004      	add	sp, #16
 80007c6:	4718      	bx	r3
 80007c8:	20000058 	.word	0x20000058

080007cc <__sread>:
 80007cc:	b570      	push	{r4, r5, r6, lr}
 80007ce:	000c      	movs	r4, r1
 80007d0:	250e      	movs	r5, #14
 80007d2:	5f49      	ldrsh	r1, [r1, r5]
 80007d4:	f000 f874 	bl	80008c0 <_read_r>
 80007d8:	2800      	cmp	r0, #0
 80007da:	db03      	blt.n	80007e4 <__sread+0x18>
 80007dc:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80007de:	181b      	adds	r3, r3, r0
 80007e0:	6563      	str	r3, [r4, #84]	; 0x54
 80007e2:	bd70      	pop	{r4, r5, r6, pc}
 80007e4:	89a3      	ldrh	r3, [r4, #12]
 80007e6:	4a02      	ldr	r2, [pc, #8]	; (80007f0 <__sread+0x24>)
 80007e8:	4013      	ands	r3, r2
 80007ea:	81a3      	strh	r3, [r4, #12]
 80007ec:	e7f9      	b.n	80007e2 <__sread+0x16>
 80007ee:	46c0      	nop			; (mov r8, r8)
 80007f0:	ffffefff 	.word	0xffffefff

080007f4 <__swrite>:
 80007f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007f6:	001f      	movs	r7, r3
 80007f8:	898b      	ldrh	r3, [r1, #12]
 80007fa:	0005      	movs	r5, r0
 80007fc:	000c      	movs	r4, r1
 80007fe:	0016      	movs	r6, r2
 8000800:	05db      	lsls	r3, r3, #23
 8000802:	d505      	bpl.n	8000810 <__swrite+0x1c>
 8000804:	230e      	movs	r3, #14
 8000806:	5ec9      	ldrsh	r1, [r1, r3]
 8000808:	2200      	movs	r2, #0
 800080a:	2302      	movs	r3, #2
 800080c:	f000 f844 	bl	8000898 <_lseek_r>
 8000810:	89a3      	ldrh	r3, [r4, #12]
 8000812:	4a05      	ldr	r2, [pc, #20]	; (8000828 <__swrite+0x34>)
 8000814:	0028      	movs	r0, r5
 8000816:	4013      	ands	r3, r2
 8000818:	81a3      	strh	r3, [r4, #12]
 800081a:	0032      	movs	r2, r6
 800081c:	230e      	movs	r3, #14
 800081e:	5ee1      	ldrsh	r1, [r4, r3]
 8000820:	003b      	movs	r3, r7
 8000822:	f000 f861 	bl	80008e8 <_write_r>
 8000826:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000828:	ffffefff 	.word	0xffffefff

0800082c <__sseek>:
 800082c:	b570      	push	{r4, r5, r6, lr}
 800082e:	000c      	movs	r4, r1
 8000830:	250e      	movs	r5, #14
 8000832:	5f49      	ldrsh	r1, [r1, r5]
 8000834:	f000 f830 	bl	8000898 <_lseek_r>
 8000838:	89a3      	ldrh	r3, [r4, #12]
 800083a:	1c42      	adds	r2, r0, #1
 800083c:	d103      	bne.n	8000846 <__sseek+0x1a>
 800083e:	4a05      	ldr	r2, [pc, #20]	; (8000854 <__sseek+0x28>)
 8000840:	4013      	ands	r3, r2
 8000842:	81a3      	strh	r3, [r4, #12]
 8000844:	bd70      	pop	{r4, r5, r6, pc}
 8000846:	2280      	movs	r2, #128	; 0x80
 8000848:	0152      	lsls	r2, r2, #5
 800084a:	4313      	orrs	r3, r2
 800084c:	81a3      	strh	r3, [r4, #12]
 800084e:	6560      	str	r0, [r4, #84]	; 0x54
 8000850:	e7f8      	b.n	8000844 <__sseek+0x18>
 8000852:	46c0      	nop			; (mov r8, r8)
 8000854:	ffffefff 	.word	0xffffefff

08000858 <__sclose>:
 8000858:	b510      	push	{r4, lr}
 800085a:	230e      	movs	r3, #14
 800085c:	5ec9      	ldrsh	r1, [r1, r3]
 800085e:	f000 f809 	bl	8000874 <_close_r>
 8000862:	bd10      	pop	{r4, pc}

08000864 <memset>:
 8000864:	0003      	movs	r3, r0
 8000866:	1882      	adds	r2, r0, r2
 8000868:	4293      	cmp	r3, r2
 800086a:	d100      	bne.n	800086e <memset+0xa>
 800086c:	4770      	bx	lr
 800086e:	7019      	strb	r1, [r3, #0]
 8000870:	3301      	adds	r3, #1
 8000872:	e7f9      	b.n	8000868 <memset+0x4>

08000874 <_close_r>:
 8000874:	2300      	movs	r3, #0
 8000876:	b570      	push	{r4, r5, r6, lr}
 8000878:	4d06      	ldr	r5, [pc, #24]	; (8000894 <_close_r+0x20>)
 800087a:	0004      	movs	r4, r0
 800087c:	0008      	movs	r0, r1
 800087e:	602b      	str	r3, [r5, #0]
 8000880:	f7ff fe43 	bl	800050a <_close>
 8000884:	1c43      	adds	r3, r0, #1
 8000886:	d103      	bne.n	8000890 <_close_r+0x1c>
 8000888:	682b      	ldr	r3, [r5, #0]
 800088a:	2b00      	cmp	r3, #0
 800088c:	d000      	beq.n	8000890 <_close_r+0x1c>
 800088e:	6023      	str	r3, [r4, #0]
 8000890:	bd70      	pop	{r4, r5, r6, pc}
 8000892:	46c0      	nop			; (mov r8, r8)
 8000894:	200001bc 	.word	0x200001bc

08000898 <_lseek_r>:
 8000898:	b570      	push	{r4, r5, r6, lr}
 800089a:	0004      	movs	r4, r0
 800089c:	0008      	movs	r0, r1
 800089e:	0011      	movs	r1, r2
 80008a0:	001a      	movs	r2, r3
 80008a2:	2300      	movs	r3, #0
 80008a4:	4d05      	ldr	r5, [pc, #20]	; (80008bc <_lseek_r+0x24>)
 80008a6:	602b      	str	r3, [r5, #0]
 80008a8:	f7ff fe50 	bl	800054c <_lseek>
 80008ac:	1c43      	adds	r3, r0, #1
 80008ae:	d103      	bne.n	80008b8 <_lseek_r+0x20>
 80008b0:	682b      	ldr	r3, [r5, #0]
 80008b2:	2b00      	cmp	r3, #0
 80008b4:	d000      	beq.n	80008b8 <_lseek_r+0x20>
 80008b6:	6023      	str	r3, [r4, #0]
 80008b8:	bd70      	pop	{r4, r5, r6, pc}
 80008ba:	46c0      	nop			; (mov r8, r8)
 80008bc:	200001bc 	.word	0x200001bc

080008c0 <_read_r>:
 80008c0:	b570      	push	{r4, r5, r6, lr}
 80008c2:	0004      	movs	r4, r0
 80008c4:	0008      	movs	r0, r1
 80008c6:	0011      	movs	r1, r2
 80008c8:	001a      	movs	r2, r3
 80008ca:	2300      	movs	r3, #0
 80008cc:	4d05      	ldr	r5, [pc, #20]	; (80008e4 <_read_r+0x24>)
 80008ce:	602b      	str	r3, [r5, #0]
 80008d0:	f7ff fde2 	bl	8000498 <_read>
 80008d4:	1c43      	adds	r3, r0, #1
 80008d6:	d103      	bne.n	80008e0 <_read_r+0x20>
 80008d8:	682b      	ldr	r3, [r5, #0]
 80008da:	2b00      	cmp	r3, #0
 80008dc:	d000      	beq.n	80008e0 <_read_r+0x20>
 80008de:	6023      	str	r3, [r4, #0]
 80008e0:	bd70      	pop	{r4, r5, r6, pc}
 80008e2:	46c0      	nop			; (mov r8, r8)
 80008e4:	200001bc 	.word	0x200001bc

080008e8 <_write_r>:
 80008e8:	b570      	push	{r4, r5, r6, lr}
 80008ea:	0004      	movs	r4, r0
 80008ec:	0008      	movs	r0, r1
 80008ee:	0011      	movs	r1, r2
 80008f0:	001a      	movs	r2, r3
 80008f2:	2300      	movs	r3, #0
 80008f4:	4d05      	ldr	r5, [pc, #20]	; (800090c <_write_r+0x24>)
 80008f6:	602b      	str	r3, [r5, #0]
 80008f8:	f7ff fdeb 	bl	80004d2 <_write>
 80008fc:	1c43      	adds	r3, r0, #1
 80008fe:	d103      	bne.n	8000908 <_write_r+0x20>
 8000900:	682b      	ldr	r3, [r5, #0]
 8000902:	2b00      	cmp	r3, #0
 8000904:	d000      	beq.n	8000908 <_write_r+0x20>
 8000906:	6023      	str	r3, [r4, #0]
 8000908:	bd70      	pop	{r4, r5, r6, pc}
 800090a:	46c0      	nop			; (mov r8, r8)
 800090c:	200001bc 	.word	0x200001bc

08000910 <__errno>:
 8000910:	4b01      	ldr	r3, [pc, #4]	; (8000918 <__errno+0x8>)
 8000912:	6818      	ldr	r0, [r3, #0]
 8000914:	4770      	bx	lr
 8000916:	46c0      	nop			; (mov r8, r8)
 8000918:	20000058 	.word	0x20000058

0800091c <__libc_init_array>:
 800091c:	b570      	push	{r4, r5, r6, lr}
 800091e:	2600      	movs	r6, #0
 8000920:	4c0c      	ldr	r4, [pc, #48]	; (8000954 <__libc_init_array+0x38>)
 8000922:	4d0d      	ldr	r5, [pc, #52]	; (8000958 <__libc_init_array+0x3c>)
 8000924:	1b64      	subs	r4, r4, r5
 8000926:	10a4      	asrs	r4, r4, #2
 8000928:	42a6      	cmp	r6, r4
 800092a:	d109      	bne.n	8000940 <__libc_init_array+0x24>
 800092c:	2600      	movs	r6, #0
 800092e:	f000 fde3 	bl	80014f8 <_init>
 8000932:	4c0a      	ldr	r4, [pc, #40]	; (800095c <__libc_init_array+0x40>)
 8000934:	4d0a      	ldr	r5, [pc, #40]	; (8000960 <__libc_init_array+0x44>)
 8000936:	1b64      	subs	r4, r4, r5
 8000938:	10a4      	asrs	r4, r4, #2
 800093a:	42a6      	cmp	r6, r4
 800093c:	d105      	bne.n	800094a <__libc_init_array+0x2e>
 800093e:	bd70      	pop	{r4, r5, r6, pc}
 8000940:	00b3      	lsls	r3, r6, #2
 8000942:	58eb      	ldr	r3, [r5, r3]
 8000944:	4798      	blx	r3
 8000946:	3601      	adds	r6, #1
 8000948:	e7ee      	b.n	8000928 <__libc_init_array+0xc>
 800094a:	00b3      	lsls	r3, r6, #2
 800094c:	58eb      	ldr	r3, [r5, r3]
 800094e:	4798      	blx	r3
 8000950:	3601      	adds	r6, #1
 8000952:	e7f2      	b.n	800093a <__libc_init_array+0x1e>
 8000954:	08001554 	.word	0x08001554
 8000958:	08001554 	.word	0x08001554
 800095c:	08001558 	.word	0x08001558
 8000960:	08001554 	.word	0x08001554

08000964 <__retarget_lock_init_recursive>:
 8000964:	4770      	bx	lr

08000966 <__retarget_lock_acquire_recursive>:
 8000966:	4770      	bx	lr

08000968 <__retarget_lock_release_recursive>:
 8000968:	4770      	bx	lr
	...

0800096c <_free_r>:
 800096c:	b570      	push	{r4, r5, r6, lr}
 800096e:	0005      	movs	r5, r0
 8000970:	2900      	cmp	r1, #0
 8000972:	d010      	beq.n	8000996 <_free_r+0x2a>
 8000974:	1f0c      	subs	r4, r1, #4
 8000976:	6823      	ldr	r3, [r4, #0]
 8000978:	2b00      	cmp	r3, #0
 800097a:	da00      	bge.n	800097e <_free_r+0x12>
 800097c:	18e4      	adds	r4, r4, r3
 800097e:	0028      	movs	r0, r5
 8000980:	f000 f8e2 	bl	8000b48 <__malloc_lock>
 8000984:	4a1d      	ldr	r2, [pc, #116]	; (80009fc <_free_r+0x90>)
 8000986:	6813      	ldr	r3, [r2, #0]
 8000988:	2b00      	cmp	r3, #0
 800098a:	d105      	bne.n	8000998 <_free_r+0x2c>
 800098c:	6063      	str	r3, [r4, #4]
 800098e:	6014      	str	r4, [r2, #0]
 8000990:	0028      	movs	r0, r5
 8000992:	f000 f8e1 	bl	8000b58 <__malloc_unlock>
 8000996:	bd70      	pop	{r4, r5, r6, pc}
 8000998:	42a3      	cmp	r3, r4
 800099a:	d908      	bls.n	80009ae <_free_r+0x42>
 800099c:	6820      	ldr	r0, [r4, #0]
 800099e:	1821      	adds	r1, r4, r0
 80009a0:	428b      	cmp	r3, r1
 80009a2:	d1f3      	bne.n	800098c <_free_r+0x20>
 80009a4:	6819      	ldr	r1, [r3, #0]
 80009a6:	685b      	ldr	r3, [r3, #4]
 80009a8:	1809      	adds	r1, r1, r0
 80009aa:	6021      	str	r1, [r4, #0]
 80009ac:	e7ee      	b.n	800098c <_free_r+0x20>
 80009ae:	001a      	movs	r2, r3
 80009b0:	685b      	ldr	r3, [r3, #4]
 80009b2:	2b00      	cmp	r3, #0
 80009b4:	d001      	beq.n	80009ba <_free_r+0x4e>
 80009b6:	42a3      	cmp	r3, r4
 80009b8:	d9f9      	bls.n	80009ae <_free_r+0x42>
 80009ba:	6811      	ldr	r1, [r2, #0]
 80009bc:	1850      	adds	r0, r2, r1
 80009be:	42a0      	cmp	r0, r4
 80009c0:	d10b      	bne.n	80009da <_free_r+0x6e>
 80009c2:	6820      	ldr	r0, [r4, #0]
 80009c4:	1809      	adds	r1, r1, r0
 80009c6:	1850      	adds	r0, r2, r1
 80009c8:	6011      	str	r1, [r2, #0]
 80009ca:	4283      	cmp	r3, r0
 80009cc:	d1e0      	bne.n	8000990 <_free_r+0x24>
 80009ce:	6818      	ldr	r0, [r3, #0]
 80009d0:	685b      	ldr	r3, [r3, #4]
 80009d2:	1841      	adds	r1, r0, r1
 80009d4:	6011      	str	r1, [r2, #0]
 80009d6:	6053      	str	r3, [r2, #4]
 80009d8:	e7da      	b.n	8000990 <_free_r+0x24>
 80009da:	42a0      	cmp	r0, r4
 80009dc:	d902      	bls.n	80009e4 <_free_r+0x78>
 80009de:	230c      	movs	r3, #12
 80009e0:	602b      	str	r3, [r5, #0]
 80009e2:	e7d5      	b.n	8000990 <_free_r+0x24>
 80009e4:	6820      	ldr	r0, [r4, #0]
 80009e6:	1821      	adds	r1, r4, r0
 80009e8:	428b      	cmp	r3, r1
 80009ea:	d103      	bne.n	80009f4 <_free_r+0x88>
 80009ec:	6819      	ldr	r1, [r3, #0]
 80009ee:	685b      	ldr	r3, [r3, #4]
 80009f0:	1809      	adds	r1, r1, r0
 80009f2:	6021      	str	r1, [r4, #0]
 80009f4:	6063      	str	r3, [r4, #4]
 80009f6:	6054      	str	r4, [r2, #4]
 80009f8:	e7ca      	b.n	8000990 <_free_r+0x24>
 80009fa:	46c0      	nop			; (mov r8, r8)
 80009fc:	200001c4 	.word	0x200001c4

08000a00 <sbrk_aligned>:
 8000a00:	b570      	push	{r4, r5, r6, lr}
 8000a02:	4e0f      	ldr	r6, [pc, #60]	; (8000a40 <sbrk_aligned+0x40>)
 8000a04:	000d      	movs	r5, r1
 8000a06:	6831      	ldr	r1, [r6, #0]
 8000a08:	0004      	movs	r4, r0
 8000a0a:	2900      	cmp	r1, #0
 8000a0c:	d102      	bne.n	8000a14 <sbrk_aligned+0x14>
 8000a0e:	f000 fccb 	bl	80013a8 <_sbrk_r>
 8000a12:	6030      	str	r0, [r6, #0]
 8000a14:	0029      	movs	r1, r5
 8000a16:	0020      	movs	r0, r4
 8000a18:	f000 fcc6 	bl	80013a8 <_sbrk_r>
 8000a1c:	1c43      	adds	r3, r0, #1
 8000a1e:	d00a      	beq.n	8000a36 <sbrk_aligned+0x36>
 8000a20:	2303      	movs	r3, #3
 8000a22:	1cc5      	adds	r5, r0, #3
 8000a24:	439d      	bics	r5, r3
 8000a26:	42a8      	cmp	r0, r5
 8000a28:	d007      	beq.n	8000a3a <sbrk_aligned+0x3a>
 8000a2a:	1a29      	subs	r1, r5, r0
 8000a2c:	0020      	movs	r0, r4
 8000a2e:	f000 fcbb 	bl	80013a8 <_sbrk_r>
 8000a32:	3001      	adds	r0, #1
 8000a34:	d101      	bne.n	8000a3a <sbrk_aligned+0x3a>
 8000a36:	2501      	movs	r5, #1
 8000a38:	426d      	negs	r5, r5
 8000a3a:	0028      	movs	r0, r5
 8000a3c:	bd70      	pop	{r4, r5, r6, pc}
 8000a3e:	46c0      	nop			; (mov r8, r8)
 8000a40:	200001c8 	.word	0x200001c8

08000a44 <_malloc_r>:
 8000a44:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000a46:	2203      	movs	r2, #3
 8000a48:	1ccb      	adds	r3, r1, #3
 8000a4a:	4393      	bics	r3, r2
 8000a4c:	3308      	adds	r3, #8
 8000a4e:	0006      	movs	r6, r0
 8000a50:	001f      	movs	r7, r3
 8000a52:	2b0c      	cmp	r3, #12
 8000a54:	d238      	bcs.n	8000ac8 <_malloc_r+0x84>
 8000a56:	270c      	movs	r7, #12
 8000a58:	42b9      	cmp	r1, r7
 8000a5a:	d837      	bhi.n	8000acc <_malloc_r+0x88>
 8000a5c:	0030      	movs	r0, r6
 8000a5e:	f000 f873 	bl	8000b48 <__malloc_lock>
 8000a62:	4b38      	ldr	r3, [pc, #224]	; (8000b44 <_malloc_r+0x100>)
 8000a64:	9300      	str	r3, [sp, #0]
 8000a66:	681b      	ldr	r3, [r3, #0]
 8000a68:	001c      	movs	r4, r3
 8000a6a:	2c00      	cmp	r4, #0
 8000a6c:	d133      	bne.n	8000ad6 <_malloc_r+0x92>
 8000a6e:	0039      	movs	r1, r7
 8000a70:	0030      	movs	r0, r6
 8000a72:	f7ff ffc5 	bl	8000a00 <sbrk_aligned>
 8000a76:	0004      	movs	r4, r0
 8000a78:	1c43      	adds	r3, r0, #1
 8000a7a:	d15e      	bne.n	8000b3a <_malloc_r+0xf6>
 8000a7c:	9b00      	ldr	r3, [sp, #0]
 8000a7e:	681c      	ldr	r4, [r3, #0]
 8000a80:	0025      	movs	r5, r4
 8000a82:	2d00      	cmp	r5, #0
 8000a84:	d14e      	bne.n	8000b24 <_malloc_r+0xe0>
 8000a86:	2c00      	cmp	r4, #0
 8000a88:	d051      	beq.n	8000b2e <_malloc_r+0xea>
 8000a8a:	6823      	ldr	r3, [r4, #0]
 8000a8c:	0029      	movs	r1, r5
 8000a8e:	18e3      	adds	r3, r4, r3
 8000a90:	0030      	movs	r0, r6
 8000a92:	9301      	str	r3, [sp, #4]
 8000a94:	f000 fc88 	bl	80013a8 <_sbrk_r>
 8000a98:	9b01      	ldr	r3, [sp, #4]
 8000a9a:	4283      	cmp	r3, r0
 8000a9c:	d147      	bne.n	8000b2e <_malloc_r+0xea>
 8000a9e:	6823      	ldr	r3, [r4, #0]
 8000aa0:	0030      	movs	r0, r6
 8000aa2:	1aff      	subs	r7, r7, r3
 8000aa4:	0039      	movs	r1, r7
 8000aa6:	f7ff ffab 	bl	8000a00 <sbrk_aligned>
 8000aaa:	3001      	adds	r0, #1
 8000aac:	d03f      	beq.n	8000b2e <_malloc_r+0xea>
 8000aae:	6823      	ldr	r3, [r4, #0]
 8000ab0:	19db      	adds	r3, r3, r7
 8000ab2:	6023      	str	r3, [r4, #0]
 8000ab4:	9b00      	ldr	r3, [sp, #0]
 8000ab6:	681b      	ldr	r3, [r3, #0]
 8000ab8:	2b00      	cmp	r3, #0
 8000aba:	d040      	beq.n	8000b3e <_malloc_r+0xfa>
 8000abc:	685a      	ldr	r2, [r3, #4]
 8000abe:	42a2      	cmp	r2, r4
 8000ac0:	d133      	bne.n	8000b2a <_malloc_r+0xe6>
 8000ac2:	2200      	movs	r2, #0
 8000ac4:	605a      	str	r2, [r3, #4]
 8000ac6:	e014      	b.n	8000af2 <_malloc_r+0xae>
 8000ac8:	2b00      	cmp	r3, #0
 8000aca:	dac5      	bge.n	8000a58 <_malloc_r+0x14>
 8000acc:	230c      	movs	r3, #12
 8000ace:	2500      	movs	r5, #0
 8000ad0:	6033      	str	r3, [r6, #0]
 8000ad2:	0028      	movs	r0, r5
 8000ad4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000ad6:	6821      	ldr	r1, [r4, #0]
 8000ad8:	1bc9      	subs	r1, r1, r7
 8000ada:	d420      	bmi.n	8000b1e <_malloc_r+0xda>
 8000adc:	290b      	cmp	r1, #11
 8000ade:	d918      	bls.n	8000b12 <_malloc_r+0xce>
 8000ae0:	19e2      	adds	r2, r4, r7
 8000ae2:	6027      	str	r7, [r4, #0]
 8000ae4:	42a3      	cmp	r3, r4
 8000ae6:	d112      	bne.n	8000b0e <_malloc_r+0xca>
 8000ae8:	9b00      	ldr	r3, [sp, #0]
 8000aea:	601a      	str	r2, [r3, #0]
 8000aec:	6863      	ldr	r3, [r4, #4]
 8000aee:	6011      	str	r1, [r2, #0]
 8000af0:	6053      	str	r3, [r2, #4]
 8000af2:	0030      	movs	r0, r6
 8000af4:	0025      	movs	r5, r4
 8000af6:	f000 f82f 	bl	8000b58 <__malloc_unlock>
 8000afa:	2207      	movs	r2, #7
 8000afc:	350b      	adds	r5, #11
 8000afe:	1d23      	adds	r3, r4, #4
 8000b00:	4395      	bics	r5, r2
 8000b02:	1aea      	subs	r2, r5, r3
 8000b04:	429d      	cmp	r5, r3
 8000b06:	d0e4      	beq.n	8000ad2 <_malloc_r+0x8e>
 8000b08:	1b5b      	subs	r3, r3, r5
 8000b0a:	50a3      	str	r3, [r4, r2]
 8000b0c:	e7e1      	b.n	8000ad2 <_malloc_r+0x8e>
 8000b0e:	605a      	str	r2, [r3, #4]
 8000b10:	e7ec      	b.n	8000aec <_malloc_r+0xa8>
 8000b12:	6862      	ldr	r2, [r4, #4]
 8000b14:	42a3      	cmp	r3, r4
 8000b16:	d1d5      	bne.n	8000ac4 <_malloc_r+0x80>
 8000b18:	9b00      	ldr	r3, [sp, #0]
 8000b1a:	601a      	str	r2, [r3, #0]
 8000b1c:	e7e9      	b.n	8000af2 <_malloc_r+0xae>
 8000b1e:	0023      	movs	r3, r4
 8000b20:	6864      	ldr	r4, [r4, #4]
 8000b22:	e7a2      	b.n	8000a6a <_malloc_r+0x26>
 8000b24:	002c      	movs	r4, r5
 8000b26:	686d      	ldr	r5, [r5, #4]
 8000b28:	e7ab      	b.n	8000a82 <_malloc_r+0x3e>
 8000b2a:	0013      	movs	r3, r2
 8000b2c:	e7c4      	b.n	8000ab8 <_malloc_r+0x74>
 8000b2e:	230c      	movs	r3, #12
 8000b30:	0030      	movs	r0, r6
 8000b32:	6033      	str	r3, [r6, #0]
 8000b34:	f000 f810 	bl	8000b58 <__malloc_unlock>
 8000b38:	e7cb      	b.n	8000ad2 <_malloc_r+0x8e>
 8000b3a:	6027      	str	r7, [r4, #0]
 8000b3c:	e7d9      	b.n	8000af2 <_malloc_r+0xae>
 8000b3e:	605b      	str	r3, [r3, #4]
 8000b40:	deff      	udf	#255	; 0xff
 8000b42:	46c0      	nop			; (mov r8, r8)
 8000b44:	200001c4 	.word	0x200001c4

08000b48 <__malloc_lock>:
 8000b48:	b510      	push	{r4, lr}
 8000b4a:	4802      	ldr	r0, [pc, #8]	; (8000b54 <__malloc_lock+0xc>)
 8000b4c:	f7ff ff0b 	bl	8000966 <__retarget_lock_acquire_recursive>
 8000b50:	bd10      	pop	{r4, pc}
 8000b52:	46c0      	nop			; (mov r8, r8)
 8000b54:	200001c0 	.word	0x200001c0

08000b58 <__malloc_unlock>:
 8000b58:	b510      	push	{r4, lr}
 8000b5a:	4802      	ldr	r0, [pc, #8]	; (8000b64 <__malloc_unlock+0xc>)
 8000b5c:	f7ff ff04 	bl	8000968 <__retarget_lock_release_recursive>
 8000b60:	bd10      	pop	{r4, pc}
 8000b62:	46c0      	nop			; (mov r8, r8)
 8000b64:	200001c0 	.word	0x200001c0

08000b68 <__sfputc_r>:
 8000b68:	6893      	ldr	r3, [r2, #8]
 8000b6a:	b510      	push	{r4, lr}
 8000b6c:	3b01      	subs	r3, #1
 8000b6e:	6093      	str	r3, [r2, #8]
 8000b70:	2b00      	cmp	r3, #0
 8000b72:	da04      	bge.n	8000b7e <__sfputc_r+0x16>
 8000b74:	6994      	ldr	r4, [r2, #24]
 8000b76:	42a3      	cmp	r3, r4
 8000b78:	db07      	blt.n	8000b8a <__sfputc_r+0x22>
 8000b7a:	290a      	cmp	r1, #10
 8000b7c:	d005      	beq.n	8000b8a <__sfputc_r+0x22>
 8000b7e:	6813      	ldr	r3, [r2, #0]
 8000b80:	1c58      	adds	r0, r3, #1
 8000b82:	6010      	str	r0, [r2, #0]
 8000b84:	7019      	strb	r1, [r3, #0]
 8000b86:	0008      	movs	r0, r1
 8000b88:	bd10      	pop	{r4, pc}
 8000b8a:	f000 fb66 	bl	800125a <__swbuf_r>
 8000b8e:	0001      	movs	r1, r0
 8000b90:	e7f9      	b.n	8000b86 <__sfputc_r+0x1e>

08000b92 <__sfputs_r>:
 8000b92:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b94:	0006      	movs	r6, r0
 8000b96:	000f      	movs	r7, r1
 8000b98:	0014      	movs	r4, r2
 8000b9a:	18d5      	adds	r5, r2, r3
 8000b9c:	42ac      	cmp	r4, r5
 8000b9e:	d101      	bne.n	8000ba4 <__sfputs_r+0x12>
 8000ba0:	2000      	movs	r0, #0
 8000ba2:	e007      	b.n	8000bb4 <__sfputs_r+0x22>
 8000ba4:	7821      	ldrb	r1, [r4, #0]
 8000ba6:	003a      	movs	r2, r7
 8000ba8:	0030      	movs	r0, r6
 8000baa:	f7ff ffdd 	bl	8000b68 <__sfputc_r>
 8000bae:	3401      	adds	r4, #1
 8000bb0:	1c43      	adds	r3, r0, #1
 8000bb2:	d1f3      	bne.n	8000b9c <__sfputs_r+0xa>
 8000bb4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000bb8 <_vfiprintf_r>:
 8000bb8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000bba:	b0a1      	sub	sp, #132	; 0x84
 8000bbc:	000f      	movs	r7, r1
 8000bbe:	0015      	movs	r5, r2
 8000bc0:	001e      	movs	r6, r3
 8000bc2:	9003      	str	r0, [sp, #12]
 8000bc4:	2800      	cmp	r0, #0
 8000bc6:	d004      	beq.n	8000bd2 <_vfiprintf_r+0x1a>
 8000bc8:	6a03      	ldr	r3, [r0, #32]
 8000bca:	2b00      	cmp	r3, #0
 8000bcc:	d101      	bne.n	8000bd2 <_vfiprintf_r+0x1a>
 8000bce:	f7ff fdb9 	bl	8000744 <__sinit>
 8000bd2:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8000bd4:	07db      	lsls	r3, r3, #31
 8000bd6:	d405      	bmi.n	8000be4 <_vfiprintf_r+0x2c>
 8000bd8:	89bb      	ldrh	r3, [r7, #12]
 8000bda:	059b      	lsls	r3, r3, #22
 8000bdc:	d402      	bmi.n	8000be4 <_vfiprintf_r+0x2c>
 8000bde:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8000be0:	f7ff fec1 	bl	8000966 <__retarget_lock_acquire_recursive>
 8000be4:	89bb      	ldrh	r3, [r7, #12]
 8000be6:	071b      	lsls	r3, r3, #28
 8000be8:	d502      	bpl.n	8000bf0 <_vfiprintf_r+0x38>
 8000bea:	693b      	ldr	r3, [r7, #16]
 8000bec:	2b00      	cmp	r3, #0
 8000bee:	d113      	bne.n	8000c18 <_vfiprintf_r+0x60>
 8000bf0:	0039      	movs	r1, r7
 8000bf2:	9803      	ldr	r0, [sp, #12]
 8000bf4:	f000 fb74 	bl	80012e0 <__swsetup_r>
 8000bf8:	2800      	cmp	r0, #0
 8000bfa:	d00d      	beq.n	8000c18 <_vfiprintf_r+0x60>
 8000bfc:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8000bfe:	07db      	lsls	r3, r3, #31
 8000c00:	d503      	bpl.n	8000c0a <_vfiprintf_r+0x52>
 8000c02:	2001      	movs	r0, #1
 8000c04:	4240      	negs	r0, r0
 8000c06:	b021      	add	sp, #132	; 0x84
 8000c08:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000c0a:	89bb      	ldrh	r3, [r7, #12]
 8000c0c:	059b      	lsls	r3, r3, #22
 8000c0e:	d4f8      	bmi.n	8000c02 <_vfiprintf_r+0x4a>
 8000c10:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8000c12:	f7ff fea9 	bl	8000968 <__retarget_lock_release_recursive>
 8000c16:	e7f4      	b.n	8000c02 <_vfiprintf_r+0x4a>
 8000c18:	2300      	movs	r3, #0
 8000c1a:	ac08      	add	r4, sp, #32
 8000c1c:	6163      	str	r3, [r4, #20]
 8000c1e:	3320      	adds	r3, #32
 8000c20:	7663      	strb	r3, [r4, #25]
 8000c22:	3310      	adds	r3, #16
 8000c24:	76a3      	strb	r3, [r4, #26]
 8000c26:	9607      	str	r6, [sp, #28]
 8000c28:	002e      	movs	r6, r5
 8000c2a:	7833      	ldrb	r3, [r6, #0]
 8000c2c:	2b00      	cmp	r3, #0
 8000c2e:	d001      	beq.n	8000c34 <_vfiprintf_r+0x7c>
 8000c30:	2b25      	cmp	r3, #37	; 0x25
 8000c32:	d148      	bne.n	8000cc6 <_vfiprintf_r+0x10e>
 8000c34:	1b73      	subs	r3, r6, r5
 8000c36:	9305      	str	r3, [sp, #20]
 8000c38:	42ae      	cmp	r6, r5
 8000c3a:	d00b      	beq.n	8000c54 <_vfiprintf_r+0x9c>
 8000c3c:	002a      	movs	r2, r5
 8000c3e:	0039      	movs	r1, r7
 8000c40:	9803      	ldr	r0, [sp, #12]
 8000c42:	f7ff ffa6 	bl	8000b92 <__sfputs_r>
 8000c46:	3001      	adds	r0, #1
 8000c48:	d100      	bne.n	8000c4c <_vfiprintf_r+0x94>
 8000c4a:	e0af      	b.n	8000dac <_vfiprintf_r+0x1f4>
 8000c4c:	6963      	ldr	r3, [r4, #20]
 8000c4e:	9a05      	ldr	r2, [sp, #20]
 8000c50:	189b      	adds	r3, r3, r2
 8000c52:	6163      	str	r3, [r4, #20]
 8000c54:	7833      	ldrb	r3, [r6, #0]
 8000c56:	2b00      	cmp	r3, #0
 8000c58:	d100      	bne.n	8000c5c <_vfiprintf_r+0xa4>
 8000c5a:	e0a7      	b.n	8000dac <_vfiprintf_r+0x1f4>
 8000c5c:	2201      	movs	r2, #1
 8000c5e:	2300      	movs	r3, #0
 8000c60:	4252      	negs	r2, r2
 8000c62:	6062      	str	r2, [r4, #4]
 8000c64:	a904      	add	r1, sp, #16
 8000c66:	3254      	adds	r2, #84	; 0x54
 8000c68:	1852      	adds	r2, r2, r1
 8000c6a:	1c75      	adds	r5, r6, #1
 8000c6c:	6023      	str	r3, [r4, #0]
 8000c6e:	60e3      	str	r3, [r4, #12]
 8000c70:	60a3      	str	r3, [r4, #8]
 8000c72:	7013      	strb	r3, [r2, #0]
 8000c74:	65a3      	str	r3, [r4, #88]	; 0x58
 8000c76:	4b59      	ldr	r3, [pc, #356]	; (8000ddc <_vfiprintf_r+0x224>)
 8000c78:	2205      	movs	r2, #5
 8000c7a:	0018      	movs	r0, r3
 8000c7c:	7829      	ldrb	r1, [r5, #0]
 8000c7e:	9305      	str	r3, [sp, #20]
 8000c80:	f000 fba4 	bl	80013cc <memchr>
 8000c84:	1c6e      	adds	r6, r5, #1
 8000c86:	2800      	cmp	r0, #0
 8000c88:	d11f      	bne.n	8000cca <_vfiprintf_r+0x112>
 8000c8a:	6822      	ldr	r2, [r4, #0]
 8000c8c:	06d3      	lsls	r3, r2, #27
 8000c8e:	d504      	bpl.n	8000c9a <_vfiprintf_r+0xe2>
 8000c90:	2353      	movs	r3, #83	; 0x53
 8000c92:	a904      	add	r1, sp, #16
 8000c94:	185b      	adds	r3, r3, r1
 8000c96:	2120      	movs	r1, #32
 8000c98:	7019      	strb	r1, [r3, #0]
 8000c9a:	0713      	lsls	r3, r2, #28
 8000c9c:	d504      	bpl.n	8000ca8 <_vfiprintf_r+0xf0>
 8000c9e:	2353      	movs	r3, #83	; 0x53
 8000ca0:	a904      	add	r1, sp, #16
 8000ca2:	185b      	adds	r3, r3, r1
 8000ca4:	212b      	movs	r1, #43	; 0x2b
 8000ca6:	7019      	strb	r1, [r3, #0]
 8000ca8:	782b      	ldrb	r3, [r5, #0]
 8000caa:	2b2a      	cmp	r3, #42	; 0x2a
 8000cac:	d016      	beq.n	8000cdc <_vfiprintf_r+0x124>
 8000cae:	002e      	movs	r6, r5
 8000cb0:	2100      	movs	r1, #0
 8000cb2:	200a      	movs	r0, #10
 8000cb4:	68e3      	ldr	r3, [r4, #12]
 8000cb6:	7832      	ldrb	r2, [r6, #0]
 8000cb8:	1c75      	adds	r5, r6, #1
 8000cba:	3a30      	subs	r2, #48	; 0x30
 8000cbc:	2a09      	cmp	r2, #9
 8000cbe:	d94e      	bls.n	8000d5e <_vfiprintf_r+0x1a6>
 8000cc0:	2900      	cmp	r1, #0
 8000cc2:	d111      	bne.n	8000ce8 <_vfiprintf_r+0x130>
 8000cc4:	e017      	b.n	8000cf6 <_vfiprintf_r+0x13e>
 8000cc6:	3601      	adds	r6, #1
 8000cc8:	e7af      	b.n	8000c2a <_vfiprintf_r+0x72>
 8000cca:	9b05      	ldr	r3, [sp, #20]
 8000ccc:	6822      	ldr	r2, [r4, #0]
 8000cce:	1ac0      	subs	r0, r0, r3
 8000cd0:	2301      	movs	r3, #1
 8000cd2:	4083      	lsls	r3, r0
 8000cd4:	4313      	orrs	r3, r2
 8000cd6:	0035      	movs	r5, r6
 8000cd8:	6023      	str	r3, [r4, #0]
 8000cda:	e7cc      	b.n	8000c76 <_vfiprintf_r+0xbe>
 8000cdc:	9b07      	ldr	r3, [sp, #28]
 8000cde:	1d19      	adds	r1, r3, #4
 8000ce0:	681b      	ldr	r3, [r3, #0]
 8000ce2:	9107      	str	r1, [sp, #28]
 8000ce4:	2b00      	cmp	r3, #0
 8000ce6:	db01      	blt.n	8000cec <_vfiprintf_r+0x134>
 8000ce8:	930b      	str	r3, [sp, #44]	; 0x2c
 8000cea:	e004      	b.n	8000cf6 <_vfiprintf_r+0x13e>
 8000cec:	425b      	negs	r3, r3
 8000cee:	60e3      	str	r3, [r4, #12]
 8000cf0:	2302      	movs	r3, #2
 8000cf2:	4313      	orrs	r3, r2
 8000cf4:	6023      	str	r3, [r4, #0]
 8000cf6:	7833      	ldrb	r3, [r6, #0]
 8000cf8:	2b2e      	cmp	r3, #46	; 0x2e
 8000cfa:	d10a      	bne.n	8000d12 <_vfiprintf_r+0x15a>
 8000cfc:	7873      	ldrb	r3, [r6, #1]
 8000cfe:	2b2a      	cmp	r3, #42	; 0x2a
 8000d00:	d135      	bne.n	8000d6e <_vfiprintf_r+0x1b6>
 8000d02:	9b07      	ldr	r3, [sp, #28]
 8000d04:	3602      	adds	r6, #2
 8000d06:	1d1a      	adds	r2, r3, #4
 8000d08:	681b      	ldr	r3, [r3, #0]
 8000d0a:	9207      	str	r2, [sp, #28]
 8000d0c:	2b00      	cmp	r3, #0
 8000d0e:	db2b      	blt.n	8000d68 <_vfiprintf_r+0x1b0>
 8000d10:	9309      	str	r3, [sp, #36]	; 0x24
 8000d12:	4d33      	ldr	r5, [pc, #204]	; (8000de0 <_vfiprintf_r+0x228>)
 8000d14:	2203      	movs	r2, #3
 8000d16:	0028      	movs	r0, r5
 8000d18:	7831      	ldrb	r1, [r6, #0]
 8000d1a:	f000 fb57 	bl	80013cc <memchr>
 8000d1e:	2800      	cmp	r0, #0
 8000d20:	d006      	beq.n	8000d30 <_vfiprintf_r+0x178>
 8000d22:	2340      	movs	r3, #64	; 0x40
 8000d24:	1b40      	subs	r0, r0, r5
 8000d26:	4083      	lsls	r3, r0
 8000d28:	6822      	ldr	r2, [r4, #0]
 8000d2a:	3601      	adds	r6, #1
 8000d2c:	4313      	orrs	r3, r2
 8000d2e:	6023      	str	r3, [r4, #0]
 8000d30:	7831      	ldrb	r1, [r6, #0]
 8000d32:	2206      	movs	r2, #6
 8000d34:	482b      	ldr	r0, [pc, #172]	; (8000de4 <_vfiprintf_r+0x22c>)
 8000d36:	1c75      	adds	r5, r6, #1
 8000d38:	7621      	strb	r1, [r4, #24]
 8000d3a:	f000 fb47 	bl	80013cc <memchr>
 8000d3e:	2800      	cmp	r0, #0
 8000d40:	d043      	beq.n	8000dca <_vfiprintf_r+0x212>
 8000d42:	4b29      	ldr	r3, [pc, #164]	; (8000de8 <_vfiprintf_r+0x230>)
 8000d44:	2b00      	cmp	r3, #0
 8000d46:	d125      	bne.n	8000d94 <_vfiprintf_r+0x1dc>
 8000d48:	2207      	movs	r2, #7
 8000d4a:	9b07      	ldr	r3, [sp, #28]
 8000d4c:	3307      	adds	r3, #7
 8000d4e:	4393      	bics	r3, r2
 8000d50:	3308      	adds	r3, #8
 8000d52:	9307      	str	r3, [sp, #28]
 8000d54:	6963      	ldr	r3, [r4, #20]
 8000d56:	9a04      	ldr	r2, [sp, #16]
 8000d58:	189b      	adds	r3, r3, r2
 8000d5a:	6163      	str	r3, [r4, #20]
 8000d5c:	e764      	b.n	8000c28 <_vfiprintf_r+0x70>
 8000d5e:	4343      	muls	r3, r0
 8000d60:	002e      	movs	r6, r5
 8000d62:	2101      	movs	r1, #1
 8000d64:	189b      	adds	r3, r3, r2
 8000d66:	e7a6      	b.n	8000cb6 <_vfiprintf_r+0xfe>
 8000d68:	2301      	movs	r3, #1
 8000d6a:	425b      	negs	r3, r3
 8000d6c:	e7d0      	b.n	8000d10 <_vfiprintf_r+0x158>
 8000d6e:	2300      	movs	r3, #0
 8000d70:	200a      	movs	r0, #10
 8000d72:	001a      	movs	r2, r3
 8000d74:	3601      	adds	r6, #1
 8000d76:	6063      	str	r3, [r4, #4]
 8000d78:	7831      	ldrb	r1, [r6, #0]
 8000d7a:	1c75      	adds	r5, r6, #1
 8000d7c:	3930      	subs	r1, #48	; 0x30
 8000d7e:	2909      	cmp	r1, #9
 8000d80:	d903      	bls.n	8000d8a <_vfiprintf_r+0x1d2>
 8000d82:	2b00      	cmp	r3, #0
 8000d84:	d0c5      	beq.n	8000d12 <_vfiprintf_r+0x15a>
 8000d86:	9209      	str	r2, [sp, #36]	; 0x24
 8000d88:	e7c3      	b.n	8000d12 <_vfiprintf_r+0x15a>
 8000d8a:	4342      	muls	r2, r0
 8000d8c:	002e      	movs	r6, r5
 8000d8e:	2301      	movs	r3, #1
 8000d90:	1852      	adds	r2, r2, r1
 8000d92:	e7f1      	b.n	8000d78 <_vfiprintf_r+0x1c0>
 8000d94:	aa07      	add	r2, sp, #28
 8000d96:	9200      	str	r2, [sp, #0]
 8000d98:	0021      	movs	r1, r4
 8000d9a:	003a      	movs	r2, r7
 8000d9c:	4b13      	ldr	r3, [pc, #76]	; (8000dec <_vfiprintf_r+0x234>)
 8000d9e:	9803      	ldr	r0, [sp, #12]
 8000da0:	e000      	b.n	8000da4 <_vfiprintf_r+0x1ec>
 8000da2:	bf00      	nop
 8000da4:	9004      	str	r0, [sp, #16]
 8000da6:	9b04      	ldr	r3, [sp, #16]
 8000da8:	3301      	adds	r3, #1
 8000daa:	d1d3      	bne.n	8000d54 <_vfiprintf_r+0x19c>
 8000dac:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8000dae:	07db      	lsls	r3, r3, #31
 8000db0:	d405      	bmi.n	8000dbe <_vfiprintf_r+0x206>
 8000db2:	89bb      	ldrh	r3, [r7, #12]
 8000db4:	059b      	lsls	r3, r3, #22
 8000db6:	d402      	bmi.n	8000dbe <_vfiprintf_r+0x206>
 8000db8:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8000dba:	f7ff fdd5 	bl	8000968 <__retarget_lock_release_recursive>
 8000dbe:	89bb      	ldrh	r3, [r7, #12]
 8000dc0:	065b      	lsls	r3, r3, #25
 8000dc2:	d500      	bpl.n	8000dc6 <_vfiprintf_r+0x20e>
 8000dc4:	e71d      	b.n	8000c02 <_vfiprintf_r+0x4a>
 8000dc6:	980d      	ldr	r0, [sp, #52]	; 0x34
 8000dc8:	e71d      	b.n	8000c06 <_vfiprintf_r+0x4e>
 8000dca:	aa07      	add	r2, sp, #28
 8000dcc:	9200      	str	r2, [sp, #0]
 8000dce:	0021      	movs	r1, r4
 8000dd0:	003a      	movs	r2, r7
 8000dd2:	4b06      	ldr	r3, [pc, #24]	; (8000dec <_vfiprintf_r+0x234>)
 8000dd4:	9803      	ldr	r0, [sp, #12]
 8000dd6:	f000 f87b 	bl	8000ed0 <_printf_i>
 8000dda:	e7e3      	b.n	8000da4 <_vfiprintf_r+0x1ec>
 8000ddc:	08001521 	.word	0x08001521
 8000de0:	08001527 	.word	0x08001527
 8000de4:	0800152b 	.word	0x0800152b
 8000de8:	00000000 	.word	0x00000000
 8000dec:	08000b93 	.word	0x08000b93

08000df0 <_printf_common>:
 8000df0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000df2:	0016      	movs	r6, r2
 8000df4:	9301      	str	r3, [sp, #4]
 8000df6:	688a      	ldr	r2, [r1, #8]
 8000df8:	690b      	ldr	r3, [r1, #16]
 8000dfa:	000c      	movs	r4, r1
 8000dfc:	9000      	str	r0, [sp, #0]
 8000dfe:	4293      	cmp	r3, r2
 8000e00:	da00      	bge.n	8000e04 <_printf_common+0x14>
 8000e02:	0013      	movs	r3, r2
 8000e04:	0022      	movs	r2, r4
 8000e06:	6033      	str	r3, [r6, #0]
 8000e08:	3243      	adds	r2, #67	; 0x43
 8000e0a:	7812      	ldrb	r2, [r2, #0]
 8000e0c:	2a00      	cmp	r2, #0
 8000e0e:	d001      	beq.n	8000e14 <_printf_common+0x24>
 8000e10:	3301      	adds	r3, #1
 8000e12:	6033      	str	r3, [r6, #0]
 8000e14:	6823      	ldr	r3, [r4, #0]
 8000e16:	069b      	lsls	r3, r3, #26
 8000e18:	d502      	bpl.n	8000e20 <_printf_common+0x30>
 8000e1a:	6833      	ldr	r3, [r6, #0]
 8000e1c:	3302      	adds	r3, #2
 8000e1e:	6033      	str	r3, [r6, #0]
 8000e20:	6822      	ldr	r2, [r4, #0]
 8000e22:	2306      	movs	r3, #6
 8000e24:	0015      	movs	r5, r2
 8000e26:	401d      	ands	r5, r3
 8000e28:	421a      	tst	r2, r3
 8000e2a:	d027      	beq.n	8000e7c <_printf_common+0x8c>
 8000e2c:	0023      	movs	r3, r4
 8000e2e:	3343      	adds	r3, #67	; 0x43
 8000e30:	781b      	ldrb	r3, [r3, #0]
 8000e32:	1e5a      	subs	r2, r3, #1
 8000e34:	4193      	sbcs	r3, r2
 8000e36:	6822      	ldr	r2, [r4, #0]
 8000e38:	0692      	lsls	r2, r2, #26
 8000e3a:	d430      	bmi.n	8000e9e <_printf_common+0xae>
 8000e3c:	0022      	movs	r2, r4
 8000e3e:	9901      	ldr	r1, [sp, #4]
 8000e40:	9800      	ldr	r0, [sp, #0]
 8000e42:	9d08      	ldr	r5, [sp, #32]
 8000e44:	3243      	adds	r2, #67	; 0x43
 8000e46:	47a8      	blx	r5
 8000e48:	3001      	adds	r0, #1
 8000e4a:	d025      	beq.n	8000e98 <_printf_common+0xa8>
 8000e4c:	2206      	movs	r2, #6
 8000e4e:	6823      	ldr	r3, [r4, #0]
 8000e50:	2500      	movs	r5, #0
 8000e52:	4013      	ands	r3, r2
 8000e54:	2b04      	cmp	r3, #4
 8000e56:	d105      	bne.n	8000e64 <_printf_common+0x74>
 8000e58:	6833      	ldr	r3, [r6, #0]
 8000e5a:	68e5      	ldr	r5, [r4, #12]
 8000e5c:	1aed      	subs	r5, r5, r3
 8000e5e:	43eb      	mvns	r3, r5
 8000e60:	17db      	asrs	r3, r3, #31
 8000e62:	401d      	ands	r5, r3
 8000e64:	68a3      	ldr	r3, [r4, #8]
 8000e66:	6922      	ldr	r2, [r4, #16]
 8000e68:	4293      	cmp	r3, r2
 8000e6a:	dd01      	ble.n	8000e70 <_printf_common+0x80>
 8000e6c:	1a9b      	subs	r3, r3, r2
 8000e6e:	18ed      	adds	r5, r5, r3
 8000e70:	2600      	movs	r6, #0
 8000e72:	42b5      	cmp	r5, r6
 8000e74:	d120      	bne.n	8000eb8 <_printf_common+0xc8>
 8000e76:	2000      	movs	r0, #0
 8000e78:	e010      	b.n	8000e9c <_printf_common+0xac>
 8000e7a:	3501      	adds	r5, #1
 8000e7c:	68e3      	ldr	r3, [r4, #12]
 8000e7e:	6832      	ldr	r2, [r6, #0]
 8000e80:	1a9b      	subs	r3, r3, r2
 8000e82:	42ab      	cmp	r3, r5
 8000e84:	ddd2      	ble.n	8000e2c <_printf_common+0x3c>
 8000e86:	0022      	movs	r2, r4
 8000e88:	2301      	movs	r3, #1
 8000e8a:	9901      	ldr	r1, [sp, #4]
 8000e8c:	9800      	ldr	r0, [sp, #0]
 8000e8e:	9f08      	ldr	r7, [sp, #32]
 8000e90:	3219      	adds	r2, #25
 8000e92:	47b8      	blx	r7
 8000e94:	3001      	adds	r0, #1
 8000e96:	d1f0      	bne.n	8000e7a <_printf_common+0x8a>
 8000e98:	2001      	movs	r0, #1
 8000e9a:	4240      	negs	r0, r0
 8000e9c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000e9e:	2030      	movs	r0, #48	; 0x30
 8000ea0:	18e1      	adds	r1, r4, r3
 8000ea2:	3143      	adds	r1, #67	; 0x43
 8000ea4:	7008      	strb	r0, [r1, #0]
 8000ea6:	0021      	movs	r1, r4
 8000ea8:	1c5a      	adds	r2, r3, #1
 8000eaa:	3145      	adds	r1, #69	; 0x45
 8000eac:	7809      	ldrb	r1, [r1, #0]
 8000eae:	18a2      	adds	r2, r4, r2
 8000eb0:	3243      	adds	r2, #67	; 0x43
 8000eb2:	3302      	adds	r3, #2
 8000eb4:	7011      	strb	r1, [r2, #0]
 8000eb6:	e7c1      	b.n	8000e3c <_printf_common+0x4c>
 8000eb8:	0022      	movs	r2, r4
 8000eba:	2301      	movs	r3, #1
 8000ebc:	9901      	ldr	r1, [sp, #4]
 8000ebe:	9800      	ldr	r0, [sp, #0]
 8000ec0:	9f08      	ldr	r7, [sp, #32]
 8000ec2:	321a      	adds	r2, #26
 8000ec4:	47b8      	blx	r7
 8000ec6:	3001      	adds	r0, #1
 8000ec8:	d0e6      	beq.n	8000e98 <_printf_common+0xa8>
 8000eca:	3601      	adds	r6, #1
 8000ecc:	e7d1      	b.n	8000e72 <_printf_common+0x82>
	...

08000ed0 <_printf_i>:
 8000ed0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000ed2:	b08b      	sub	sp, #44	; 0x2c
 8000ed4:	9206      	str	r2, [sp, #24]
 8000ed6:	000a      	movs	r2, r1
 8000ed8:	3243      	adds	r2, #67	; 0x43
 8000eda:	9307      	str	r3, [sp, #28]
 8000edc:	9005      	str	r0, [sp, #20]
 8000ede:	9204      	str	r2, [sp, #16]
 8000ee0:	7e0a      	ldrb	r2, [r1, #24]
 8000ee2:	000c      	movs	r4, r1
 8000ee4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8000ee6:	2a78      	cmp	r2, #120	; 0x78
 8000ee8:	d809      	bhi.n	8000efe <_printf_i+0x2e>
 8000eea:	2a62      	cmp	r2, #98	; 0x62
 8000eec:	d80b      	bhi.n	8000f06 <_printf_i+0x36>
 8000eee:	2a00      	cmp	r2, #0
 8000ef0:	d100      	bne.n	8000ef4 <_printf_i+0x24>
 8000ef2:	e0be      	b.n	8001072 <_printf_i+0x1a2>
 8000ef4:	497c      	ldr	r1, [pc, #496]	; (80010e8 <_printf_i+0x218>)
 8000ef6:	9103      	str	r1, [sp, #12]
 8000ef8:	2a58      	cmp	r2, #88	; 0x58
 8000efa:	d100      	bne.n	8000efe <_printf_i+0x2e>
 8000efc:	e093      	b.n	8001026 <_printf_i+0x156>
 8000efe:	0026      	movs	r6, r4
 8000f00:	3642      	adds	r6, #66	; 0x42
 8000f02:	7032      	strb	r2, [r6, #0]
 8000f04:	e022      	b.n	8000f4c <_printf_i+0x7c>
 8000f06:	0010      	movs	r0, r2
 8000f08:	3863      	subs	r0, #99	; 0x63
 8000f0a:	2815      	cmp	r0, #21
 8000f0c:	d8f7      	bhi.n	8000efe <_printf_i+0x2e>
 8000f0e:	f7ff f8fb 	bl	8000108 <__gnu_thumb1_case_shi>
 8000f12:	0016      	.short	0x0016
 8000f14:	fff6001f 	.word	0xfff6001f
 8000f18:	fff6fff6 	.word	0xfff6fff6
 8000f1c:	001ffff6 	.word	0x001ffff6
 8000f20:	fff6fff6 	.word	0xfff6fff6
 8000f24:	fff6fff6 	.word	0xfff6fff6
 8000f28:	003600a3 	.word	0x003600a3
 8000f2c:	fff60083 	.word	0xfff60083
 8000f30:	00b4fff6 	.word	0x00b4fff6
 8000f34:	0036fff6 	.word	0x0036fff6
 8000f38:	fff6fff6 	.word	0xfff6fff6
 8000f3c:	0087      	.short	0x0087
 8000f3e:	0026      	movs	r6, r4
 8000f40:	681a      	ldr	r2, [r3, #0]
 8000f42:	3642      	adds	r6, #66	; 0x42
 8000f44:	1d11      	adds	r1, r2, #4
 8000f46:	6019      	str	r1, [r3, #0]
 8000f48:	6813      	ldr	r3, [r2, #0]
 8000f4a:	7033      	strb	r3, [r6, #0]
 8000f4c:	2301      	movs	r3, #1
 8000f4e:	e0a2      	b.n	8001096 <_printf_i+0x1c6>
 8000f50:	6818      	ldr	r0, [r3, #0]
 8000f52:	6809      	ldr	r1, [r1, #0]
 8000f54:	1d02      	adds	r2, r0, #4
 8000f56:	060d      	lsls	r5, r1, #24
 8000f58:	d50b      	bpl.n	8000f72 <_printf_i+0xa2>
 8000f5a:	6805      	ldr	r5, [r0, #0]
 8000f5c:	601a      	str	r2, [r3, #0]
 8000f5e:	2d00      	cmp	r5, #0
 8000f60:	da03      	bge.n	8000f6a <_printf_i+0x9a>
 8000f62:	232d      	movs	r3, #45	; 0x2d
 8000f64:	9a04      	ldr	r2, [sp, #16]
 8000f66:	426d      	negs	r5, r5
 8000f68:	7013      	strb	r3, [r2, #0]
 8000f6a:	4b5f      	ldr	r3, [pc, #380]	; (80010e8 <_printf_i+0x218>)
 8000f6c:	270a      	movs	r7, #10
 8000f6e:	9303      	str	r3, [sp, #12]
 8000f70:	e01b      	b.n	8000faa <_printf_i+0xda>
 8000f72:	6805      	ldr	r5, [r0, #0]
 8000f74:	601a      	str	r2, [r3, #0]
 8000f76:	0649      	lsls	r1, r1, #25
 8000f78:	d5f1      	bpl.n	8000f5e <_printf_i+0x8e>
 8000f7a:	b22d      	sxth	r5, r5
 8000f7c:	e7ef      	b.n	8000f5e <_printf_i+0x8e>
 8000f7e:	680d      	ldr	r5, [r1, #0]
 8000f80:	6819      	ldr	r1, [r3, #0]
 8000f82:	1d08      	adds	r0, r1, #4
 8000f84:	6018      	str	r0, [r3, #0]
 8000f86:	062e      	lsls	r6, r5, #24
 8000f88:	d501      	bpl.n	8000f8e <_printf_i+0xbe>
 8000f8a:	680d      	ldr	r5, [r1, #0]
 8000f8c:	e003      	b.n	8000f96 <_printf_i+0xc6>
 8000f8e:	066d      	lsls	r5, r5, #25
 8000f90:	d5fb      	bpl.n	8000f8a <_printf_i+0xba>
 8000f92:	680d      	ldr	r5, [r1, #0]
 8000f94:	b2ad      	uxth	r5, r5
 8000f96:	4b54      	ldr	r3, [pc, #336]	; (80010e8 <_printf_i+0x218>)
 8000f98:	2708      	movs	r7, #8
 8000f9a:	9303      	str	r3, [sp, #12]
 8000f9c:	2a6f      	cmp	r2, #111	; 0x6f
 8000f9e:	d000      	beq.n	8000fa2 <_printf_i+0xd2>
 8000fa0:	3702      	adds	r7, #2
 8000fa2:	0023      	movs	r3, r4
 8000fa4:	2200      	movs	r2, #0
 8000fa6:	3343      	adds	r3, #67	; 0x43
 8000fa8:	701a      	strb	r2, [r3, #0]
 8000faa:	6863      	ldr	r3, [r4, #4]
 8000fac:	60a3      	str	r3, [r4, #8]
 8000fae:	2b00      	cmp	r3, #0
 8000fb0:	db03      	blt.n	8000fba <_printf_i+0xea>
 8000fb2:	2104      	movs	r1, #4
 8000fb4:	6822      	ldr	r2, [r4, #0]
 8000fb6:	438a      	bics	r2, r1
 8000fb8:	6022      	str	r2, [r4, #0]
 8000fba:	2d00      	cmp	r5, #0
 8000fbc:	d102      	bne.n	8000fc4 <_printf_i+0xf4>
 8000fbe:	9e04      	ldr	r6, [sp, #16]
 8000fc0:	2b00      	cmp	r3, #0
 8000fc2:	d00c      	beq.n	8000fde <_printf_i+0x10e>
 8000fc4:	9e04      	ldr	r6, [sp, #16]
 8000fc6:	0028      	movs	r0, r5
 8000fc8:	0039      	movs	r1, r7
 8000fca:	f7ff f92d 	bl	8000228 <__aeabi_uidivmod>
 8000fce:	9b03      	ldr	r3, [sp, #12]
 8000fd0:	3e01      	subs	r6, #1
 8000fd2:	5c5b      	ldrb	r3, [r3, r1]
 8000fd4:	7033      	strb	r3, [r6, #0]
 8000fd6:	002b      	movs	r3, r5
 8000fd8:	0005      	movs	r5, r0
 8000fda:	429f      	cmp	r7, r3
 8000fdc:	d9f3      	bls.n	8000fc6 <_printf_i+0xf6>
 8000fde:	2f08      	cmp	r7, #8
 8000fe0:	d109      	bne.n	8000ff6 <_printf_i+0x126>
 8000fe2:	6823      	ldr	r3, [r4, #0]
 8000fe4:	07db      	lsls	r3, r3, #31
 8000fe6:	d506      	bpl.n	8000ff6 <_printf_i+0x126>
 8000fe8:	6862      	ldr	r2, [r4, #4]
 8000fea:	6923      	ldr	r3, [r4, #16]
 8000fec:	429a      	cmp	r2, r3
 8000fee:	dc02      	bgt.n	8000ff6 <_printf_i+0x126>
 8000ff0:	2330      	movs	r3, #48	; 0x30
 8000ff2:	3e01      	subs	r6, #1
 8000ff4:	7033      	strb	r3, [r6, #0]
 8000ff6:	9b04      	ldr	r3, [sp, #16]
 8000ff8:	1b9b      	subs	r3, r3, r6
 8000ffa:	6123      	str	r3, [r4, #16]
 8000ffc:	9b07      	ldr	r3, [sp, #28]
 8000ffe:	0021      	movs	r1, r4
 8001000:	9300      	str	r3, [sp, #0]
 8001002:	9805      	ldr	r0, [sp, #20]
 8001004:	9b06      	ldr	r3, [sp, #24]
 8001006:	aa09      	add	r2, sp, #36	; 0x24
 8001008:	f7ff fef2 	bl	8000df0 <_printf_common>
 800100c:	3001      	adds	r0, #1
 800100e:	d147      	bne.n	80010a0 <_printf_i+0x1d0>
 8001010:	2001      	movs	r0, #1
 8001012:	4240      	negs	r0, r0
 8001014:	b00b      	add	sp, #44	; 0x2c
 8001016:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001018:	2220      	movs	r2, #32
 800101a:	6809      	ldr	r1, [r1, #0]
 800101c:	430a      	orrs	r2, r1
 800101e:	6022      	str	r2, [r4, #0]
 8001020:	2278      	movs	r2, #120	; 0x78
 8001022:	4932      	ldr	r1, [pc, #200]	; (80010ec <_printf_i+0x21c>)
 8001024:	9103      	str	r1, [sp, #12]
 8001026:	0021      	movs	r1, r4
 8001028:	3145      	adds	r1, #69	; 0x45
 800102a:	700a      	strb	r2, [r1, #0]
 800102c:	6819      	ldr	r1, [r3, #0]
 800102e:	6822      	ldr	r2, [r4, #0]
 8001030:	c920      	ldmia	r1!, {r5}
 8001032:	0610      	lsls	r0, r2, #24
 8001034:	d402      	bmi.n	800103c <_printf_i+0x16c>
 8001036:	0650      	lsls	r0, r2, #25
 8001038:	d500      	bpl.n	800103c <_printf_i+0x16c>
 800103a:	b2ad      	uxth	r5, r5
 800103c:	6019      	str	r1, [r3, #0]
 800103e:	07d3      	lsls	r3, r2, #31
 8001040:	d502      	bpl.n	8001048 <_printf_i+0x178>
 8001042:	2320      	movs	r3, #32
 8001044:	4313      	orrs	r3, r2
 8001046:	6023      	str	r3, [r4, #0]
 8001048:	2710      	movs	r7, #16
 800104a:	2d00      	cmp	r5, #0
 800104c:	d1a9      	bne.n	8000fa2 <_printf_i+0xd2>
 800104e:	2220      	movs	r2, #32
 8001050:	6823      	ldr	r3, [r4, #0]
 8001052:	4393      	bics	r3, r2
 8001054:	6023      	str	r3, [r4, #0]
 8001056:	e7a4      	b.n	8000fa2 <_printf_i+0xd2>
 8001058:	681a      	ldr	r2, [r3, #0]
 800105a:	680d      	ldr	r5, [r1, #0]
 800105c:	1d10      	adds	r0, r2, #4
 800105e:	6949      	ldr	r1, [r1, #20]
 8001060:	6018      	str	r0, [r3, #0]
 8001062:	6813      	ldr	r3, [r2, #0]
 8001064:	062e      	lsls	r6, r5, #24
 8001066:	d501      	bpl.n	800106c <_printf_i+0x19c>
 8001068:	6019      	str	r1, [r3, #0]
 800106a:	e002      	b.n	8001072 <_printf_i+0x1a2>
 800106c:	066d      	lsls	r5, r5, #25
 800106e:	d5fb      	bpl.n	8001068 <_printf_i+0x198>
 8001070:	8019      	strh	r1, [r3, #0]
 8001072:	2300      	movs	r3, #0
 8001074:	9e04      	ldr	r6, [sp, #16]
 8001076:	6123      	str	r3, [r4, #16]
 8001078:	e7c0      	b.n	8000ffc <_printf_i+0x12c>
 800107a:	681a      	ldr	r2, [r3, #0]
 800107c:	1d11      	adds	r1, r2, #4
 800107e:	6019      	str	r1, [r3, #0]
 8001080:	6816      	ldr	r6, [r2, #0]
 8001082:	2100      	movs	r1, #0
 8001084:	0030      	movs	r0, r6
 8001086:	6862      	ldr	r2, [r4, #4]
 8001088:	f000 f9a0 	bl	80013cc <memchr>
 800108c:	2800      	cmp	r0, #0
 800108e:	d001      	beq.n	8001094 <_printf_i+0x1c4>
 8001090:	1b80      	subs	r0, r0, r6
 8001092:	6060      	str	r0, [r4, #4]
 8001094:	6863      	ldr	r3, [r4, #4]
 8001096:	6123      	str	r3, [r4, #16]
 8001098:	2300      	movs	r3, #0
 800109a:	9a04      	ldr	r2, [sp, #16]
 800109c:	7013      	strb	r3, [r2, #0]
 800109e:	e7ad      	b.n	8000ffc <_printf_i+0x12c>
 80010a0:	0032      	movs	r2, r6
 80010a2:	6923      	ldr	r3, [r4, #16]
 80010a4:	9906      	ldr	r1, [sp, #24]
 80010a6:	9805      	ldr	r0, [sp, #20]
 80010a8:	9d07      	ldr	r5, [sp, #28]
 80010aa:	47a8      	blx	r5
 80010ac:	3001      	adds	r0, #1
 80010ae:	d0af      	beq.n	8001010 <_printf_i+0x140>
 80010b0:	6823      	ldr	r3, [r4, #0]
 80010b2:	079b      	lsls	r3, r3, #30
 80010b4:	d415      	bmi.n	80010e2 <_printf_i+0x212>
 80010b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80010b8:	68e0      	ldr	r0, [r4, #12]
 80010ba:	4298      	cmp	r0, r3
 80010bc:	daaa      	bge.n	8001014 <_printf_i+0x144>
 80010be:	0018      	movs	r0, r3
 80010c0:	e7a8      	b.n	8001014 <_printf_i+0x144>
 80010c2:	0022      	movs	r2, r4
 80010c4:	2301      	movs	r3, #1
 80010c6:	9906      	ldr	r1, [sp, #24]
 80010c8:	9805      	ldr	r0, [sp, #20]
 80010ca:	9e07      	ldr	r6, [sp, #28]
 80010cc:	3219      	adds	r2, #25
 80010ce:	47b0      	blx	r6
 80010d0:	3001      	adds	r0, #1
 80010d2:	d09d      	beq.n	8001010 <_printf_i+0x140>
 80010d4:	3501      	adds	r5, #1
 80010d6:	68e3      	ldr	r3, [r4, #12]
 80010d8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80010da:	1a9b      	subs	r3, r3, r2
 80010dc:	42ab      	cmp	r3, r5
 80010de:	dcf0      	bgt.n	80010c2 <_printf_i+0x1f2>
 80010e0:	e7e9      	b.n	80010b6 <_printf_i+0x1e6>
 80010e2:	2500      	movs	r5, #0
 80010e4:	e7f7      	b.n	80010d6 <_printf_i+0x206>
 80010e6:	46c0      	nop			; (mov r8, r8)
 80010e8:	08001532 	.word	0x08001532
 80010ec:	08001543 	.word	0x08001543

080010f0 <__sflush_r>:
 80010f0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80010f2:	898b      	ldrh	r3, [r1, #12]
 80010f4:	0005      	movs	r5, r0
 80010f6:	000c      	movs	r4, r1
 80010f8:	071a      	lsls	r2, r3, #28
 80010fa:	d45c      	bmi.n	80011b6 <__sflush_r+0xc6>
 80010fc:	684a      	ldr	r2, [r1, #4]
 80010fe:	2a00      	cmp	r2, #0
 8001100:	dc04      	bgt.n	800110c <__sflush_r+0x1c>
 8001102:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 8001104:	2a00      	cmp	r2, #0
 8001106:	dc01      	bgt.n	800110c <__sflush_r+0x1c>
 8001108:	2000      	movs	r0, #0
 800110a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800110c:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800110e:	2f00      	cmp	r7, #0
 8001110:	d0fa      	beq.n	8001108 <__sflush_r+0x18>
 8001112:	2200      	movs	r2, #0
 8001114:	2080      	movs	r0, #128	; 0x80
 8001116:	682e      	ldr	r6, [r5, #0]
 8001118:	602a      	str	r2, [r5, #0]
 800111a:	001a      	movs	r2, r3
 800111c:	0140      	lsls	r0, r0, #5
 800111e:	6a21      	ldr	r1, [r4, #32]
 8001120:	4002      	ands	r2, r0
 8001122:	4203      	tst	r3, r0
 8001124:	d034      	beq.n	8001190 <__sflush_r+0xa0>
 8001126:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001128:	89a3      	ldrh	r3, [r4, #12]
 800112a:	075b      	lsls	r3, r3, #29
 800112c:	d506      	bpl.n	800113c <__sflush_r+0x4c>
 800112e:	6863      	ldr	r3, [r4, #4]
 8001130:	1ac0      	subs	r0, r0, r3
 8001132:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001134:	2b00      	cmp	r3, #0
 8001136:	d001      	beq.n	800113c <__sflush_r+0x4c>
 8001138:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800113a:	1ac0      	subs	r0, r0, r3
 800113c:	0002      	movs	r2, r0
 800113e:	2300      	movs	r3, #0
 8001140:	0028      	movs	r0, r5
 8001142:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8001144:	6a21      	ldr	r1, [r4, #32]
 8001146:	47b8      	blx	r7
 8001148:	89a2      	ldrh	r2, [r4, #12]
 800114a:	1c43      	adds	r3, r0, #1
 800114c:	d106      	bne.n	800115c <__sflush_r+0x6c>
 800114e:	6829      	ldr	r1, [r5, #0]
 8001150:	291d      	cmp	r1, #29
 8001152:	d82c      	bhi.n	80011ae <__sflush_r+0xbe>
 8001154:	4b2a      	ldr	r3, [pc, #168]	; (8001200 <__sflush_r+0x110>)
 8001156:	410b      	asrs	r3, r1
 8001158:	07db      	lsls	r3, r3, #31
 800115a:	d428      	bmi.n	80011ae <__sflush_r+0xbe>
 800115c:	2300      	movs	r3, #0
 800115e:	6063      	str	r3, [r4, #4]
 8001160:	6923      	ldr	r3, [r4, #16]
 8001162:	6023      	str	r3, [r4, #0]
 8001164:	04d2      	lsls	r2, r2, #19
 8001166:	d505      	bpl.n	8001174 <__sflush_r+0x84>
 8001168:	1c43      	adds	r3, r0, #1
 800116a:	d102      	bne.n	8001172 <__sflush_r+0x82>
 800116c:	682b      	ldr	r3, [r5, #0]
 800116e:	2b00      	cmp	r3, #0
 8001170:	d100      	bne.n	8001174 <__sflush_r+0x84>
 8001172:	6560      	str	r0, [r4, #84]	; 0x54
 8001174:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001176:	602e      	str	r6, [r5, #0]
 8001178:	2900      	cmp	r1, #0
 800117a:	d0c5      	beq.n	8001108 <__sflush_r+0x18>
 800117c:	0023      	movs	r3, r4
 800117e:	3344      	adds	r3, #68	; 0x44
 8001180:	4299      	cmp	r1, r3
 8001182:	d002      	beq.n	800118a <__sflush_r+0x9a>
 8001184:	0028      	movs	r0, r5
 8001186:	f7ff fbf1 	bl	800096c <_free_r>
 800118a:	2000      	movs	r0, #0
 800118c:	6360      	str	r0, [r4, #52]	; 0x34
 800118e:	e7bc      	b.n	800110a <__sflush_r+0x1a>
 8001190:	2301      	movs	r3, #1
 8001192:	0028      	movs	r0, r5
 8001194:	47b8      	blx	r7
 8001196:	1c43      	adds	r3, r0, #1
 8001198:	d1c6      	bne.n	8001128 <__sflush_r+0x38>
 800119a:	682b      	ldr	r3, [r5, #0]
 800119c:	2b00      	cmp	r3, #0
 800119e:	d0c3      	beq.n	8001128 <__sflush_r+0x38>
 80011a0:	2b1d      	cmp	r3, #29
 80011a2:	d001      	beq.n	80011a8 <__sflush_r+0xb8>
 80011a4:	2b16      	cmp	r3, #22
 80011a6:	d101      	bne.n	80011ac <__sflush_r+0xbc>
 80011a8:	602e      	str	r6, [r5, #0]
 80011aa:	e7ad      	b.n	8001108 <__sflush_r+0x18>
 80011ac:	89a2      	ldrh	r2, [r4, #12]
 80011ae:	2340      	movs	r3, #64	; 0x40
 80011b0:	4313      	orrs	r3, r2
 80011b2:	81a3      	strh	r3, [r4, #12]
 80011b4:	e7a9      	b.n	800110a <__sflush_r+0x1a>
 80011b6:	690e      	ldr	r6, [r1, #16]
 80011b8:	2e00      	cmp	r6, #0
 80011ba:	d0a5      	beq.n	8001108 <__sflush_r+0x18>
 80011bc:	680f      	ldr	r7, [r1, #0]
 80011be:	600e      	str	r6, [r1, #0]
 80011c0:	1bba      	subs	r2, r7, r6
 80011c2:	9201      	str	r2, [sp, #4]
 80011c4:	2200      	movs	r2, #0
 80011c6:	079b      	lsls	r3, r3, #30
 80011c8:	d100      	bne.n	80011cc <__sflush_r+0xdc>
 80011ca:	694a      	ldr	r2, [r1, #20]
 80011cc:	60a2      	str	r2, [r4, #8]
 80011ce:	9b01      	ldr	r3, [sp, #4]
 80011d0:	2b00      	cmp	r3, #0
 80011d2:	dd99      	ble.n	8001108 <__sflush_r+0x18>
 80011d4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80011d6:	0032      	movs	r2, r6
 80011d8:	001f      	movs	r7, r3
 80011da:	0028      	movs	r0, r5
 80011dc:	9b01      	ldr	r3, [sp, #4]
 80011de:	6a21      	ldr	r1, [r4, #32]
 80011e0:	47b8      	blx	r7
 80011e2:	2800      	cmp	r0, #0
 80011e4:	dc06      	bgt.n	80011f4 <__sflush_r+0x104>
 80011e6:	2340      	movs	r3, #64	; 0x40
 80011e8:	2001      	movs	r0, #1
 80011ea:	89a2      	ldrh	r2, [r4, #12]
 80011ec:	4240      	negs	r0, r0
 80011ee:	4313      	orrs	r3, r2
 80011f0:	81a3      	strh	r3, [r4, #12]
 80011f2:	e78a      	b.n	800110a <__sflush_r+0x1a>
 80011f4:	9b01      	ldr	r3, [sp, #4]
 80011f6:	1836      	adds	r6, r6, r0
 80011f8:	1a1b      	subs	r3, r3, r0
 80011fa:	9301      	str	r3, [sp, #4]
 80011fc:	e7e7      	b.n	80011ce <__sflush_r+0xde>
 80011fe:	46c0      	nop			; (mov r8, r8)
 8001200:	dfbffffe 	.word	0xdfbffffe

08001204 <_fflush_r>:
 8001204:	690b      	ldr	r3, [r1, #16]
 8001206:	b570      	push	{r4, r5, r6, lr}
 8001208:	0005      	movs	r5, r0
 800120a:	000c      	movs	r4, r1
 800120c:	2b00      	cmp	r3, #0
 800120e:	d102      	bne.n	8001216 <_fflush_r+0x12>
 8001210:	2500      	movs	r5, #0
 8001212:	0028      	movs	r0, r5
 8001214:	bd70      	pop	{r4, r5, r6, pc}
 8001216:	2800      	cmp	r0, #0
 8001218:	d004      	beq.n	8001224 <_fflush_r+0x20>
 800121a:	6a03      	ldr	r3, [r0, #32]
 800121c:	2b00      	cmp	r3, #0
 800121e:	d101      	bne.n	8001224 <_fflush_r+0x20>
 8001220:	f7ff fa90 	bl	8000744 <__sinit>
 8001224:	220c      	movs	r2, #12
 8001226:	5ea3      	ldrsh	r3, [r4, r2]
 8001228:	2b00      	cmp	r3, #0
 800122a:	d0f1      	beq.n	8001210 <_fflush_r+0xc>
 800122c:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800122e:	07d2      	lsls	r2, r2, #31
 8001230:	d404      	bmi.n	800123c <_fflush_r+0x38>
 8001232:	059b      	lsls	r3, r3, #22
 8001234:	d402      	bmi.n	800123c <_fflush_r+0x38>
 8001236:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001238:	f7ff fb95 	bl	8000966 <__retarget_lock_acquire_recursive>
 800123c:	0028      	movs	r0, r5
 800123e:	0021      	movs	r1, r4
 8001240:	f7ff ff56 	bl	80010f0 <__sflush_r>
 8001244:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001246:	0005      	movs	r5, r0
 8001248:	07db      	lsls	r3, r3, #31
 800124a:	d4e2      	bmi.n	8001212 <_fflush_r+0xe>
 800124c:	89a3      	ldrh	r3, [r4, #12]
 800124e:	059b      	lsls	r3, r3, #22
 8001250:	d4df      	bmi.n	8001212 <_fflush_r+0xe>
 8001252:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001254:	f7ff fb88 	bl	8000968 <__retarget_lock_release_recursive>
 8001258:	e7db      	b.n	8001212 <_fflush_r+0xe>

0800125a <__swbuf_r>:
 800125a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800125c:	0006      	movs	r6, r0
 800125e:	000d      	movs	r5, r1
 8001260:	0014      	movs	r4, r2
 8001262:	2800      	cmp	r0, #0
 8001264:	d004      	beq.n	8001270 <__swbuf_r+0x16>
 8001266:	6a03      	ldr	r3, [r0, #32]
 8001268:	2b00      	cmp	r3, #0
 800126a:	d101      	bne.n	8001270 <__swbuf_r+0x16>
 800126c:	f7ff fa6a 	bl	8000744 <__sinit>
 8001270:	69a3      	ldr	r3, [r4, #24]
 8001272:	60a3      	str	r3, [r4, #8]
 8001274:	89a3      	ldrh	r3, [r4, #12]
 8001276:	071b      	lsls	r3, r3, #28
 8001278:	d528      	bpl.n	80012cc <__swbuf_r+0x72>
 800127a:	6923      	ldr	r3, [r4, #16]
 800127c:	2b00      	cmp	r3, #0
 800127e:	d025      	beq.n	80012cc <__swbuf_r+0x72>
 8001280:	6923      	ldr	r3, [r4, #16]
 8001282:	6820      	ldr	r0, [r4, #0]
 8001284:	b2ef      	uxtb	r7, r5
 8001286:	1ac0      	subs	r0, r0, r3
 8001288:	6963      	ldr	r3, [r4, #20]
 800128a:	b2ed      	uxtb	r5, r5
 800128c:	4283      	cmp	r3, r0
 800128e:	dc05      	bgt.n	800129c <__swbuf_r+0x42>
 8001290:	0021      	movs	r1, r4
 8001292:	0030      	movs	r0, r6
 8001294:	f7ff ffb6 	bl	8001204 <_fflush_r>
 8001298:	2800      	cmp	r0, #0
 800129a:	d11d      	bne.n	80012d8 <__swbuf_r+0x7e>
 800129c:	68a3      	ldr	r3, [r4, #8]
 800129e:	3001      	adds	r0, #1
 80012a0:	3b01      	subs	r3, #1
 80012a2:	60a3      	str	r3, [r4, #8]
 80012a4:	6823      	ldr	r3, [r4, #0]
 80012a6:	1c5a      	adds	r2, r3, #1
 80012a8:	6022      	str	r2, [r4, #0]
 80012aa:	701f      	strb	r7, [r3, #0]
 80012ac:	6963      	ldr	r3, [r4, #20]
 80012ae:	4283      	cmp	r3, r0
 80012b0:	d004      	beq.n	80012bc <__swbuf_r+0x62>
 80012b2:	89a3      	ldrh	r3, [r4, #12]
 80012b4:	07db      	lsls	r3, r3, #31
 80012b6:	d507      	bpl.n	80012c8 <__swbuf_r+0x6e>
 80012b8:	2d0a      	cmp	r5, #10
 80012ba:	d105      	bne.n	80012c8 <__swbuf_r+0x6e>
 80012bc:	0021      	movs	r1, r4
 80012be:	0030      	movs	r0, r6
 80012c0:	f7ff ffa0 	bl	8001204 <_fflush_r>
 80012c4:	2800      	cmp	r0, #0
 80012c6:	d107      	bne.n	80012d8 <__swbuf_r+0x7e>
 80012c8:	0028      	movs	r0, r5
 80012ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80012cc:	0021      	movs	r1, r4
 80012ce:	0030      	movs	r0, r6
 80012d0:	f000 f806 	bl	80012e0 <__swsetup_r>
 80012d4:	2800      	cmp	r0, #0
 80012d6:	d0d3      	beq.n	8001280 <__swbuf_r+0x26>
 80012d8:	2501      	movs	r5, #1
 80012da:	426d      	negs	r5, r5
 80012dc:	e7f4      	b.n	80012c8 <__swbuf_r+0x6e>
	...

080012e0 <__swsetup_r>:
 80012e0:	4b30      	ldr	r3, [pc, #192]	; (80013a4 <__swsetup_r+0xc4>)
 80012e2:	b570      	push	{r4, r5, r6, lr}
 80012e4:	0005      	movs	r5, r0
 80012e6:	6818      	ldr	r0, [r3, #0]
 80012e8:	000c      	movs	r4, r1
 80012ea:	2800      	cmp	r0, #0
 80012ec:	d004      	beq.n	80012f8 <__swsetup_r+0x18>
 80012ee:	6a03      	ldr	r3, [r0, #32]
 80012f0:	2b00      	cmp	r3, #0
 80012f2:	d101      	bne.n	80012f8 <__swsetup_r+0x18>
 80012f4:	f7ff fa26 	bl	8000744 <__sinit>
 80012f8:	230c      	movs	r3, #12
 80012fa:	5ee2      	ldrsh	r2, [r4, r3]
 80012fc:	b293      	uxth	r3, r2
 80012fe:	0711      	lsls	r1, r2, #28
 8001300:	d423      	bmi.n	800134a <__swsetup_r+0x6a>
 8001302:	06d9      	lsls	r1, r3, #27
 8001304:	d407      	bmi.n	8001316 <__swsetup_r+0x36>
 8001306:	2309      	movs	r3, #9
 8001308:	2001      	movs	r0, #1
 800130a:	602b      	str	r3, [r5, #0]
 800130c:	3337      	adds	r3, #55	; 0x37
 800130e:	4313      	orrs	r3, r2
 8001310:	81a3      	strh	r3, [r4, #12]
 8001312:	4240      	negs	r0, r0
 8001314:	bd70      	pop	{r4, r5, r6, pc}
 8001316:	075b      	lsls	r3, r3, #29
 8001318:	d513      	bpl.n	8001342 <__swsetup_r+0x62>
 800131a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800131c:	2900      	cmp	r1, #0
 800131e:	d008      	beq.n	8001332 <__swsetup_r+0x52>
 8001320:	0023      	movs	r3, r4
 8001322:	3344      	adds	r3, #68	; 0x44
 8001324:	4299      	cmp	r1, r3
 8001326:	d002      	beq.n	800132e <__swsetup_r+0x4e>
 8001328:	0028      	movs	r0, r5
 800132a:	f7ff fb1f 	bl	800096c <_free_r>
 800132e:	2300      	movs	r3, #0
 8001330:	6363      	str	r3, [r4, #52]	; 0x34
 8001332:	2224      	movs	r2, #36	; 0x24
 8001334:	89a3      	ldrh	r3, [r4, #12]
 8001336:	4393      	bics	r3, r2
 8001338:	81a3      	strh	r3, [r4, #12]
 800133a:	2300      	movs	r3, #0
 800133c:	6063      	str	r3, [r4, #4]
 800133e:	6923      	ldr	r3, [r4, #16]
 8001340:	6023      	str	r3, [r4, #0]
 8001342:	2308      	movs	r3, #8
 8001344:	89a2      	ldrh	r2, [r4, #12]
 8001346:	4313      	orrs	r3, r2
 8001348:	81a3      	strh	r3, [r4, #12]
 800134a:	6923      	ldr	r3, [r4, #16]
 800134c:	2b00      	cmp	r3, #0
 800134e:	d10b      	bne.n	8001368 <__swsetup_r+0x88>
 8001350:	21a0      	movs	r1, #160	; 0xa0
 8001352:	2280      	movs	r2, #128	; 0x80
 8001354:	89a3      	ldrh	r3, [r4, #12]
 8001356:	0089      	lsls	r1, r1, #2
 8001358:	0092      	lsls	r2, r2, #2
 800135a:	400b      	ands	r3, r1
 800135c:	4293      	cmp	r3, r2
 800135e:	d003      	beq.n	8001368 <__swsetup_r+0x88>
 8001360:	0021      	movs	r1, r4
 8001362:	0028      	movs	r0, r5
 8001364:	f000 f866 	bl	8001434 <__smakebuf_r>
 8001368:	220c      	movs	r2, #12
 800136a:	5ea3      	ldrsh	r3, [r4, r2]
 800136c:	2001      	movs	r0, #1
 800136e:	001a      	movs	r2, r3
 8001370:	b299      	uxth	r1, r3
 8001372:	4002      	ands	r2, r0
 8001374:	4203      	tst	r3, r0
 8001376:	d00f      	beq.n	8001398 <__swsetup_r+0xb8>
 8001378:	2200      	movs	r2, #0
 800137a:	60a2      	str	r2, [r4, #8]
 800137c:	6962      	ldr	r2, [r4, #20]
 800137e:	4252      	negs	r2, r2
 8001380:	61a2      	str	r2, [r4, #24]
 8001382:	2000      	movs	r0, #0
 8001384:	6922      	ldr	r2, [r4, #16]
 8001386:	4282      	cmp	r2, r0
 8001388:	d1c4      	bne.n	8001314 <__swsetup_r+0x34>
 800138a:	0609      	lsls	r1, r1, #24
 800138c:	d5c2      	bpl.n	8001314 <__swsetup_r+0x34>
 800138e:	2240      	movs	r2, #64	; 0x40
 8001390:	4313      	orrs	r3, r2
 8001392:	81a3      	strh	r3, [r4, #12]
 8001394:	3801      	subs	r0, #1
 8001396:	e7bd      	b.n	8001314 <__swsetup_r+0x34>
 8001398:	0788      	lsls	r0, r1, #30
 800139a:	d400      	bmi.n	800139e <__swsetup_r+0xbe>
 800139c:	6962      	ldr	r2, [r4, #20]
 800139e:	60a2      	str	r2, [r4, #8]
 80013a0:	e7ef      	b.n	8001382 <__swsetup_r+0xa2>
 80013a2:	46c0      	nop			; (mov r8, r8)
 80013a4:	20000058 	.word	0x20000058

080013a8 <_sbrk_r>:
 80013a8:	2300      	movs	r3, #0
 80013aa:	b570      	push	{r4, r5, r6, lr}
 80013ac:	4d06      	ldr	r5, [pc, #24]	; (80013c8 <_sbrk_r+0x20>)
 80013ae:	0004      	movs	r4, r0
 80013b0:	0008      	movs	r0, r1
 80013b2:	602b      	str	r3, [r5, #0]
 80013b4:	f7ff f8d6 	bl	8000564 <_sbrk>
 80013b8:	1c43      	adds	r3, r0, #1
 80013ba:	d103      	bne.n	80013c4 <_sbrk_r+0x1c>
 80013bc:	682b      	ldr	r3, [r5, #0]
 80013be:	2b00      	cmp	r3, #0
 80013c0:	d000      	beq.n	80013c4 <_sbrk_r+0x1c>
 80013c2:	6023      	str	r3, [r4, #0]
 80013c4:	bd70      	pop	{r4, r5, r6, pc}
 80013c6:	46c0      	nop			; (mov r8, r8)
 80013c8:	200001bc 	.word	0x200001bc

080013cc <memchr>:
 80013cc:	b2c9      	uxtb	r1, r1
 80013ce:	1882      	adds	r2, r0, r2
 80013d0:	4290      	cmp	r0, r2
 80013d2:	d101      	bne.n	80013d8 <memchr+0xc>
 80013d4:	2000      	movs	r0, #0
 80013d6:	4770      	bx	lr
 80013d8:	7803      	ldrb	r3, [r0, #0]
 80013da:	428b      	cmp	r3, r1
 80013dc:	d0fb      	beq.n	80013d6 <memchr+0xa>
 80013de:	3001      	adds	r0, #1
 80013e0:	e7f6      	b.n	80013d0 <memchr+0x4>
	...

080013e4 <__swhatbuf_r>:
 80013e4:	b570      	push	{r4, r5, r6, lr}
 80013e6:	000e      	movs	r6, r1
 80013e8:	001d      	movs	r5, r3
 80013ea:	230e      	movs	r3, #14
 80013ec:	5ec9      	ldrsh	r1, [r1, r3]
 80013ee:	0014      	movs	r4, r2
 80013f0:	b096      	sub	sp, #88	; 0x58
 80013f2:	2900      	cmp	r1, #0
 80013f4:	da0c      	bge.n	8001410 <__swhatbuf_r+0x2c>
 80013f6:	89b2      	ldrh	r2, [r6, #12]
 80013f8:	2380      	movs	r3, #128	; 0x80
 80013fa:	0011      	movs	r1, r2
 80013fc:	4019      	ands	r1, r3
 80013fe:	421a      	tst	r2, r3
 8001400:	d013      	beq.n	800142a <__swhatbuf_r+0x46>
 8001402:	2100      	movs	r1, #0
 8001404:	3b40      	subs	r3, #64	; 0x40
 8001406:	2000      	movs	r0, #0
 8001408:	6029      	str	r1, [r5, #0]
 800140a:	6023      	str	r3, [r4, #0]
 800140c:	b016      	add	sp, #88	; 0x58
 800140e:	bd70      	pop	{r4, r5, r6, pc}
 8001410:	466a      	mov	r2, sp
 8001412:	f000 f84d 	bl	80014b0 <_fstat_r>
 8001416:	2800      	cmp	r0, #0
 8001418:	dbed      	blt.n	80013f6 <__swhatbuf_r+0x12>
 800141a:	23f0      	movs	r3, #240	; 0xf0
 800141c:	9901      	ldr	r1, [sp, #4]
 800141e:	021b      	lsls	r3, r3, #8
 8001420:	4019      	ands	r1, r3
 8001422:	4b03      	ldr	r3, [pc, #12]	; (8001430 <__swhatbuf_r+0x4c>)
 8001424:	18c9      	adds	r1, r1, r3
 8001426:	424b      	negs	r3, r1
 8001428:	4159      	adcs	r1, r3
 800142a:	2380      	movs	r3, #128	; 0x80
 800142c:	00db      	lsls	r3, r3, #3
 800142e:	e7ea      	b.n	8001406 <__swhatbuf_r+0x22>
 8001430:	ffffe000 	.word	0xffffe000

08001434 <__smakebuf_r>:
 8001434:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001436:	2602      	movs	r6, #2
 8001438:	898b      	ldrh	r3, [r1, #12]
 800143a:	0005      	movs	r5, r0
 800143c:	000c      	movs	r4, r1
 800143e:	4233      	tst	r3, r6
 8001440:	d006      	beq.n	8001450 <__smakebuf_r+0x1c>
 8001442:	0023      	movs	r3, r4
 8001444:	3347      	adds	r3, #71	; 0x47
 8001446:	6023      	str	r3, [r4, #0]
 8001448:	6123      	str	r3, [r4, #16]
 800144a:	2301      	movs	r3, #1
 800144c:	6163      	str	r3, [r4, #20]
 800144e:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8001450:	466a      	mov	r2, sp
 8001452:	ab01      	add	r3, sp, #4
 8001454:	f7ff ffc6 	bl	80013e4 <__swhatbuf_r>
 8001458:	9900      	ldr	r1, [sp, #0]
 800145a:	0007      	movs	r7, r0
 800145c:	0028      	movs	r0, r5
 800145e:	f7ff faf1 	bl	8000a44 <_malloc_r>
 8001462:	2800      	cmp	r0, #0
 8001464:	d108      	bne.n	8001478 <__smakebuf_r+0x44>
 8001466:	220c      	movs	r2, #12
 8001468:	5ea3      	ldrsh	r3, [r4, r2]
 800146a:	059a      	lsls	r2, r3, #22
 800146c:	d4ef      	bmi.n	800144e <__smakebuf_r+0x1a>
 800146e:	2203      	movs	r2, #3
 8001470:	4393      	bics	r3, r2
 8001472:	431e      	orrs	r6, r3
 8001474:	81a6      	strh	r6, [r4, #12]
 8001476:	e7e4      	b.n	8001442 <__smakebuf_r+0xe>
 8001478:	2380      	movs	r3, #128	; 0x80
 800147a:	89a2      	ldrh	r2, [r4, #12]
 800147c:	6020      	str	r0, [r4, #0]
 800147e:	4313      	orrs	r3, r2
 8001480:	81a3      	strh	r3, [r4, #12]
 8001482:	9b00      	ldr	r3, [sp, #0]
 8001484:	6120      	str	r0, [r4, #16]
 8001486:	6163      	str	r3, [r4, #20]
 8001488:	9b01      	ldr	r3, [sp, #4]
 800148a:	2b00      	cmp	r3, #0
 800148c:	d00c      	beq.n	80014a8 <__smakebuf_r+0x74>
 800148e:	0028      	movs	r0, r5
 8001490:	230e      	movs	r3, #14
 8001492:	5ee1      	ldrsh	r1, [r4, r3]
 8001494:	f000 f81e 	bl	80014d4 <_isatty_r>
 8001498:	2800      	cmp	r0, #0
 800149a:	d005      	beq.n	80014a8 <__smakebuf_r+0x74>
 800149c:	2303      	movs	r3, #3
 800149e:	89a2      	ldrh	r2, [r4, #12]
 80014a0:	439a      	bics	r2, r3
 80014a2:	3b02      	subs	r3, #2
 80014a4:	4313      	orrs	r3, r2
 80014a6:	81a3      	strh	r3, [r4, #12]
 80014a8:	89a3      	ldrh	r3, [r4, #12]
 80014aa:	433b      	orrs	r3, r7
 80014ac:	81a3      	strh	r3, [r4, #12]
 80014ae:	e7ce      	b.n	800144e <__smakebuf_r+0x1a>

080014b0 <_fstat_r>:
 80014b0:	2300      	movs	r3, #0
 80014b2:	b570      	push	{r4, r5, r6, lr}
 80014b4:	4d06      	ldr	r5, [pc, #24]	; (80014d0 <_fstat_r+0x20>)
 80014b6:	0004      	movs	r4, r0
 80014b8:	0008      	movs	r0, r1
 80014ba:	0011      	movs	r1, r2
 80014bc:	602b      	str	r3, [r5, #0]
 80014be:	f7ff f82e 	bl	800051e <_fstat>
 80014c2:	1c43      	adds	r3, r0, #1
 80014c4:	d103      	bne.n	80014ce <_fstat_r+0x1e>
 80014c6:	682b      	ldr	r3, [r5, #0]
 80014c8:	2b00      	cmp	r3, #0
 80014ca:	d000      	beq.n	80014ce <_fstat_r+0x1e>
 80014cc:	6023      	str	r3, [r4, #0]
 80014ce:	bd70      	pop	{r4, r5, r6, pc}
 80014d0:	200001bc 	.word	0x200001bc

080014d4 <_isatty_r>:
 80014d4:	2300      	movs	r3, #0
 80014d6:	b570      	push	{r4, r5, r6, lr}
 80014d8:	4d06      	ldr	r5, [pc, #24]	; (80014f4 <_isatty_r+0x20>)
 80014da:	0004      	movs	r4, r0
 80014dc:	0008      	movs	r0, r1
 80014de:	602b      	str	r3, [r5, #0]
 80014e0:	f7ff f82b 	bl	800053a <_isatty>
 80014e4:	1c43      	adds	r3, r0, #1
 80014e6:	d103      	bne.n	80014f0 <_isatty_r+0x1c>
 80014e8:	682b      	ldr	r3, [r5, #0]
 80014ea:	2b00      	cmp	r3, #0
 80014ec:	d000      	beq.n	80014f0 <_isatty_r+0x1c>
 80014ee:	6023      	str	r3, [r4, #0]
 80014f0:	bd70      	pop	{r4, r5, r6, pc}
 80014f2:	46c0      	nop			; (mov r8, r8)
 80014f4:	200001bc 	.word	0x200001bc

080014f8 <_init>:
 80014f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014fa:	46c0      	nop			; (mov r8, r8)
 80014fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014fe:	bc08      	pop	{r3}
 8001500:	469e      	mov	lr, r3
 8001502:	4770      	bx	lr

08001504 <_fini>:
 8001504:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001506:	46c0      	nop			; (mov r8, r8)
 8001508:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800150a:	bc08      	pop	{r3}
 800150c:	469e      	mov	lr, r3
 800150e:	4770      	bx	lr
