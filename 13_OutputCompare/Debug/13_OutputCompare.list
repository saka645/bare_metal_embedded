
13_OutputCompare.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001c8  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000288  08000290  00010290  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000288  08000288  00010290  2**0
                  CONTENTS
  4 .ARM          00000000  08000288  08000288  00010290  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000288  08000290  00010290  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000288  08000288  00010288  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800028c  0800028c  0001028c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010290  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000290  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000290  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00010290  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  000102b8  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000724  00000000  00000000  000102fb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002be  00000000  00000000  00010a1f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000098  00000000  00000000  00010ce0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000065  00000000  00000000  00010d78  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00000d76  00000000  00000000  00010ddd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000ce2  00000000  00000000  00011b53  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0002fdc8  00000000  00000000  00012835  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  0000013c  00000000  00000000  00042600  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004f  00000000  00000000  0004273c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000000 	.word	0x20000000
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08000270 	.word	0x08000270

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000004 	.word	0x20000004
 8000104:	08000270 	.word	0x08000270

08000108 <main>:
	uart2_write(ch);
	return ch;
}

int main()
{
 8000108:	b580      	push	{r7, lr}
 800010a:	af00      	add	r7, sp, #0
	timer3_ch3_OutputCompare();
 800010c:	f000 f802 	bl	8000114 <timer3_ch3_OutputCompare>
	while(1)
 8000110:	e7fe      	b.n	8000110 <main+0x8>
	...

08000114 <timer3_ch3_OutputCompare>:
	TIM6->CR1 |= CR1_CEN;
}


void timer3_ch3_OutputCompare()
{
 8000114:	b580      	push	{r7, lr}
 8000116:	af00      	add	r7, sp, #0

	RCC->AHBENR |= RCC_GPIOCEN;
 8000118:	4b28      	ldr	r3, [pc, #160]	; (80001bc <timer3_ch3_OutputCompare+0xa8>)
 800011a:	695a      	ldr	r2, [r3, #20]
 800011c:	4b27      	ldr	r3, [pc, #156]	; (80001bc <timer3_ch3_OutputCompare+0xa8>)
 800011e:	2180      	movs	r1, #128	; 0x80
 8000120:	0309      	lsls	r1, r1, #12
 8000122:	430a      	orrs	r2, r1
 8000124:	615a      	str	r2, [r3, #20]
	/*gpio C8 as alternate function mode*/
	GPIOC->MODER &= ~(1U<<16);
 8000126:	4b26      	ldr	r3, [pc, #152]	; (80001c0 <timer3_ch3_OutputCompare+0xac>)
 8000128:	681a      	ldr	r2, [r3, #0]
 800012a:	4b25      	ldr	r3, [pc, #148]	; (80001c0 <timer3_ch3_OutputCompare+0xac>)
 800012c:	4925      	ldr	r1, [pc, #148]	; (80001c4 <timer3_ch3_OutputCompare+0xb0>)
 800012e:	400a      	ands	r2, r1
 8000130:	601a      	str	r2, [r3, #0]
	GPIOC->MODER |= (1U<<17);
 8000132:	4b23      	ldr	r3, [pc, #140]	; (80001c0 <timer3_ch3_OutputCompare+0xac>)
 8000134:	681a      	ldr	r2, [r3, #0]
 8000136:	4b22      	ldr	r3, [pc, #136]	; (80001c0 <timer3_ch3_OutputCompare+0xac>)
 8000138:	2180      	movs	r1, #128	; 0x80
 800013a:	0289      	lsls	r1, r1, #10
 800013c:	430a      	orrs	r2, r1
 800013e:	601a      	str	r2, [r3, #0]
	/*Set C8 to alternate function 2 mode*/
	GPIOC->AFR[1] &= ~(1U<<0);
 8000140:	4b1f      	ldr	r3, [pc, #124]	; (80001c0 <timer3_ch3_OutputCompare+0xac>)
 8000142:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000144:	4b1e      	ldr	r3, [pc, #120]	; (80001c0 <timer3_ch3_OutputCompare+0xac>)
 8000146:	2101      	movs	r1, #1
 8000148:	438a      	bics	r2, r1
 800014a:	625a      	str	r2, [r3, #36]	; 0x24
	GPIOC->AFR[1] &= ~(1U<<1);
 800014c:	4b1c      	ldr	r3, [pc, #112]	; (80001c0 <timer3_ch3_OutputCompare+0xac>)
 800014e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000150:	4b1b      	ldr	r3, [pc, #108]	; (80001c0 <timer3_ch3_OutputCompare+0xac>)
 8000152:	2102      	movs	r1, #2
 8000154:	438a      	bics	r2, r1
 8000156:	625a      	str	r2, [r3, #36]	; 0x24
	GPIOC->AFR[1] &= ~(1U<<2);
 8000158:	4b19      	ldr	r3, [pc, #100]	; (80001c0 <timer3_ch3_OutputCompare+0xac>)
 800015a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800015c:	4b18      	ldr	r3, [pc, #96]	; (80001c0 <timer3_ch3_OutputCompare+0xac>)
 800015e:	2104      	movs	r1, #4
 8000160:	438a      	bics	r2, r1
 8000162:	625a      	str	r2, [r3, #36]	; 0x24
	GPIOC->AFR[1] &= ~(1U<<3);
 8000164:	4b16      	ldr	r3, [pc, #88]	; (80001c0 <timer3_ch3_OutputCompare+0xac>)
 8000166:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000168:	4b15      	ldr	r3, [pc, #84]	; (80001c0 <timer3_ch3_OutputCompare+0xac>)
 800016a:	2108      	movs	r1, #8
 800016c:	438a      	bics	r2, r1
 800016e:	625a      	str	r2, [r3, #36]	; 0x24
	/*enable clock access to timer16 */
	RCC->APB1ENR |= TIMER3_EN;
 8000170:	4b12      	ldr	r3, [pc, #72]	; (80001bc <timer3_ch3_OutputCompare+0xa8>)
 8000172:	69da      	ldr	r2, [r3, #28]
 8000174:	4b11      	ldr	r3, [pc, #68]	; (80001bc <timer3_ch3_OutputCompare+0xa8>)
 8000176:	2102      	movs	r1, #2
 8000178:	430a      	orrs	r2, r1
 800017a:	61da      	str	r2, [r3, #28]
	/*set prescalar value*/
	TIM3->PSC = 800 -1;
 800017c:	4b12      	ldr	r3, [pc, #72]	; (80001c8 <timer3_ch3_OutputCompare+0xb4>)
 800017e:	4a13      	ldr	r2, [pc, #76]	; (80001cc <timer3_ch3_OutputCompare+0xb8>)
 8000180:	629a      	str	r2, [r3, #40]	; 0x28
	/*set auto reload value*/
	TIM3->ARR = 10000 -1;
 8000182:	4b11      	ldr	r3, [pc, #68]	; (80001c8 <timer3_ch3_OutputCompare+0xb4>)
 8000184:	4a12      	ldr	r2, [pc, #72]	; (80001d0 <timer3_ch3_OutputCompare+0xbc>)
 8000186:	62da      	str	r2, [r3, #44]	; 0x2c

	/*set output compare toggle mode*/
	TIM3->CCMR2 |= OCTOGGLE;
 8000188:	4b0f      	ldr	r3, [pc, #60]	; (80001c8 <timer3_ch3_OutputCompare+0xb4>)
 800018a:	69da      	ldr	r2, [r3, #28]
 800018c:	4b0e      	ldr	r3, [pc, #56]	; (80001c8 <timer3_ch3_OutputCompare+0xb4>)
 800018e:	2130      	movs	r1, #48	; 0x30
 8000190:	430a      	orrs	r2, r1
 8000192:	61da      	str	r2, [r3, #28]
	/*enable timer3 compare mode channel3  */
	TIM3->CCER |= CC3E;
 8000194:	4b0c      	ldr	r3, [pc, #48]	; (80001c8 <timer3_ch3_OutputCompare+0xb4>)
 8000196:	6a1a      	ldr	r2, [r3, #32]
 8000198:	4b0b      	ldr	r3, [pc, #44]	; (80001c8 <timer3_ch3_OutputCompare+0xb4>)
 800019a:	2180      	movs	r1, #128	; 0x80
 800019c:	0049      	lsls	r1, r1, #1
 800019e:	430a      	orrs	r2, r1
 80001a0:	621a      	str	r2, [r3, #32]



	/*enable timer*/
	TIM3->CNT = 0;
 80001a2:	4b09      	ldr	r3, [pc, #36]	; (80001c8 <timer3_ch3_OutputCompare+0xb4>)
 80001a4:	2200      	movs	r2, #0
 80001a6:	625a      	str	r2, [r3, #36]	; 0x24
	TIM3->CR1 |= CR1_CEN;
 80001a8:	4b07      	ldr	r3, [pc, #28]	; (80001c8 <timer3_ch3_OutputCompare+0xb4>)
 80001aa:	681a      	ldr	r2, [r3, #0]
 80001ac:	4b06      	ldr	r3, [pc, #24]	; (80001c8 <timer3_ch3_OutputCompare+0xb4>)
 80001ae:	2101      	movs	r1, #1
 80001b0:	430a      	orrs	r2, r1
 80001b2:	601a      	str	r2, [r3, #0]
}
 80001b4:	46c0      	nop			; (mov r8, r8)
 80001b6:	46bd      	mov	sp, r7
 80001b8:	bd80      	pop	{r7, pc}
 80001ba:	46c0      	nop			; (mov r8, r8)
 80001bc:	40021000 	.word	0x40021000
 80001c0:	48000800 	.word	0x48000800
 80001c4:	fffeffff 	.word	0xfffeffff
 80001c8:	40000400 	.word	0x40000400
 80001cc:	0000031f 	.word	0x0000031f
 80001d0:	0000270f 	.word	0x0000270f

080001d4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80001d4:	480d      	ldr	r0, [pc, #52]	; (800020c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80001d6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80001d8:	e000      	b.n	80001dc <Reset_Handler+0x8>
 80001da:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80001dc:	480c      	ldr	r0, [pc, #48]	; (8000210 <LoopForever+0x6>)
  ldr r1, =_edata
 80001de:	490d      	ldr	r1, [pc, #52]	; (8000214 <LoopForever+0xa>)
  ldr r2, =_sidata
 80001e0:	4a0d      	ldr	r2, [pc, #52]	; (8000218 <LoopForever+0xe>)
  movs r3, #0
 80001e2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80001e4:	e002      	b.n	80001ec <LoopCopyDataInit>

080001e6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80001e6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80001e8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80001ea:	3304      	adds	r3, #4

080001ec <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80001ec:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80001ee:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80001f0:	d3f9      	bcc.n	80001e6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80001f2:	4a0a      	ldr	r2, [pc, #40]	; (800021c <LoopForever+0x12>)
  ldr r4, =_ebss
 80001f4:	4c0a      	ldr	r4, [pc, #40]	; (8000220 <LoopForever+0x16>)
  movs r3, #0
 80001f6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80001f8:	e001      	b.n	80001fe <LoopFillZerobss>

080001fa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80001fa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80001fc:	3204      	adds	r2, #4

080001fe <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80001fe:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000200:	d3fb      	bcc.n	80001fa <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000202:	f000 f811 	bl	8000228 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000206:	f7ff ff7f 	bl	8000108 <main>

0800020a <LoopForever>:

LoopForever:
  b LoopForever
 800020a:	e7fe      	b.n	800020a <LoopForever>
  ldr   r0, =_estack
 800020c:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 8000210:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000214:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000218:	08000290 	.word	0x08000290
  ldr r2, =_sbss
 800021c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000220:	2000001c 	.word	0x2000001c

08000224 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000224:	e7fe      	b.n	8000224 <ADC_IRQHandler>
	...

08000228 <__libc_init_array>:
 8000228:	b570      	push	{r4, r5, r6, lr}
 800022a:	2600      	movs	r6, #0
 800022c:	4c0c      	ldr	r4, [pc, #48]	; (8000260 <__libc_init_array+0x38>)
 800022e:	4d0d      	ldr	r5, [pc, #52]	; (8000264 <__libc_init_array+0x3c>)
 8000230:	1b64      	subs	r4, r4, r5
 8000232:	10a4      	asrs	r4, r4, #2
 8000234:	42a6      	cmp	r6, r4
 8000236:	d109      	bne.n	800024c <__libc_init_array+0x24>
 8000238:	2600      	movs	r6, #0
 800023a:	f000 f819 	bl	8000270 <_init>
 800023e:	4c0a      	ldr	r4, [pc, #40]	; (8000268 <__libc_init_array+0x40>)
 8000240:	4d0a      	ldr	r5, [pc, #40]	; (800026c <__libc_init_array+0x44>)
 8000242:	1b64      	subs	r4, r4, r5
 8000244:	10a4      	asrs	r4, r4, #2
 8000246:	42a6      	cmp	r6, r4
 8000248:	d105      	bne.n	8000256 <__libc_init_array+0x2e>
 800024a:	bd70      	pop	{r4, r5, r6, pc}
 800024c:	00b3      	lsls	r3, r6, #2
 800024e:	58eb      	ldr	r3, [r5, r3]
 8000250:	4798      	blx	r3
 8000252:	3601      	adds	r6, #1
 8000254:	e7ee      	b.n	8000234 <__libc_init_array+0xc>
 8000256:	00b3      	lsls	r3, r6, #2
 8000258:	58eb      	ldr	r3, [r5, r3]
 800025a:	4798      	blx	r3
 800025c:	3601      	adds	r6, #1
 800025e:	e7f2      	b.n	8000246 <__libc_init_array+0x1e>
 8000260:	08000288 	.word	0x08000288
 8000264:	08000288 	.word	0x08000288
 8000268:	0800028c 	.word	0x0800028c
 800026c:	08000288 	.word	0x08000288

08000270 <_init>:
 8000270:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000272:	46c0      	nop			; (mov r8, r8)
 8000274:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000276:	bc08      	pop	{r3}
 8000278:	469e      	mov	lr, r3
 800027a:	4770      	bx	lr

0800027c <_fini>:
 800027c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800027e:	46c0      	nop			; (mov r8, r8)
 8000280:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000282:	bc08      	pop	{r3}
 8000284:	469e      	mov	lr, r3
 8000286:	4770      	bx	lr
