
15_InputInterrupt.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000023c  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002fc  08000304  00010304  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002fc  080002fc  00010304  2**0
                  CONTENTS
  4 .ARM          00000000  080002fc  080002fc  00010304  2**0
                  CONTENTS
  5 .preinit_array 00000000  080002fc  08000304  00010304  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002fc  080002fc  000102fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000300  08000300  00010300  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010304  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000304  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000304  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00010304  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0001032c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000793  00000000  00000000  0001036f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002ce  00000000  00000000  00010b02  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000080  00000000  00000000  00010dd0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000052  00000000  00000000  00010e50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00000d44  00000000  00000000  00010ea2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000c84  00000000  00000000  00011be6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0002fdff  00000000  00000000  0001286a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000000dc  00000000  00000000  0004266c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004f  00000000  00000000  00042748  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000000 	.word	0x20000000
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080002e4 	.word	0x080002e4

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000004 	.word	0x20000004
 8000104:	080002e4 	.word	0x080002e4

08000108 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000108:	b580      	push	{r7, lr}
 800010a:	b082      	sub	sp, #8
 800010c:	af00      	add	r7, sp, #0
 800010e:	0002      	movs	r2, r0
 8000110:	1dfb      	adds	r3, r7, #7
 8000112:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8000114:	1dfb      	adds	r3, r7, #7
 8000116:	781b      	ldrb	r3, [r3, #0]
 8000118:	2b7f      	cmp	r3, #127	; 0x7f
 800011a:	d809      	bhi.n	8000130 <__NVIC_EnableIRQ+0x28>
  {
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800011c:	1dfb      	adds	r3, r7, #7
 800011e:	781b      	ldrb	r3, [r3, #0]
 8000120:	001a      	movs	r2, r3
 8000122:	231f      	movs	r3, #31
 8000124:	401a      	ands	r2, r3
 8000126:	4b04      	ldr	r3, [pc, #16]	; (8000138 <__NVIC_EnableIRQ+0x30>)
 8000128:	2101      	movs	r1, #1
 800012a:	4091      	lsls	r1, r2
 800012c:	000a      	movs	r2, r1
 800012e:	601a      	str	r2, [r3, #0]
  }
}
 8000130:	46c0      	nop			; (mov r8, r8)
 8000132:	46bd      	mov	sp, r7
 8000134:	b002      	add	sp, #8
 8000136:	bd80      	pop	{r7, pc}
 8000138:	e000e100 	.word	0xe000e100

0800013c <pb1_exti_init>:
#define GPIOBEN		(1<<18)
#define SYSCONFIG	(1<<0)
#define EXTIPORTB1 	(1<<4)

void pb1_exti_init(void)
{
 800013c:	b580      	push	{r7, lr}
 800013e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000140:	b672      	cpsid	i
}
 8000142:	46c0      	nop			; (mov r8, r8)
	//disable global interrupts
	__disable_irq();
	//enable clock for gpio b
	RCC->AHBENR |= GPIOBEN;
 8000144:	4b19      	ldr	r3, [pc, #100]	; (80001ac <pb1_exti_init+0x70>)
 8000146:	695a      	ldr	r2, [r3, #20]
 8000148:	4b18      	ldr	r3, [pc, #96]	; (80001ac <pb1_exti_init+0x70>)
 800014a:	2180      	movs	r1, #128	; 0x80
 800014c:	02c9      	lsls	r1, r1, #11
 800014e:	430a      	orrs	r2, r1
 8000150:	615a      	str	r2, [r3, #20]
	//enable clock access to sysconfig
	RCC->APB2ENR |= SYSCONFIG;
 8000152:	4b16      	ldr	r3, [pc, #88]	; (80001ac <pb1_exti_init+0x70>)
 8000154:	699a      	ldr	r2, [r3, #24]
 8000156:	4b15      	ldr	r3, [pc, #84]	; (80001ac <pb1_exti_init+0x70>)
 8000158:	2101      	movs	r1, #1
 800015a:	430a      	orrs	r2, r1
 800015c:	619a      	str	r2, [r3, #24]
	//set pb1 as input pin
	GPIOB->MODER &= ~(1<<26);
 800015e:	4b14      	ldr	r3, [pc, #80]	; (80001b0 <pb1_exti_init+0x74>)
 8000160:	681a      	ldr	r2, [r3, #0]
 8000162:	4b13      	ldr	r3, [pc, #76]	; (80001b0 <pb1_exti_init+0x74>)
 8000164:	4913      	ldr	r1, [pc, #76]	; (80001b4 <pb1_exti_init+0x78>)
 8000166:	400a      	ands	r2, r1
 8000168:	601a      	str	r2, [r3, #0]
	GPIOB->MODER &= ~(1<<27);
 800016a:	4b11      	ldr	r3, [pc, #68]	; (80001b0 <pb1_exti_init+0x74>)
 800016c:	681a      	ldr	r2, [r3, #0]
 800016e:	4b10      	ldr	r3, [pc, #64]	; (80001b0 <pb1_exti_init+0x74>)
 8000170:	4911      	ldr	r1, [pc, #68]	; (80001b8 <pb1_exti_init+0x7c>)
 8000172:	400a      	ands	r2, r1
 8000174:	601a      	str	r2, [r3, #0]
	//select pb1 connected to exti1
	SYSCFG->EXTICR[0] |= (1<<EXTIPORTB1);
 8000176:	4b11      	ldr	r3, [pc, #68]	; (80001bc <pb1_exti_init+0x80>)
 8000178:	689a      	ldr	r2, [r3, #8]
 800017a:	4b10      	ldr	r3, [pc, #64]	; (80001bc <pb1_exti_init+0x80>)
 800017c:	2180      	movs	r1, #128	; 0x80
 800017e:	0249      	lsls	r1, r1, #9
 8000180:	430a      	orrs	r2, r1
 8000182:	609a      	str	r2, [r3, #8]
	//unmask exti1
	EXTI->IMR |= (1<<1);
 8000184:	4b0e      	ldr	r3, [pc, #56]	; (80001c0 <pb1_exti_init+0x84>)
 8000186:	681a      	ldr	r2, [r3, #0]
 8000188:	4b0d      	ldr	r3, [pc, #52]	; (80001c0 <pb1_exti_init+0x84>)
 800018a:	2102      	movs	r1, #2
 800018c:	430a      	orrs	r2, r1
 800018e:	601a      	str	r2, [r3, #0]
	//select falling edge trigger
	EXTI->FTSR |= (1<<1);
 8000190:	4b0b      	ldr	r3, [pc, #44]	; (80001c0 <pb1_exti_init+0x84>)
 8000192:	68da      	ldr	r2, [r3, #12]
 8000194:	4b0a      	ldr	r3, [pc, #40]	; (80001c0 <pb1_exti_init+0x84>)
 8000196:	2102      	movs	r1, #2
 8000198:	430a      	orrs	r2, r1
 800019a:	60da      	str	r2, [r3, #12]
	//enable exti line in nvic
	NVIC_EnableIRQ(EXTI0_1_IRQn);
 800019c:	2005      	movs	r0, #5
 800019e:	f7ff ffb3 	bl	8000108 <__NVIC_EnableIRQ>
  __ASM volatile ("cpsie i" : : : "memory");
 80001a2:	b662      	cpsie	i
}
 80001a4:	46c0      	nop			; (mov r8, r8)
	//enable global interrupt
	__enable_irq();
}
 80001a6:	46c0      	nop			; (mov r8, r8)
 80001a8:	46bd      	mov	sp, r7
 80001aa:	bd80      	pop	{r7, pc}
 80001ac:	40021000 	.word	0x40021000
 80001b0:	48000400 	.word	0x48000400
 80001b4:	fbffffff 	.word	0xfbffffff
 80001b8:	f7ffffff 	.word	0xf7ffffff
 80001bc:	40010000 	.word	0x40010000
 80001c0:	40010400 	.word	0x40010400

080001c4 <main>:
#define PIN9		(1<<9)
#define LED_PIN		PIN9


int main()
{
 80001c4:	b580      	push	{r7, lr}
 80001c6:	af00      	add	r7, sp, #0
	RCC->AHBENR |= GPIOCEN;
 80001c8:	4b0b      	ldr	r3, [pc, #44]	; (80001f8 <main+0x34>)
 80001ca:	695a      	ldr	r2, [r3, #20]
 80001cc:	4b0a      	ldr	r3, [pc, #40]	; (80001f8 <main+0x34>)
 80001ce:	2180      	movs	r1, #128	; 0x80
 80001d0:	0309      	lsls	r1, r1, #12
 80001d2:	430a      	orrs	r2, r1
 80001d4:	615a      	str	r2, [r3, #20]
	GPIOC->MODER |= (1<<18);
 80001d6:	4b09      	ldr	r3, [pc, #36]	; (80001fc <main+0x38>)
 80001d8:	681a      	ldr	r2, [r3, #0]
 80001da:	4b08      	ldr	r3, [pc, #32]	; (80001fc <main+0x38>)
 80001dc:	2180      	movs	r1, #128	; 0x80
 80001de:	02c9      	lsls	r1, r1, #11
 80001e0:	430a      	orrs	r2, r1
 80001e2:	601a      	str	r2, [r3, #0]
	GPIOC->MODER &= ~(1<<19);
 80001e4:	4b05      	ldr	r3, [pc, #20]	; (80001fc <main+0x38>)
 80001e6:	681a      	ldr	r2, [r3, #0]
 80001e8:	4b04      	ldr	r3, [pc, #16]	; (80001fc <main+0x38>)
 80001ea:	4905      	ldr	r1, [pc, #20]	; (8000200 <main+0x3c>)
 80001ec:	400a      	ands	r2, r1
 80001ee:	601a      	str	r2, [r3, #0]
	pb1_exti_init();
 80001f0:	f7ff ffa4 	bl	800013c <pb1_exti_init>
	while(1)
 80001f4:	e7fe      	b.n	80001f4 <main+0x30>
 80001f6:	46c0      	nop			; (mov r8, r8)
 80001f8:	40021000 	.word	0x40021000
 80001fc:	48000800 	.word	0x48000800
 8000200:	fff7ffff 	.word	0xfff7ffff

08000204 <exti_callback>:
	{
	}
}

static void exti_callback(void)
{
 8000204:	b580      	push	{r7, lr}
 8000206:	af00      	add	r7, sp, #0
	GPIOC->ODR ^= LED_PIN;
 8000208:	4b04      	ldr	r3, [pc, #16]	; (800021c <exti_callback+0x18>)
 800020a:	695a      	ldr	r2, [r3, #20]
 800020c:	4b03      	ldr	r3, [pc, #12]	; (800021c <exti_callback+0x18>)
 800020e:	2180      	movs	r1, #128	; 0x80
 8000210:	0089      	lsls	r1, r1, #2
 8000212:	404a      	eors	r2, r1
 8000214:	615a      	str	r2, [r3, #20]
}
 8000216:	46c0      	nop			; (mov r8, r8)
 8000218:	46bd      	mov	sp, r7
 800021a:	bd80      	pop	{r7, pc}
 800021c:	48000800 	.word	0x48000800

08000220 <EXTI0_1_IRQHandler>:
void EXTI0_1_IRQHandler(void)
{
 8000220:	b580      	push	{r7, lr}
 8000222:	af00      	add	r7, sp, #0
	if(EXTI->PR & LINE1)
 8000224:	4b07      	ldr	r3, [pc, #28]	; (8000244 <EXTI0_1_IRQHandler+0x24>)
 8000226:	695b      	ldr	r3, [r3, #20]
 8000228:	2202      	movs	r2, #2
 800022a:	4013      	ands	r3, r2
 800022c:	d007      	beq.n	800023e <EXTI0_1_IRQHandler+0x1e>
	{
		EXTI->PR |= LINE1;
 800022e:	4b05      	ldr	r3, [pc, #20]	; (8000244 <EXTI0_1_IRQHandler+0x24>)
 8000230:	695a      	ldr	r2, [r3, #20]
 8000232:	4b04      	ldr	r3, [pc, #16]	; (8000244 <EXTI0_1_IRQHandler+0x24>)
 8000234:	2102      	movs	r1, #2
 8000236:	430a      	orrs	r2, r1
 8000238:	615a      	str	r2, [r3, #20]
		exti_callback();
 800023a:	f7ff ffe3 	bl	8000204 <exti_callback>
	}
}
 800023e:	46c0      	nop			; (mov r8, r8)
 8000240:	46bd      	mov	sp, r7
 8000242:	bd80      	pop	{r7, pc}
 8000244:	40010400 	.word	0x40010400

08000248 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000248:	480d      	ldr	r0, [pc, #52]	; (8000280 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800024a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800024c:	e000      	b.n	8000250 <Reset_Handler+0x8>
 800024e:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000250:	480c      	ldr	r0, [pc, #48]	; (8000284 <LoopForever+0x6>)
  ldr r1, =_edata
 8000252:	490d      	ldr	r1, [pc, #52]	; (8000288 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000254:	4a0d      	ldr	r2, [pc, #52]	; (800028c <LoopForever+0xe>)
  movs r3, #0
 8000256:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000258:	e002      	b.n	8000260 <LoopCopyDataInit>

0800025a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800025a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800025c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800025e:	3304      	adds	r3, #4

08000260 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000260:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000262:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000264:	d3f9      	bcc.n	800025a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000266:	4a0a      	ldr	r2, [pc, #40]	; (8000290 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000268:	4c0a      	ldr	r4, [pc, #40]	; (8000294 <LoopForever+0x16>)
  movs r3, #0
 800026a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800026c:	e001      	b.n	8000272 <LoopFillZerobss>

0800026e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800026e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000270:	3204      	adds	r2, #4

08000272 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000272:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000274:	d3fb      	bcc.n	800026e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000276:	f000 f811 	bl	800029c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800027a:	f7ff ffa3 	bl	80001c4 <main>

0800027e <LoopForever>:

LoopForever:
  b LoopForever
 800027e:	e7fe      	b.n	800027e <LoopForever>
  ldr   r0, =_estack
 8000280:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 8000284:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000288:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800028c:	08000304 	.word	0x08000304
  ldr r2, =_sbss
 8000290:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000294:	2000001c 	.word	0x2000001c

08000298 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000298:	e7fe      	b.n	8000298 <ADC_IRQHandler>
	...

0800029c <__libc_init_array>:
 800029c:	b570      	push	{r4, r5, r6, lr}
 800029e:	2600      	movs	r6, #0
 80002a0:	4c0c      	ldr	r4, [pc, #48]	; (80002d4 <__libc_init_array+0x38>)
 80002a2:	4d0d      	ldr	r5, [pc, #52]	; (80002d8 <__libc_init_array+0x3c>)
 80002a4:	1b64      	subs	r4, r4, r5
 80002a6:	10a4      	asrs	r4, r4, #2
 80002a8:	42a6      	cmp	r6, r4
 80002aa:	d109      	bne.n	80002c0 <__libc_init_array+0x24>
 80002ac:	2600      	movs	r6, #0
 80002ae:	f000 f819 	bl	80002e4 <_init>
 80002b2:	4c0a      	ldr	r4, [pc, #40]	; (80002dc <__libc_init_array+0x40>)
 80002b4:	4d0a      	ldr	r5, [pc, #40]	; (80002e0 <__libc_init_array+0x44>)
 80002b6:	1b64      	subs	r4, r4, r5
 80002b8:	10a4      	asrs	r4, r4, #2
 80002ba:	42a6      	cmp	r6, r4
 80002bc:	d105      	bne.n	80002ca <__libc_init_array+0x2e>
 80002be:	bd70      	pop	{r4, r5, r6, pc}
 80002c0:	00b3      	lsls	r3, r6, #2
 80002c2:	58eb      	ldr	r3, [r5, r3]
 80002c4:	4798      	blx	r3
 80002c6:	3601      	adds	r6, #1
 80002c8:	e7ee      	b.n	80002a8 <__libc_init_array+0xc>
 80002ca:	00b3      	lsls	r3, r6, #2
 80002cc:	58eb      	ldr	r3, [r5, r3]
 80002ce:	4798      	blx	r3
 80002d0:	3601      	adds	r6, #1
 80002d2:	e7f2      	b.n	80002ba <__libc_init_array+0x1e>
 80002d4:	080002fc 	.word	0x080002fc
 80002d8:	080002fc 	.word	0x080002fc
 80002dc:	08000300 	.word	0x08000300
 80002e0:	080002fc 	.word	0x080002fc

080002e4 <_init>:
 80002e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002e6:	46c0      	nop			; (mov r8, r8)
 80002e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002ea:	bc08      	pop	{r3}
 80002ec:	469e      	mov	lr, r3
 80002ee:	4770      	bx	lr

080002f0 <_fini>:
 80002f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002f2:	46c0      	nop			; (mov r8, r8)
 80002f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002f6:	bc08      	pop	{r3}
 80002f8:	469e      	mov	lr, r3
 80002fa:	4770      	bx	lr
