
14_InputCapture.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000002b0  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000370  08000378  00010378  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000370  08000370  00010378  2**0
                  CONTENTS
  4 .ARM          00000000  08000370  08000370  00010378  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000370  08000378  00010378  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000370  08000370  00010370  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000374  08000374  00010374  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010378  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000000  08000378  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000020  08000378  00020020  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00010378  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  000103a0  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000531  00000000  00000000  000103e3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000001c8  00000000  00000000  00010914  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000078  00000000  00000000  00010ae0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000004d  00000000  00000000  00010b58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00000d6e  00000000  00000000  00010ba5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000c85  00000000  00000000  00011913  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0002fd0f  00000000  00000000  00012598  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000000bc  00000000  00000000  000422a8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004f  00000000  00000000  00042364  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000000 	.word	0x20000000
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08000358 	.word	0x08000358

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000004 	.word	0x20000004
 8000104:	08000358 	.word	0x08000358

08000108 <main>:
#define LED_PIN		PIN9

int timestamp = 0;

int main()
{
 8000108:	b580      	push	{r7, lr}
 800010a:	af00      	add	r7, sp, #0
//	RCC->AHBENR |= GPIOCEN;
//	GPIOC->MODER |= (1<<18);
//	GPIOC->MODER &= ~(1<<19);
//	timer6_init1Hz();
//	uart2_tx_init();
	timer15_ch1_OutputCompare();
 800010c:	f000 f812 	bl	8000134 <timer15_ch1_OutputCompare>
	timer3_Pc6_InputCapture();
 8000110:	f000 f874 	bl	80001fc <timer3_Pc6_InputCapture>
	while(1)
	{
		/*wait until edge is captured*/
		while(!(TIM3->SR & SR_CC1IF));
 8000114:	46c0      	nop			; (mov r8, r8)
 8000116:	4b05      	ldr	r3, [pc, #20]	; (800012c <main+0x24>)
 8000118:	691b      	ldr	r3, [r3, #16]
 800011a:	2201      	movs	r2, #1
 800011c:	4013      	ands	r3, r2
 800011e:	d0fa      	beq.n	8000116 <main+0xe>
		/*read captured value*/
		timestamp = TIM3->CCR1;
 8000120:	4b02      	ldr	r3, [pc, #8]	; (800012c <main+0x24>)
 8000122:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000124:	001a      	movs	r2, r3
 8000126:	4b02      	ldr	r3, [pc, #8]	; (8000130 <main+0x28>)
 8000128:	601a      	str	r2, [r3, #0]
		while(!(TIM3->SR & SR_CC1IF));
 800012a:	e7f3      	b.n	8000114 <main+0xc>
 800012c:	40000400 	.word	0x40000400
 8000130:	2000001c 	.word	0x2000001c

08000134 <timer15_ch1_OutputCompare>:
	TIM6->CR1 |= CR1_CEN;
}


void timer15_ch1_OutputCompare()
{
 8000134:	b580      	push	{r7, lr}
 8000136:	af00      	add	r7, sp, #0
	//PA2
	RCC->AHBENR |= RCC_GPIOAEN;
 8000138:	4b27      	ldr	r3, [pc, #156]	; (80001d8 <timer15_ch1_OutputCompare+0xa4>)
 800013a:	695a      	ldr	r2, [r3, #20]
 800013c:	4b26      	ldr	r3, [pc, #152]	; (80001d8 <timer15_ch1_OutputCompare+0xa4>)
 800013e:	2180      	movs	r1, #128	; 0x80
 8000140:	0289      	lsls	r1, r1, #10
 8000142:	430a      	orrs	r2, r1
 8000144:	615a      	str	r2, [r3, #20]
	/*gpio PA2 as alternate function mode*/
	GPIOC->MODER &= ~(1U<<4);
 8000146:	4b25      	ldr	r3, [pc, #148]	; (80001dc <timer15_ch1_OutputCompare+0xa8>)
 8000148:	681a      	ldr	r2, [r3, #0]
 800014a:	4b24      	ldr	r3, [pc, #144]	; (80001dc <timer15_ch1_OutputCompare+0xa8>)
 800014c:	2110      	movs	r1, #16
 800014e:	438a      	bics	r2, r1
 8000150:	601a      	str	r2, [r3, #0]
	GPIOC->MODER |= (1U<<5);
 8000152:	4b22      	ldr	r3, [pc, #136]	; (80001dc <timer15_ch1_OutputCompare+0xa8>)
 8000154:	681a      	ldr	r2, [r3, #0]
 8000156:	4b21      	ldr	r3, [pc, #132]	; (80001dc <timer15_ch1_OutputCompare+0xa8>)
 8000158:	2120      	movs	r1, #32
 800015a:	430a      	orrs	r2, r1
 800015c:	601a      	str	r2, [r3, #0]
	/*Set PA2 to alternate function 2 mode*/
	GPIOC->AFR[0] &= ~(1U<<8);
 800015e:	4b1f      	ldr	r3, [pc, #124]	; (80001dc <timer15_ch1_OutputCompare+0xa8>)
 8000160:	6a1a      	ldr	r2, [r3, #32]
 8000162:	4b1e      	ldr	r3, [pc, #120]	; (80001dc <timer15_ch1_OutputCompare+0xa8>)
 8000164:	491e      	ldr	r1, [pc, #120]	; (80001e0 <timer15_ch1_OutputCompare+0xac>)
 8000166:	400a      	ands	r2, r1
 8000168:	621a      	str	r2, [r3, #32]
	GPIOC->AFR[0] &= ~(1U<<9);
 800016a:	4b1c      	ldr	r3, [pc, #112]	; (80001dc <timer15_ch1_OutputCompare+0xa8>)
 800016c:	6a1a      	ldr	r2, [r3, #32]
 800016e:	4b1b      	ldr	r3, [pc, #108]	; (80001dc <timer15_ch1_OutputCompare+0xa8>)
 8000170:	491c      	ldr	r1, [pc, #112]	; (80001e4 <timer15_ch1_OutputCompare+0xb0>)
 8000172:	400a      	ands	r2, r1
 8000174:	621a      	str	r2, [r3, #32]
	GPIOC->AFR[0] &= ~(1U<<10);
 8000176:	4b19      	ldr	r3, [pc, #100]	; (80001dc <timer15_ch1_OutputCompare+0xa8>)
 8000178:	6a1a      	ldr	r2, [r3, #32]
 800017a:	4b18      	ldr	r3, [pc, #96]	; (80001dc <timer15_ch1_OutputCompare+0xa8>)
 800017c:	491a      	ldr	r1, [pc, #104]	; (80001e8 <timer15_ch1_OutputCompare+0xb4>)
 800017e:	400a      	ands	r2, r1
 8000180:	621a      	str	r2, [r3, #32]
	GPIOC->AFR[0] &= ~(1U<<11);
 8000182:	4b16      	ldr	r3, [pc, #88]	; (80001dc <timer15_ch1_OutputCompare+0xa8>)
 8000184:	6a1a      	ldr	r2, [r3, #32]
 8000186:	4b15      	ldr	r3, [pc, #84]	; (80001dc <timer15_ch1_OutputCompare+0xa8>)
 8000188:	4918      	ldr	r1, [pc, #96]	; (80001ec <timer15_ch1_OutputCompare+0xb8>)
 800018a:	400a      	ands	r2, r1
 800018c:	621a      	str	r2, [r3, #32]
	/*enable clock access to timer15 */
	RCC->APB2ENR |= TIMER15_EN;
 800018e:	4b12      	ldr	r3, [pc, #72]	; (80001d8 <timer15_ch1_OutputCompare+0xa4>)
 8000190:	699a      	ldr	r2, [r3, #24]
 8000192:	4b11      	ldr	r3, [pc, #68]	; (80001d8 <timer15_ch1_OutputCompare+0xa4>)
 8000194:	2180      	movs	r1, #128	; 0x80
 8000196:	0249      	lsls	r1, r1, #9
 8000198:	430a      	orrs	r2, r1
 800019a:	619a      	str	r2, [r3, #24]
	/*set prescalar value*/
	TIM15->PSC = 800 -1;
 800019c:	4b14      	ldr	r3, [pc, #80]	; (80001f0 <timer15_ch1_OutputCompare+0xbc>)
 800019e:	4a15      	ldr	r2, [pc, #84]	; (80001f4 <timer15_ch1_OutputCompare+0xc0>)
 80001a0:	629a      	str	r2, [r3, #40]	; 0x28
	/*set auto reload value*/
	TIM15->ARR = 10000 -1;
 80001a2:	4b13      	ldr	r3, [pc, #76]	; (80001f0 <timer15_ch1_OutputCompare+0xbc>)
 80001a4:	4a14      	ldr	r2, [pc, #80]	; (80001f8 <timer15_ch1_OutputCompare+0xc4>)
 80001a6:	62da      	str	r2, [r3, #44]	; 0x2c

	/*set output compare toggle mode*/
	TIM15->CCMR1 |= OCTOGGLE;//OC1M
 80001a8:	4b11      	ldr	r3, [pc, #68]	; (80001f0 <timer15_ch1_OutputCompare+0xbc>)
 80001aa:	699a      	ldr	r2, [r3, #24]
 80001ac:	4b10      	ldr	r3, [pc, #64]	; (80001f0 <timer15_ch1_OutputCompare+0xbc>)
 80001ae:	2130      	movs	r1, #48	; 0x30
 80001b0:	430a      	orrs	r2, r1
 80001b2:	619a      	str	r2, [r3, #24]
	/*enable timer3 compare mode channel1  */
	TIM15->CCER |= CC1E;
 80001b4:	4b0e      	ldr	r3, [pc, #56]	; (80001f0 <timer15_ch1_OutputCompare+0xbc>)
 80001b6:	6a1a      	ldr	r2, [r3, #32]
 80001b8:	4b0d      	ldr	r3, [pc, #52]	; (80001f0 <timer15_ch1_OutputCompare+0xbc>)
 80001ba:	2101      	movs	r1, #1
 80001bc:	430a      	orrs	r2, r1
 80001be:	621a      	str	r2, [r3, #32]

	/*enable timer*/
	TIM15->CNT = 0;
 80001c0:	4b0b      	ldr	r3, [pc, #44]	; (80001f0 <timer15_ch1_OutputCompare+0xbc>)
 80001c2:	2200      	movs	r2, #0
 80001c4:	625a      	str	r2, [r3, #36]	; 0x24
	TIM15->CR1 |= CR1_CEN;
 80001c6:	4b0a      	ldr	r3, [pc, #40]	; (80001f0 <timer15_ch1_OutputCompare+0xbc>)
 80001c8:	681a      	ldr	r2, [r3, #0]
 80001ca:	4b09      	ldr	r3, [pc, #36]	; (80001f0 <timer15_ch1_OutputCompare+0xbc>)
 80001cc:	2101      	movs	r1, #1
 80001ce:	430a      	orrs	r2, r1
 80001d0:	601a      	str	r2, [r3, #0]
}
 80001d2:	46c0      	nop			; (mov r8, r8)
 80001d4:	46bd      	mov	sp, r7
 80001d6:	bd80      	pop	{r7, pc}
 80001d8:	40021000 	.word	0x40021000
 80001dc:	48000800 	.word	0x48000800
 80001e0:	fffffeff 	.word	0xfffffeff
 80001e4:	fffffdff 	.word	0xfffffdff
 80001e8:	fffffbff 	.word	0xfffffbff
 80001ec:	fffff7ff 	.word	0xfffff7ff
 80001f0:	40014000 	.word	0x40014000
 80001f4:	0000031f 	.word	0x0000031f
 80001f8:	0000270f 	.word	0x0000270f

080001fc <timer3_Pc6_InputCapture>:

void timer3_Pc6_InputCapture()
{
 80001fc:	b580      	push	{r7, lr}
 80001fe:	af00      	add	r7, sp, #0
	/*clock to gpio c timer pin*/
	RCC->AHBENR |= RCC_GPIOCEN;
 8000200:	4b24      	ldr	r3, [pc, #144]	; (8000294 <timer3_Pc6_InputCapture+0x98>)
 8000202:	695a      	ldr	r2, [r3, #20]
 8000204:	4b23      	ldr	r3, [pc, #140]	; (8000294 <timer3_Pc6_InputCapture+0x98>)
 8000206:	2180      	movs	r1, #128	; 0x80
 8000208:	0309      	lsls	r1, r1, #12
 800020a:	430a      	orrs	r2, r1
 800020c:	615a      	str	r2, [r3, #20]
	/*gpio C6 as alternate function mode*/
	GPIOC->MODER &= ~(1U<<12);
 800020e:	4b22      	ldr	r3, [pc, #136]	; (8000298 <timer3_Pc6_InputCapture+0x9c>)
 8000210:	681a      	ldr	r2, [r3, #0]
 8000212:	4b21      	ldr	r3, [pc, #132]	; (8000298 <timer3_Pc6_InputCapture+0x9c>)
 8000214:	4921      	ldr	r1, [pc, #132]	; (800029c <timer3_Pc6_InputCapture+0xa0>)
 8000216:	400a      	ands	r2, r1
 8000218:	601a      	str	r2, [r3, #0]
	GPIOC->MODER |= (1U<<13);
 800021a:	4b1f      	ldr	r3, [pc, #124]	; (8000298 <timer3_Pc6_InputCapture+0x9c>)
 800021c:	681a      	ldr	r2, [r3, #0]
 800021e:	4b1e      	ldr	r3, [pc, #120]	; (8000298 <timer3_Pc6_InputCapture+0x9c>)
 8000220:	2180      	movs	r1, #128	; 0x80
 8000222:	0189      	lsls	r1, r1, #6
 8000224:	430a      	orrs	r2, r1
 8000226:	601a      	str	r2, [r3, #0]
	/*GPIO c6 as alternate function mode 0*/
	GPIOB->AFR[0] &= ~(1U<<24);
 8000228:	4b1d      	ldr	r3, [pc, #116]	; (80002a0 <timer3_Pc6_InputCapture+0xa4>)
 800022a:	6a1a      	ldr	r2, [r3, #32]
 800022c:	4b1c      	ldr	r3, [pc, #112]	; (80002a0 <timer3_Pc6_InputCapture+0xa4>)
 800022e:	491d      	ldr	r1, [pc, #116]	; (80002a4 <timer3_Pc6_InputCapture+0xa8>)
 8000230:	400a      	ands	r2, r1
 8000232:	621a      	str	r2, [r3, #32]
	GPIOB->AFR[0] &= ~(1U<<25);
 8000234:	4b1a      	ldr	r3, [pc, #104]	; (80002a0 <timer3_Pc6_InputCapture+0xa4>)
 8000236:	6a1a      	ldr	r2, [r3, #32]
 8000238:	4b19      	ldr	r3, [pc, #100]	; (80002a0 <timer3_Pc6_InputCapture+0xa4>)
 800023a:	491b      	ldr	r1, [pc, #108]	; (80002a8 <timer3_Pc6_InputCapture+0xac>)
 800023c:	400a      	ands	r2, r1
 800023e:	621a      	str	r2, [r3, #32]
	GPIOB->AFR[0] &= ~(1U<<26);
 8000240:	4b17      	ldr	r3, [pc, #92]	; (80002a0 <timer3_Pc6_InputCapture+0xa4>)
 8000242:	6a1a      	ldr	r2, [r3, #32]
 8000244:	4b16      	ldr	r3, [pc, #88]	; (80002a0 <timer3_Pc6_InputCapture+0xa4>)
 8000246:	4919      	ldr	r1, [pc, #100]	; (80002ac <timer3_Pc6_InputCapture+0xb0>)
 8000248:	400a      	ands	r2, r1
 800024a:	621a      	str	r2, [r3, #32]
	GPIOB->AFR[0] &= ~(1U<<27);
 800024c:	4b14      	ldr	r3, [pc, #80]	; (80002a0 <timer3_Pc6_InputCapture+0xa4>)
 800024e:	6a1a      	ldr	r2, [r3, #32]
 8000250:	4b13      	ldr	r3, [pc, #76]	; (80002a0 <timer3_Pc6_InputCapture+0xa4>)
 8000252:	4917      	ldr	r1, [pc, #92]	; (80002b0 <timer3_Pc6_InputCapture+0xb4>)
 8000254:	400a      	ands	r2, r1
 8000256:	621a      	str	r2, [r3, #32]
	/*enable clock access to timer3 */
	RCC->APB1ENR |=TIMER3_EN;
 8000258:	4b0e      	ldr	r3, [pc, #56]	; (8000294 <timer3_Pc6_InputCapture+0x98>)
 800025a:	69da      	ldr	r2, [r3, #28]
 800025c:	4b0d      	ldr	r3, [pc, #52]	; (8000294 <timer3_Pc6_InputCapture+0x98>)
 800025e:	2102      	movs	r1, #2
 8000260:	430a      	orrs	r2, r1
 8000262:	61da      	str	r2, [r3, #28]
	/*set prescalar*/
	TIM3->PSC = 8000 -1;
 8000264:	4b13      	ldr	r3, [pc, #76]	; (80002b4 <timer3_Pc6_InputCapture+0xb8>)
 8000266:	4a14      	ldr	r2, [pc, #80]	; (80002b8 <timer3_Pc6_InputCapture+0xbc>)
 8000268:	629a      	str	r2, [r3, #40]	; 0x28
	/*set channel 1 input capture at every edge*/
	TIM3->CCMR1 |= CCR1_CC1S;
 800026a:	4b12      	ldr	r3, [pc, #72]	; (80002b4 <timer3_Pc6_InputCapture+0xb8>)
 800026c:	699a      	ldr	r2, [r3, #24]
 800026e:	4b11      	ldr	r3, [pc, #68]	; (80002b4 <timer3_Pc6_InputCapture+0xb8>)
 8000270:	2101      	movs	r1, #1
 8000272:	430a      	orrs	r2, r1
 8000274:	619a      	str	r2, [r3, #24]
	/*capture at rising edge*/
	TIM3->CCER |= CCR1_CC1S;
 8000276:	4b0f      	ldr	r3, [pc, #60]	; (80002b4 <timer3_Pc6_InputCapture+0xb8>)
 8000278:	6a1a      	ldr	r2, [r3, #32]
 800027a:	4b0e      	ldr	r3, [pc, #56]	; (80002b4 <timer3_Pc6_InputCapture+0xb8>)
 800027c:	2101      	movs	r1, #1
 800027e:	430a      	orrs	r2, r1
 8000280:	621a      	str	r2, [r3, #32]
	/*enable timer 3*/
	TIM3->CR1 |= CR1_CEN;
 8000282:	4b0c      	ldr	r3, [pc, #48]	; (80002b4 <timer3_Pc6_InputCapture+0xb8>)
 8000284:	681a      	ldr	r2, [r3, #0]
 8000286:	4b0b      	ldr	r3, [pc, #44]	; (80002b4 <timer3_Pc6_InputCapture+0xb8>)
 8000288:	2101      	movs	r1, #1
 800028a:	430a      	orrs	r2, r1
 800028c:	601a      	str	r2, [r3, #0]
}
 800028e:	46c0      	nop			; (mov r8, r8)
 8000290:	46bd      	mov	sp, r7
 8000292:	bd80      	pop	{r7, pc}
 8000294:	40021000 	.word	0x40021000
 8000298:	48000800 	.word	0x48000800
 800029c:	ffffefff 	.word	0xffffefff
 80002a0:	48000400 	.word	0x48000400
 80002a4:	feffffff 	.word	0xfeffffff
 80002a8:	fdffffff 	.word	0xfdffffff
 80002ac:	fbffffff 	.word	0xfbffffff
 80002b0:	f7ffffff 	.word	0xf7ffffff
 80002b4:	40000400 	.word	0x40000400
 80002b8:	00001f3f 	.word	0x00001f3f

080002bc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002bc:	480d      	ldr	r0, [pc, #52]	; (80002f4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002be:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002c0:	e000      	b.n	80002c4 <Reset_Handler+0x8>
 80002c2:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002c4:	480c      	ldr	r0, [pc, #48]	; (80002f8 <LoopForever+0x6>)
  ldr r1, =_edata
 80002c6:	490d      	ldr	r1, [pc, #52]	; (80002fc <LoopForever+0xa>)
  ldr r2, =_sidata
 80002c8:	4a0d      	ldr	r2, [pc, #52]	; (8000300 <LoopForever+0xe>)
  movs r3, #0
 80002ca:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002cc:	e002      	b.n	80002d4 <LoopCopyDataInit>

080002ce <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002ce:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002d0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002d2:	3304      	adds	r3, #4

080002d4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002d4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002d6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002d8:	d3f9      	bcc.n	80002ce <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002da:	4a0a      	ldr	r2, [pc, #40]	; (8000304 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002dc:	4c0a      	ldr	r4, [pc, #40]	; (8000308 <LoopForever+0x16>)
  movs r3, #0
 80002de:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002e0:	e001      	b.n	80002e6 <LoopFillZerobss>

080002e2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002e2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002e4:	3204      	adds	r2, #4

080002e6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002e6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002e8:	d3fb      	bcc.n	80002e2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002ea:	f000 f811 	bl	8000310 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002ee:	f7ff ff0b 	bl	8000108 <main>

080002f2 <LoopForever>:

LoopForever:
  b LoopForever
 80002f2:	e7fe      	b.n	80002f2 <LoopForever>
  ldr   r0, =_estack
 80002f4:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 80002f8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002fc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000300:	08000378 	.word	0x08000378
  ldr r2, =_sbss
 8000304:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000308:	20000020 	.word	0x20000020

0800030c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800030c:	e7fe      	b.n	800030c <ADC_IRQHandler>
	...

08000310 <__libc_init_array>:
 8000310:	b570      	push	{r4, r5, r6, lr}
 8000312:	2600      	movs	r6, #0
 8000314:	4c0c      	ldr	r4, [pc, #48]	; (8000348 <__libc_init_array+0x38>)
 8000316:	4d0d      	ldr	r5, [pc, #52]	; (800034c <__libc_init_array+0x3c>)
 8000318:	1b64      	subs	r4, r4, r5
 800031a:	10a4      	asrs	r4, r4, #2
 800031c:	42a6      	cmp	r6, r4
 800031e:	d109      	bne.n	8000334 <__libc_init_array+0x24>
 8000320:	2600      	movs	r6, #0
 8000322:	f000 f819 	bl	8000358 <_init>
 8000326:	4c0a      	ldr	r4, [pc, #40]	; (8000350 <__libc_init_array+0x40>)
 8000328:	4d0a      	ldr	r5, [pc, #40]	; (8000354 <__libc_init_array+0x44>)
 800032a:	1b64      	subs	r4, r4, r5
 800032c:	10a4      	asrs	r4, r4, #2
 800032e:	42a6      	cmp	r6, r4
 8000330:	d105      	bne.n	800033e <__libc_init_array+0x2e>
 8000332:	bd70      	pop	{r4, r5, r6, pc}
 8000334:	00b3      	lsls	r3, r6, #2
 8000336:	58eb      	ldr	r3, [r5, r3]
 8000338:	4798      	blx	r3
 800033a:	3601      	adds	r6, #1
 800033c:	e7ee      	b.n	800031c <__libc_init_array+0xc>
 800033e:	00b3      	lsls	r3, r6, #2
 8000340:	58eb      	ldr	r3, [r5, r3]
 8000342:	4798      	blx	r3
 8000344:	3601      	adds	r6, #1
 8000346:	e7f2      	b.n	800032e <__libc_init_array+0x1e>
 8000348:	08000370 	.word	0x08000370
 800034c:	08000370 	.word	0x08000370
 8000350:	08000374 	.word	0x08000374
 8000354:	08000370 	.word	0x08000370

08000358 <_init>:
 8000358:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800035a:	46c0      	nop			; (mov r8, r8)
 800035c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800035e:	bc08      	pop	{r3}
 8000360:	469e      	mov	lr, r3
 8000362:	4770      	bx	lr

08000364 <_fini>:
 8000364:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000366:	46c0      	nop			; (mov r8, r8)
 8000368:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800036a:	bc08      	pop	{r3}
 800036c:	469e      	mov	lr, r3
 800036e:	4770      	bx	lr
