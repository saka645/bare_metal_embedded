
09_adc.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000014b0  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000044  08001570  08001570  00011570  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080015b4  080015b4  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  080015b4  080015b4  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  080015b4  080015b4  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080015b4  080015b4  000115b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080015b8  080015b8  000115b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  080015bc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000170  2000005c  08001618  0002005c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200001cc  08001618  000201cc  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020084  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000f45  00000000  00000000  000200c7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000005bf  00000000  00000000  0002100c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000170  00000000  00000000  000215d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000fc  00000000  00000000  00021740  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000a21f  00000000  00000000  0002183c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001b52  00000000  00000000  0002ba5b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00031ecc  00000000  00000000  0002d5ad  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000ba0  00000000  00000000  0005f47c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004f  00000000  00000000  0006001c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	2000005c 	.word	0x2000005c
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08001558 	.word	0x08001558

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000060 	.word	0x20000060
 8000104:	08001558 	.word	0x08001558

08000108 <__gnu_thumb1_case_shi>:
 8000108:	b403      	push	{r0, r1}
 800010a:	4671      	mov	r1, lr
 800010c:	0849      	lsrs	r1, r1, #1
 800010e:	0040      	lsls	r0, r0, #1
 8000110:	0049      	lsls	r1, r1, #1
 8000112:	5e09      	ldrsh	r1, [r1, r0]
 8000114:	0049      	lsls	r1, r1, #1
 8000116:	448e      	add	lr, r1
 8000118:	bc03      	pop	{r0, r1}
 800011a:	4770      	bx	lr

0800011c <__udivsi3>:
 800011c:	2200      	movs	r2, #0
 800011e:	0843      	lsrs	r3, r0, #1
 8000120:	428b      	cmp	r3, r1
 8000122:	d374      	bcc.n	800020e <__udivsi3+0xf2>
 8000124:	0903      	lsrs	r3, r0, #4
 8000126:	428b      	cmp	r3, r1
 8000128:	d35f      	bcc.n	80001ea <__udivsi3+0xce>
 800012a:	0a03      	lsrs	r3, r0, #8
 800012c:	428b      	cmp	r3, r1
 800012e:	d344      	bcc.n	80001ba <__udivsi3+0x9e>
 8000130:	0b03      	lsrs	r3, r0, #12
 8000132:	428b      	cmp	r3, r1
 8000134:	d328      	bcc.n	8000188 <__udivsi3+0x6c>
 8000136:	0c03      	lsrs	r3, r0, #16
 8000138:	428b      	cmp	r3, r1
 800013a:	d30d      	bcc.n	8000158 <__udivsi3+0x3c>
 800013c:	22ff      	movs	r2, #255	; 0xff
 800013e:	0209      	lsls	r1, r1, #8
 8000140:	ba12      	rev	r2, r2
 8000142:	0c03      	lsrs	r3, r0, #16
 8000144:	428b      	cmp	r3, r1
 8000146:	d302      	bcc.n	800014e <__udivsi3+0x32>
 8000148:	1212      	asrs	r2, r2, #8
 800014a:	0209      	lsls	r1, r1, #8
 800014c:	d065      	beq.n	800021a <__udivsi3+0xfe>
 800014e:	0b03      	lsrs	r3, r0, #12
 8000150:	428b      	cmp	r3, r1
 8000152:	d319      	bcc.n	8000188 <__udivsi3+0x6c>
 8000154:	e000      	b.n	8000158 <__udivsi3+0x3c>
 8000156:	0a09      	lsrs	r1, r1, #8
 8000158:	0bc3      	lsrs	r3, r0, #15
 800015a:	428b      	cmp	r3, r1
 800015c:	d301      	bcc.n	8000162 <__udivsi3+0x46>
 800015e:	03cb      	lsls	r3, r1, #15
 8000160:	1ac0      	subs	r0, r0, r3
 8000162:	4152      	adcs	r2, r2
 8000164:	0b83      	lsrs	r3, r0, #14
 8000166:	428b      	cmp	r3, r1
 8000168:	d301      	bcc.n	800016e <__udivsi3+0x52>
 800016a:	038b      	lsls	r3, r1, #14
 800016c:	1ac0      	subs	r0, r0, r3
 800016e:	4152      	adcs	r2, r2
 8000170:	0b43      	lsrs	r3, r0, #13
 8000172:	428b      	cmp	r3, r1
 8000174:	d301      	bcc.n	800017a <__udivsi3+0x5e>
 8000176:	034b      	lsls	r3, r1, #13
 8000178:	1ac0      	subs	r0, r0, r3
 800017a:	4152      	adcs	r2, r2
 800017c:	0b03      	lsrs	r3, r0, #12
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x6a>
 8000182:	030b      	lsls	r3, r1, #12
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0ac3      	lsrs	r3, r0, #11
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x76>
 800018e:	02cb      	lsls	r3, r1, #11
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0a83      	lsrs	r3, r0, #10
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x82>
 800019a:	028b      	lsls	r3, r1, #10
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0a43      	lsrs	r3, r0, #9
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x8e>
 80001a6:	024b      	lsls	r3, r1, #9
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0a03      	lsrs	r3, r0, #8
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x9a>
 80001b2:	020b      	lsls	r3, r1, #8
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	d2cd      	bcs.n	8000156 <__udivsi3+0x3a>
 80001ba:	09c3      	lsrs	r3, r0, #7
 80001bc:	428b      	cmp	r3, r1
 80001be:	d301      	bcc.n	80001c4 <__udivsi3+0xa8>
 80001c0:	01cb      	lsls	r3, r1, #7
 80001c2:	1ac0      	subs	r0, r0, r3
 80001c4:	4152      	adcs	r2, r2
 80001c6:	0983      	lsrs	r3, r0, #6
 80001c8:	428b      	cmp	r3, r1
 80001ca:	d301      	bcc.n	80001d0 <__udivsi3+0xb4>
 80001cc:	018b      	lsls	r3, r1, #6
 80001ce:	1ac0      	subs	r0, r0, r3
 80001d0:	4152      	adcs	r2, r2
 80001d2:	0943      	lsrs	r3, r0, #5
 80001d4:	428b      	cmp	r3, r1
 80001d6:	d301      	bcc.n	80001dc <__udivsi3+0xc0>
 80001d8:	014b      	lsls	r3, r1, #5
 80001da:	1ac0      	subs	r0, r0, r3
 80001dc:	4152      	adcs	r2, r2
 80001de:	0903      	lsrs	r3, r0, #4
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xcc>
 80001e4:	010b      	lsls	r3, r1, #4
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	08c3      	lsrs	r3, r0, #3
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xd8>
 80001f0:	00cb      	lsls	r3, r1, #3
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0883      	lsrs	r3, r0, #2
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xe4>
 80001fc:	008b      	lsls	r3, r1, #2
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0843      	lsrs	r3, r0, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xf0>
 8000208:	004b      	lsls	r3, r1, #1
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	1a41      	subs	r1, r0, r1
 8000210:	d200      	bcs.n	8000214 <__udivsi3+0xf8>
 8000212:	4601      	mov	r1, r0
 8000214:	4152      	adcs	r2, r2
 8000216:	4610      	mov	r0, r2
 8000218:	4770      	bx	lr
 800021a:	e7ff      	b.n	800021c <__udivsi3+0x100>
 800021c:	b501      	push	{r0, lr}
 800021e:	2000      	movs	r0, #0
 8000220:	f000 f806 	bl	8000230 <__aeabi_idiv0>
 8000224:	bd02      	pop	{r1, pc}
 8000226:	46c0      	nop			; (mov r8, r8)

08000228 <__aeabi_uidivmod>:
 8000228:	2900      	cmp	r1, #0
 800022a:	d0f7      	beq.n	800021c <__udivsi3+0x100>
 800022c:	e776      	b.n	800011c <__udivsi3>
 800022e:	4770      	bx	lr

08000230 <__aeabi_idiv0>:
 8000230:	4770      	bx	lr
 8000232:	46c0      	nop			; (mov r8, r8)

08000234 <pa1_adc_init>:
#define ADC_START		(1U<<4)
#define ADC_SR_EOC		(1U<<2)
#define ADC1_CH1		(1U<<1)

void pa1_adc_init(void)
{
 8000234:	b580      	push	{r7, lr}
 8000236:	af00      	add	r7, sp, #0
	/* configure adc gpio pin */

	/* enable clock access to gpioa */
	RCC->AHBENR |= GPIOA_EN;
 8000238:	4b16      	ldr	r3, [pc, #88]	; (8000294 <pa1_adc_init+0x60>)
 800023a:	695a      	ldr	r2, [r3, #20]
 800023c:	4b15      	ldr	r3, [pc, #84]	; (8000294 <pa1_adc_init+0x60>)
 800023e:	2180      	movs	r1, #128	; 0x80
 8000240:	0249      	lsls	r1, r1, #9
 8000242:	430a      	orrs	r2, r1
 8000244:	615a      	str	r2, [r3, #20]
	/* set pa1 mode to analog */
	GPIOA->MODER |= (1U<<2);
 8000246:	2390      	movs	r3, #144	; 0x90
 8000248:	05db      	lsls	r3, r3, #23
 800024a:	681a      	ldr	r2, [r3, #0]
 800024c:	2390      	movs	r3, #144	; 0x90
 800024e:	05db      	lsls	r3, r3, #23
 8000250:	2104      	movs	r1, #4
 8000252:	430a      	orrs	r2, r1
 8000254:	601a      	str	r2, [r3, #0]
	GPIOA->MODER |= (1U<<3);
 8000256:	2390      	movs	r3, #144	; 0x90
 8000258:	05db      	lsls	r3, r3, #23
 800025a:	681a      	ldr	r2, [r3, #0]
 800025c:	2390      	movs	r3, #144	; 0x90
 800025e:	05db      	lsls	r3, r3, #23
 8000260:	2108      	movs	r1, #8
 8000262:	430a      	orrs	r2, r1
 8000264:	601a      	str	r2, [r3, #0]
	/*configure adc module */
	ADC1->CHSELR |= ADC1_CH1;
 8000266:	4b0c      	ldr	r3, [pc, #48]	; (8000298 <pa1_adc_init+0x64>)
 8000268:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800026a:	4b0b      	ldr	r3, [pc, #44]	; (8000298 <pa1_adc_init+0x64>)
 800026c:	2102      	movs	r1, #2
 800026e:	430a      	orrs	r2, r1
 8000270:	629a      	str	r2, [r3, #40]	; 0x28
	/* enable clock access to adc */
	RCC->APB2ENR |= ADC1_EN;
 8000272:	4b08      	ldr	r3, [pc, #32]	; (8000294 <pa1_adc_init+0x60>)
 8000274:	699a      	ldr	r2, [r3, #24]
 8000276:	4b07      	ldr	r3, [pc, #28]	; (8000294 <pa1_adc_init+0x60>)
 8000278:	2180      	movs	r1, #128	; 0x80
 800027a:	0089      	lsls	r1, r1, #2
 800027c:	430a      	orrs	r2, r1
 800027e:	619a      	str	r2, [r3, #24]
	/* configure adc parameters */

	ADC1->CR |= ADC_EN;
 8000280:	4b05      	ldr	r3, [pc, #20]	; (8000298 <pa1_adc_init+0x64>)
 8000282:	689a      	ldr	r2, [r3, #8]
 8000284:	4b04      	ldr	r3, [pc, #16]	; (8000298 <pa1_adc_init+0x64>)
 8000286:	2101      	movs	r1, #1
 8000288:	430a      	orrs	r2, r1
 800028a:	609a      	str	r2, [r3, #8]

}
 800028c:	46c0      	nop			; (mov r8, r8)
 800028e:	46bd      	mov	sp, r7
 8000290:	bd80      	pop	{r7, pc}
 8000292:	46c0      	nop			; (mov r8, r8)
 8000294:	40021000 	.word	0x40021000
 8000298:	40012400 	.word	0x40012400

0800029c <start_conversion>:

void start_conversion(void)
{
 800029c:	b580      	push	{r7, lr}
 800029e:	af00      	add	r7, sp, #0
	ADC1->CR |= ADC_START;
 80002a0:	4b04      	ldr	r3, [pc, #16]	; (80002b4 <start_conversion+0x18>)
 80002a2:	689a      	ldr	r2, [r3, #8]
 80002a4:	4b03      	ldr	r3, [pc, #12]	; (80002b4 <start_conversion+0x18>)
 80002a6:	2110      	movs	r1, #16
 80002a8:	430a      	orrs	r2, r1
 80002aa:	609a      	str	r2, [r3, #8]
}
 80002ac:	46c0      	nop			; (mov r8, r8)
 80002ae:	46bd      	mov	sp, r7
 80002b0:	bd80      	pop	{r7, pc}
 80002b2:	46c0      	nop			; (mov r8, r8)
 80002b4:	40012400 	.word	0x40012400

080002b8 <adc_read>:

uint32_t adc_read(void)
{
 80002b8:	b580      	push	{r7, lr}
 80002ba:	af00      	add	r7, sp, #0
	/*wait for conversion to finish*/
	while(!(ADC1->ISR & ADC_SR_EOC));
 80002bc:	46c0      	nop			; (mov r8, r8)
 80002be:	4b05      	ldr	r3, [pc, #20]	; (80002d4 <adc_read+0x1c>)
 80002c0:	681b      	ldr	r3, [r3, #0]
 80002c2:	2204      	movs	r2, #4
 80002c4:	4013      	ands	r3, r2
 80002c6:	d0fa      	beq.n	80002be <adc_read+0x6>
	/*read data */
	return ADC1->DR;
 80002c8:	4b02      	ldr	r3, [pc, #8]	; (80002d4 <adc_read+0x1c>)
 80002ca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
}
 80002cc:	0018      	movs	r0, r3
 80002ce:	46bd      	mov	sp, r7
 80002d0:	bd80      	pop	{r7, pc}
 80002d2:	46c0      	nop			; (mov r8, r8)
 80002d4:	40012400 	.word	0x40012400

080002d8 <__io_putchar>:
void uart2_tx_init();

uint32_t sensor_value = 0;

int __io_putchar(int ch)
{
 80002d8:	b580      	push	{r7, lr}
 80002da:	b082      	sub	sp, #8
 80002dc:	af00      	add	r7, sp, #0
 80002de:	6078      	str	r0, [r7, #4]
	uart2_write(ch);
 80002e0:	687b      	ldr	r3, [r7, #4]
 80002e2:	b2db      	uxtb	r3, r3
 80002e4:	0018      	movs	r0, r3
 80002e6:	f000 f8ef 	bl	80004c8 <uart2_write>
	return ch;
 80002ea:	687b      	ldr	r3, [r7, #4]
}
 80002ec:	0018      	movs	r0, r3
 80002ee:	46bd      	mov	sp, r7
 80002f0:	b002      	add	sp, #8
 80002f2:	bd80      	pop	{r7, pc}

080002f4 <main>:
int main()
{
 80002f4:	b580      	push	{r7, lr}
 80002f6:	b082      	sub	sp, #8
 80002f8:	af00      	add	r7, sp, #0
	uart2_tx_init();
 80002fa:	f000 f823 	bl	8000344 <uart2_tx_init>
	pa1_adc_init();
 80002fe:	f7ff ff99 	bl	8000234 <pa1_adc_init>
	//start_conversion();
	while(1)
	{
		start_conversion();
 8000302:	f7ff ffcb 	bl	800029c <start_conversion>
		sensor_value = adc_read();
 8000306:	f7ff ffd7 	bl	80002b8 <adc_read>
 800030a:	0002      	movs	r2, r0
 800030c:	4b0a      	ldr	r3, [pc, #40]	; (8000338 <main+0x44>)
 800030e:	601a      	str	r2, [r3, #0]
		//uart2_write("Hello\n");
		printf("sensor value=%d\n",(int)sensor_value);
 8000310:	4b09      	ldr	r3, [pc, #36]	; (8000338 <main+0x44>)
 8000312:	681b      	ldr	r3, [r3, #0]
 8000314:	001a      	movs	r2, r3
 8000316:	4b09      	ldr	r3, [pc, #36]	; (800033c <main+0x48>)
 8000318:	0011      	movs	r1, r2
 800031a:	0018      	movs	r0, r3
 800031c:	f000 fa76 	bl	800080c <iprintf>
		for(int i=0; i<100000; i++);
 8000320:	2300      	movs	r3, #0
 8000322:	607b      	str	r3, [r7, #4]
 8000324:	e002      	b.n	800032c <main+0x38>
 8000326:	687b      	ldr	r3, [r7, #4]
 8000328:	3301      	adds	r3, #1
 800032a:	607b      	str	r3, [r7, #4]
 800032c:	687b      	ldr	r3, [r7, #4]
 800032e:	4a04      	ldr	r2, [pc, #16]	; (8000340 <main+0x4c>)
 8000330:	4293      	cmp	r3, r2
 8000332:	ddf8      	ble.n	8000326 <main+0x32>
		start_conversion();
 8000334:	e7e5      	b.n	8000302 <main+0xe>
 8000336:	46c0      	nop			; (mov r8, r8)
 8000338:	20000078 	.word	0x20000078
 800033c:	08001570 	.word	0x08001570
 8000340:	0001869f 	.word	0x0001869f

08000344 <uart2_tx_init>:
	}
}

void uart2_tx_init()
{
 8000344:	b580      	push	{r7, lr}
 8000346:	af00      	add	r7, sp, #0
	//enable clock to gpio//
	RCC->AHBENR |= GPIOAEN;
 8000348:	4b42      	ldr	r3, [pc, #264]	; (8000454 <uart2_tx_init+0x110>)
 800034a:	695a      	ldr	r2, [r3, #20]
 800034c:	4b41      	ldr	r3, [pc, #260]	; (8000454 <uart2_tx_init+0x110>)
 800034e:	2180      	movs	r1, #128	; 0x80
 8000350:	0289      	lsls	r1, r1, #10
 8000352:	430a      	orrs	r2, r1
 8000354:	615a      	str	r2, [r3, #20]
	//alternate fun mode//
	GPIOA->MODER &= ~(1U<<4);
 8000356:	2390      	movs	r3, #144	; 0x90
 8000358:	05db      	lsls	r3, r3, #23
 800035a:	681a      	ldr	r2, [r3, #0]
 800035c:	2390      	movs	r3, #144	; 0x90
 800035e:	05db      	lsls	r3, r3, #23
 8000360:	2110      	movs	r1, #16
 8000362:	438a      	bics	r2, r1
 8000364:	601a      	str	r2, [r3, #0]
	GPIOA->MODER |= (1U<<5);
 8000366:	2390      	movs	r3, #144	; 0x90
 8000368:	05db      	lsls	r3, r3, #23
 800036a:	681a      	ldr	r2, [r3, #0]
 800036c:	2390      	movs	r3, #144	; 0x90
 800036e:	05db      	lsls	r3, r3, #23
 8000370:	2120      	movs	r1, #32
 8000372:	430a      	orrs	r2, r1
 8000374:	601a      	str	r2, [r3, #0]
	//pa2 to alternate fun tx, af1
	GPIOA->AFR[0] |= (1<<8);
 8000376:	2390      	movs	r3, #144	; 0x90
 8000378:	05db      	lsls	r3, r3, #23
 800037a:	6a1a      	ldr	r2, [r3, #32]
 800037c:	2390      	movs	r3, #144	; 0x90
 800037e:	05db      	lsls	r3, r3, #23
 8000380:	2180      	movs	r1, #128	; 0x80
 8000382:	0049      	lsls	r1, r1, #1
 8000384:	430a      	orrs	r2, r1
 8000386:	621a      	str	r2, [r3, #32]
	GPIOA->AFR[0] &= ~(1<<9);
 8000388:	2390      	movs	r3, #144	; 0x90
 800038a:	05db      	lsls	r3, r3, #23
 800038c:	6a1a      	ldr	r2, [r3, #32]
 800038e:	2390      	movs	r3, #144	; 0x90
 8000390:	05db      	lsls	r3, r3, #23
 8000392:	4931      	ldr	r1, [pc, #196]	; (8000458 <uart2_tx_init+0x114>)
 8000394:	400a      	ands	r2, r1
 8000396:	621a      	str	r2, [r3, #32]
	GPIOA->AFR[0] &= ~(1<<10);
 8000398:	2390      	movs	r3, #144	; 0x90
 800039a:	05db      	lsls	r3, r3, #23
 800039c:	6a1a      	ldr	r2, [r3, #32]
 800039e:	2390      	movs	r3, #144	; 0x90
 80003a0:	05db      	lsls	r3, r3, #23
 80003a2:	492e      	ldr	r1, [pc, #184]	; (800045c <uart2_tx_init+0x118>)
 80003a4:	400a      	ands	r2, r1
 80003a6:	621a      	str	r2, [r3, #32]
	GPIOA->AFR[0] &= ~(1<<11);
 80003a8:	2390      	movs	r3, #144	; 0x90
 80003aa:	05db      	lsls	r3, r3, #23
 80003ac:	6a1a      	ldr	r2, [r3, #32]
 80003ae:	2390      	movs	r3, #144	; 0x90
 80003b0:	05db      	lsls	r3, r3, #23
 80003b2:	492b      	ldr	r1, [pc, #172]	; (8000460 <uart2_tx_init+0x11c>)
 80003b4:	400a      	ands	r2, r1
 80003b6:	621a      	str	r2, [r3, #32]

	/*PA3 AS ALTERNATE FUN*/
	//alternate fun mode RX//
	GPIOA->MODER &= ~(1U<<6);
 80003b8:	2390      	movs	r3, #144	; 0x90
 80003ba:	05db      	lsls	r3, r3, #23
 80003bc:	681a      	ldr	r2, [r3, #0]
 80003be:	2390      	movs	r3, #144	; 0x90
 80003c0:	05db      	lsls	r3, r3, #23
 80003c2:	2140      	movs	r1, #64	; 0x40
 80003c4:	438a      	bics	r2, r1
 80003c6:	601a      	str	r2, [r3, #0]
	GPIOA->MODER |= (1U<<7);
 80003c8:	2390      	movs	r3, #144	; 0x90
 80003ca:	05db      	lsls	r3, r3, #23
 80003cc:	681a      	ldr	r2, [r3, #0]
 80003ce:	2390      	movs	r3, #144	; 0x90
 80003d0:	05db      	lsls	r3, r3, #23
 80003d2:	2180      	movs	r1, #128	; 0x80
 80003d4:	430a      	orrs	r2, r1
 80003d6:	601a      	str	r2, [r3, #0]
	//pa2 to alternate fun tx, af1
	GPIOA->AFR[0] |= (1<<12);
 80003d8:	2390      	movs	r3, #144	; 0x90
 80003da:	05db      	lsls	r3, r3, #23
 80003dc:	6a1a      	ldr	r2, [r3, #32]
 80003de:	2390      	movs	r3, #144	; 0x90
 80003e0:	05db      	lsls	r3, r3, #23
 80003e2:	2180      	movs	r1, #128	; 0x80
 80003e4:	0149      	lsls	r1, r1, #5
 80003e6:	430a      	orrs	r2, r1
 80003e8:	621a      	str	r2, [r3, #32]
	GPIOA->AFR[0] &= ~(1<<13);
 80003ea:	2390      	movs	r3, #144	; 0x90
 80003ec:	05db      	lsls	r3, r3, #23
 80003ee:	6a1a      	ldr	r2, [r3, #32]
 80003f0:	2390      	movs	r3, #144	; 0x90
 80003f2:	05db      	lsls	r3, r3, #23
 80003f4:	491b      	ldr	r1, [pc, #108]	; (8000464 <uart2_tx_init+0x120>)
 80003f6:	400a      	ands	r2, r1
 80003f8:	621a      	str	r2, [r3, #32]
	GPIOA->AFR[0] &= ~(1<<14);
 80003fa:	2390      	movs	r3, #144	; 0x90
 80003fc:	05db      	lsls	r3, r3, #23
 80003fe:	6a1a      	ldr	r2, [r3, #32]
 8000400:	2390      	movs	r3, #144	; 0x90
 8000402:	05db      	lsls	r3, r3, #23
 8000404:	4918      	ldr	r1, [pc, #96]	; (8000468 <uart2_tx_init+0x124>)
 8000406:	400a      	ands	r2, r1
 8000408:	621a      	str	r2, [r3, #32]
	GPIOA->AFR[0] &= ~(1<<15);
 800040a:	2390      	movs	r3, #144	; 0x90
 800040c:	05db      	lsls	r3, r3, #23
 800040e:	6a1a      	ldr	r2, [r3, #32]
 8000410:	2390      	movs	r3, #144	; 0x90
 8000412:	05db      	lsls	r3, r3, #23
 8000414:	4915      	ldr	r1, [pc, #84]	; (800046c <uart2_tx_init+0x128>)
 8000416:	400a      	ands	r2, r1
 8000418:	621a      	str	r2, [r3, #32]


	//enable clock to uart2//
	RCC->APB1ENR |= UART2EN;
 800041a:	4b0e      	ldr	r3, [pc, #56]	; (8000454 <uart2_tx_init+0x110>)
 800041c:	69da      	ldr	r2, [r3, #28]
 800041e:	4b0d      	ldr	r3, [pc, #52]	; (8000454 <uart2_tx_init+0x110>)
 8000420:	2180      	movs	r1, #128	; 0x80
 8000422:	0289      	lsls	r1, r1, #10
 8000424:	430a      	orrs	r2, r1
 8000426:	61da      	str	r2, [r3, #28]
	//baud rate//
	set_baudrate(USART2, APB1_CLK, UART_BAUDRATE);
 8000428:	2396      	movs	r3, #150	; 0x96
 800042a:	019b      	lsls	r3, r3, #6
 800042c:	4910      	ldr	r1, [pc, #64]	; (8000470 <uart2_tx_init+0x12c>)
 800042e:	4811      	ldr	r0, [pc, #68]	; (8000474 <uart2_tx_init+0x130>)
 8000430:	001a      	movs	r2, r3
 8000432:	f000 f821 	bl	8000478 <set_baudrate>
	//USART2->BRR = 0x1388;
	//program stop bits//
	USART2->CR2 = 0x00;
 8000436:	4b0f      	ldr	r3, [pc, #60]	; (8000474 <uart2_tx_init+0x130>)
 8000438:	2200      	movs	r2, #0
 800043a:	605a      	str	r2, [r3, #4]
	//configure transmit direction//
	USART2->CR1 = (CR1_TE | CR1_RE);
 800043c:	4b0d      	ldr	r3, [pc, #52]	; (8000474 <uart2_tx_init+0x130>)
 800043e:	220c      	movs	r2, #12
 8000440:	601a      	str	r2, [r3, #0]
	//enable uart module//
	USART2->CR1 |= UART_EN;
 8000442:	4b0c      	ldr	r3, [pc, #48]	; (8000474 <uart2_tx_init+0x130>)
 8000444:	681a      	ldr	r2, [r3, #0]
 8000446:	4b0b      	ldr	r3, [pc, #44]	; (8000474 <uart2_tx_init+0x130>)
 8000448:	2101      	movs	r1, #1
 800044a:	430a      	orrs	r2, r1
 800044c:	601a      	str	r2, [r3, #0]
}
 800044e:	46c0      	nop			; (mov r8, r8)
 8000450:	46bd      	mov	sp, r7
 8000452:	bd80      	pop	{r7, pc}
 8000454:	40021000 	.word	0x40021000
 8000458:	fffffdff 	.word	0xfffffdff
 800045c:	fffffbff 	.word	0xfffffbff
 8000460:	fffff7ff 	.word	0xfffff7ff
 8000464:	ffffdfff 	.word	0xffffdfff
 8000468:	ffffbfff 	.word	0xffffbfff
 800046c:	ffff7fff 	.word	0xffff7fff
 8000470:	02dc6c00 	.word	0x02dc6c00
 8000474:	40004400 	.word	0x40004400

08000478 <set_baudrate>:
static void set_baudrate(USART_TypeDef *USARTTX, uint32_t PeriphClk, uint32_t BaudRate)
{
 8000478:	b580      	push	{r7, lr}
 800047a:	b084      	sub	sp, #16
 800047c:	af00      	add	r7, sp, #0
 800047e:	60f8      	str	r0, [r7, #12]
 8000480:	60b9      	str	r1, [r7, #8]
 8000482:	607a      	str	r2, [r7, #4]
	USARTTX->BRR = compute_uart_div(PeriphClk, BaudRate);//0x340//1a1
 8000484:	687a      	ldr	r2, [r7, #4]
 8000486:	68bb      	ldr	r3, [r7, #8]
 8000488:	0011      	movs	r1, r2
 800048a:	0018      	movs	r0, r3
 800048c:	f000 f808 	bl	80004a0 <compute_uart_div>
 8000490:	0003      	movs	r3, r0
 8000492:	001a      	movs	r2, r3
 8000494:	68fb      	ldr	r3, [r7, #12]
 8000496:	60da      	str	r2, [r3, #12]
}
 8000498:	46c0      	nop			; (mov r8, r8)
 800049a:	46bd      	mov	sp, r7
 800049c:	b004      	add	sp, #16
 800049e:	bd80      	pop	{r7, pc}

080004a0 <compute_uart_div>:

static uint16_t compute_uart_div(uint32_t PeriphClk, uint32_t BaudRate)
{
 80004a0:	b580      	push	{r7, lr}
 80004a2:	b082      	sub	sp, #8
 80004a4:	af00      	add	r7, sp, #0
 80004a6:	6078      	str	r0, [r7, #4]
 80004a8:	6039      	str	r1, [r7, #0]
	return ((PeriphClk + (BaudRate/2U))/BaudRate);
 80004aa:	683b      	ldr	r3, [r7, #0]
 80004ac:	085a      	lsrs	r2, r3, #1
 80004ae:	687b      	ldr	r3, [r7, #4]
 80004b0:	18d3      	adds	r3, r2, r3
 80004b2:	6839      	ldr	r1, [r7, #0]
 80004b4:	0018      	movs	r0, r3
 80004b6:	f7ff fe31 	bl	800011c <__udivsi3>
 80004ba:	0003      	movs	r3, r0
 80004bc:	b29b      	uxth	r3, r3
}
 80004be:	0018      	movs	r0, r3
 80004c0:	46bd      	mov	sp, r7
 80004c2:	b002      	add	sp, #8
 80004c4:	bd80      	pop	{r7, pc}
	...

080004c8 <uart2_write>:
{
	while(!(USART2->ISR & SR_RXNE));
	return USART2->RDR;
}
void uart2_write(uint8_t ch)
{
 80004c8:	b580      	push	{r7, lr}
 80004ca:	b082      	sub	sp, #8
 80004cc:	af00      	add	r7, sp, #0
 80004ce:	0002      	movs	r2, r0
 80004d0:	1dfb      	adds	r3, r7, #7
 80004d2:	701a      	strb	r2, [r3, #0]
	//while(*ch)
	{
	//make sure transmit data reg is empty//
	//write transmit data to reg//
	while(!(USART2->ISR & SR_TXE));
 80004d4:	46c0      	nop			; (mov r8, r8)
 80004d6:	4b07      	ldr	r3, [pc, #28]	; (80004f4 <uart2_write+0x2c>)
 80004d8:	69db      	ldr	r3, [r3, #28]
 80004da:	2280      	movs	r2, #128	; 0x80
 80004dc:	4013      	ands	r3, r2
 80004de:	d0fa      	beq.n	80004d6 <uart2_write+0xe>
	USART2->TDR = (ch&0xff);
 80004e0:	4a04      	ldr	r2, [pc, #16]	; (80004f4 <uart2_write+0x2c>)
 80004e2:	1dfb      	adds	r3, r7, #7
 80004e4:	781b      	ldrb	r3, [r3, #0]
 80004e6:	b29b      	uxth	r3, r3
 80004e8:	8513      	strh	r3, [r2, #40]	; 0x28
	//for(int i=0; i<1000; i++);
	//ch++;
	}
}
 80004ea:	46c0      	nop			; (mov r8, r8)
 80004ec:	46bd      	mov	sp, r7
 80004ee:	b002      	add	sp, #8
 80004f0:	bd80      	pop	{r7, pc}
 80004f2:	46c0      	nop			; (mov r8, r8)
 80004f4:	40004400 	.word	0x40004400

080004f8 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80004f8:	b580      	push	{r7, lr}
 80004fa:	b086      	sub	sp, #24
 80004fc:	af00      	add	r7, sp, #0
 80004fe:	60f8      	str	r0, [r7, #12]
 8000500:	60b9      	str	r1, [r7, #8]
 8000502:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000504:	2300      	movs	r3, #0
 8000506:	617b      	str	r3, [r7, #20]
 8000508:	e00a      	b.n	8000520 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800050a:	e000      	b.n	800050e <_read+0x16>
 800050c:	bf00      	nop
 800050e:	0001      	movs	r1, r0
 8000510:	68bb      	ldr	r3, [r7, #8]
 8000512:	1c5a      	adds	r2, r3, #1
 8000514:	60ba      	str	r2, [r7, #8]
 8000516:	b2ca      	uxtb	r2, r1
 8000518:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800051a:	697b      	ldr	r3, [r7, #20]
 800051c:	3301      	adds	r3, #1
 800051e:	617b      	str	r3, [r7, #20]
 8000520:	697a      	ldr	r2, [r7, #20]
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	429a      	cmp	r2, r3
 8000526:	dbf0      	blt.n	800050a <_read+0x12>
  }

  return len;
 8000528:	687b      	ldr	r3, [r7, #4]
}
 800052a:	0018      	movs	r0, r3
 800052c:	46bd      	mov	sp, r7
 800052e:	b006      	add	sp, #24
 8000530:	bd80      	pop	{r7, pc}

08000532 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000532:	b580      	push	{r7, lr}
 8000534:	b086      	sub	sp, #24
 8000536:	af00      	add	r7, sp, #0
 8000538:	60f8      	str	r0, [r7, #12]
 800053a:	60b9      	str	r1, [r7, #8]
 800053c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800053e:	2300      	movs	r3, #0
 8000540:	617b      	str	r3, [r7, #20]
 8000542:	e009      	b.n	8000558 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000544:	68bb      	ldr	r3, [r7, #8]
 8000546:	1c5a      	adds	r2, r3, #1
 8000548:	60ba      	str	r2, [r7, #8]
 800054a:	781b      	ldrb	r3, [r3, #0]
 800054c:	0018      	movs	r0, r3
 800054e:	f7ff fec3 	bl	80002d8 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000552:	697b      	ldr	r3, [r7, #20]
 8000554:	3301      	adds	r3, #1
 8000556:	617b      	str	r3, [r7, #20]
 8000558:	697a      	ldr	r2, [r7, #20]
 800055a:	687b      	ldr	r3, [r7, #4]
 800055c:	429a      	cmp	r2, r3
 800055e:	dbf1      	blt.n	8000544 <_write+0x12>
  }
  return len;
 8000560:	687b      	ldr	r3, [r7, #4]
}
 8000562:	0018      	movs	r0, r3
 8000564:	46bd      	mov	sp, r7
 8000566:	b006      	add	sp, #24
 8000568:	bd80      	pop	{r7, pc}

0800056a <_close>:

int _close(int file)
{
 800056a:	b580      	push	{r7, lr}
 800056c:	b082      	sub	sp, #8
 800056e:	af00      	add	r7, sp, #0
 8000570:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000572:	2301      	movs	r3, #1
 8000574:	425b      	negs	r3, r3
}
 8000576:	0018      	movs	r0, r3
 8000578:	46bd      	mov	sp, r7
 800057a:	b002      	add	sp, #8
 800057c:	bd80      	pop	{r7, pc}

0800057e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800057e:	b580      	push	{r7, lr}
 8000580:	b082      	sub	sp, #8
 8000582:	af00      	add	r7, sp, #0
 8000584:	6078      	str	r0, [r7, #4]
 8000586:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000588:	683b      	ldr	r3, [r7, #0]
 800058a:	2280      	movs	r2, #128	; 0x80
 800058c:	0192      	lsls	r2, r2, #6
 800058e:	605a      	str	r2, [r3, #4]
  return 0;
 8000590:	2300      	movs	r3, #0
}
 8000592:	0018      	movs	r0, r3
 8000594:	46bd      	mov	sp, r7
 8000596:	b002      	add	sp, #8
 8000598:	bd80      	pop	{r7, pc}

0800059a <_isatty>:

int _isatty(int file)
{
 800059a:	b580      	push	{r7, lr}
 800059c:	b082      	sub	sp, #8
 800059e:	af00      	add	r7, sp, #0
 80005a0:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80005a2:	2301      	movs	r3, #1
}
 80005a4:	0018      	movs	r0, r3
 80005a6:	46bd      	mov	sp, r7
 80005a8:	b002      	add	sp, #8
 80005aa:	bd80      	pop	{r7, pc}

080005ac <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80005ac:	b580      	push	{r7, lr}
 80005ae:	b084      	sub	sp, #16
 80005b0:	af00      	add	r7, sp, #0
 80005b2:	60f8      	str	r0, [r7, #12]
 80005b4:	60b9      	str	r1, [r7, #8]
 80005b6:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80005b8:	2300      	movs	r3, #0
}
 80005ba:	0018      	movs	r0, r3
 80005bc:	46bd      	mov	sp, r7
 80005be:	b004      	add	sp, #16
 80005c0:	bd80      	pop	{r7, pc}
	...

080005c4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80005c4:	b580      	push	{r7, lr}
 80005c6:	b086      	sub	sp, #24
 80005c8:	af00      	add	r7, sp, #0
 80005ca:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80005cc:	4a14      	ldr	r2, [pc, #80]	; (8000620 <_sbrk+0x5c>)
 80005ce:	4b15      	ldr	r3, [pc, #84]	; (8000624 <_sbrk+0x60>)
 80005d0:	1ad3      	subs	r3, r2, r3
 80005d2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80005d4:	697b      	ldr	r3, [r7, #20]
 80005d6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80005d8:	4b13      	ldr	r3, [pc, #76]	; (8000628 <_sbrk+0x64>)
 80005da:	681b      	ldr	r3, [r3, #0]
 80005dc:	2b00      	cmp	r3, #0
 80005de:	d102      	bne.n	80005e6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80005e0:	4b11      	ldr	r3, [pc, #68]	; (8000628 <_sbrk+0x64>)
 80005e2:	4a12      	ldr	r2, [pc, #72]	; (800062c <_sbrk+0x68>)
 80005e4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80005e6:	4b10      	ldr	r3, [pc, #64]	; (8000628 <_sbrk+0x64>)
 80005e8:	681a      	ldr	r2, [r3, #0]
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	18d3      	adds	r3, r2, r3
 80005ee:	693a      	ldr	r2, [r7, #16]
 80005f0:	429a      	cmp	r2, r3
 80005f2:	d207      	bcs.n	8000604 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80005f4:	f000 f9bc 	bl	8000970 <__errno>
 80005f8:	0003      	movs	r3, r0
 80005fa:	220c      	movs	r2, #12
 80005fc:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80005fe:	2301      	movs	r3, #1
 8000600:	425b      	negs	r3, r3
 8000602:	e009      	b.n	8000618 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000604:	4b08      	ldr	r3, [pc, #32]	; (8000628 <_sbrk+0x64>)
 8000606:	681b      	ldr	r3, [r3, #0]
 8000608:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800060a:	4b07      	ldr	r3, [pc, #28]	; (8000628 <_sbrk+0x64>)
 800060c:	681a      	ldr	r2, [r3, #0]
 800060e:	687b      	ldr	r3, [r7, #4]
 8000610:	18d2      	adds	r2, r2, r3
 8000612:	4b05      	ldr	r3, [pc, #20]	; (8000628 <_sbrk+0x64>)
 8000614:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 8000616:	68fb      	ldr	r3, [r7, #12]
}
 8000618:	0018      	movs	r0, r3
 800061a:	46bd      	mov	sp, r7
 800061c:	b006      	add	sp, #24
 800061e:	bd80      	pop	{r7, pc}
 8000620:	20002000 	.word	0x20002000
 8000624:	00000400 	.word	0x00000400
 8000628:	2000007c 	.word	0x2000007c
 800062c:	200001d0 	.word	0x200001d0

08000630 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000630:	480d      	ldr	r0, [pc, #52]	; (8000668 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000632:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000634:	e000      	b.n	8000638 <Reset_Handler+0x8>
 8000636:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000638:	480c      	ldr	r0, [pc, #48]	; (800066c <LoopForever+0x6>)
  ldr r1, =_edata
 800063a:	490d      	ldr	r1, [pc, #52]	; (8000670 <LoopForever+0xa>)
  ldr r2, =_sidata
 800063c:	4a0d      	ldr	r2, [pc, #52]	; (8000674 <LoopForever+0xe>)
  movs r3, #0
 800063e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000640:	e002      	b.n	8000648 <LoopCopyDataInit>

08000642 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000642:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000644:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000646:	3304      	adds	r3, #4

08000648 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000648:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800064a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800064c:	d3f9      	bcc.n	8000642 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800064e:	4a0a      	ldr	r2, [pc, #40]	; (8000678 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000650:	4c0a      	ldr	r4, [pc, #40]	; (800067c <LoopForever+0x16>)
  movs r3, #0
 8000652:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000654:	e001      	b.n	800065a <LoopFillZerobss>

08000656 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000656:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000658:	3204      	adds	r2, #4

0800065a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800065a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800065c:	d3fb      	bcc.n	8000656 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800065e:	f000 f98d 	bl	800097c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000662:	f7ff fe47 	bl	80002f4 <main>

08000666 <LoopForever>:

LoopForever:
  b LoopForever
 8000666:	e7fe      	b.n	8000666 <LoopForever>
  ldr   r0, =_estack
 8000668:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 800066c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000670:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000674:	080015bc 	.word	0x080015bc
  ldr r2, =_sbss
 8000678:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 800067c:	200001cc 	.word	0x200001cc

08000680 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000680:	e7fe      	b.n	8000680 <ADC_IRQHandler>
	...

08000684 <std>:
 8000684:	2300      	movs	r3, #0
 8000686:	b510      	push	{r4, lr}
 8000688:	0004      	movs	r4, r0
 800068a:	6003      	str	r3, [r0, #0]
 800068c:	6043      	str	r3, [r0, #4]
 800068e:	6083      	str	r3, [r0, #8]
 8000690:	8181      	strh	r1, [r0, #12]
 8000692:	6643      	str	r3, [r0, #100]	; 0x64
 8000694:	81c2      	strh	r2, [r0, #14]
 8000696:	6103      	str	r3, [r0, #16]
 8000698:	6143      	str	r3, [r0, #20]
 800069a:	6183      	str	r3, [r0, #24]
 800069c:	0019      	movs	r1, r3
 800069e:	2208      	movs	r2, #8
 80006a0:	305c      	adds	r0, #92	; 0x5c
 80006a2:	f000 f90f 	bl	80008c4 <memset>
 80006a6:	4b0b      	ldr	r3, [pc, #44]	; (80006d4 <std+0x50>)
 80006a8:	6224      	str	r4, [r4, #32]
 80006aa:	6263      	str	r3, [r4, #36]	; 0x24
 80006ac:	4b0a      	ldr	r3, [pc, #40]	; (80006d8 <std+0x54>)
 80006ae:	62a3      	str	r3, [r4, #40]	; 0x28
 80006b0:	4b0a      	ldr	r3, [pc, #40]	; (80006dc <std+0x58>)
 80006b2:	62e3      	str	r3, [r4, #44]	; 0x2c
 80006b4:	4b0a      	ldr	r3, [pc, #40]	; (80006e0 <std+0x5c>)
 80006b6:	6323      	str	r3, [r4, #48]	; 0x30
 80006b8:	4b0a      	ldr	r3, [pc, #40]	; (80006e4 <std+0x60>)
 80006ba:	429c      	cmp	r4, r3
 80006bc:	d005      	beq.n	80006ca <std+0x46>
 80006be:	4b0a      	ldr	r3, [pc, #40]	; (80006e8 <std+0x64>)
 80006c0:	429c      	cmp	r4, r3
 80006c2:	d002      	beq.n	80006ca <std+0x46>
 80006c4:	4b09      	ldr	r3, [pc, #36]	; (80006ec <std+0x68>)
 80006c6:	429c      	cmp	r4, r3
 80006c8:	d103      	bne.n	80006d2 <std+0x4e>
 80006ca:	0020      	movs	r0, r4
 80006cc:	3058      	adds	r0, #88	; 0x58
 80006ce:	f000 f979 	bl	80009c4 <__retarget_lock_init_recursive>
 80006d2:	bd10      	pop	{r4, pc}
 80006d4:	0800082d 	.word	0x0800082d
 80006d8:	08000855 	.word	0x08000855
 80006dc:	0800088d 	.word	0x0800088d
 80006e0:	080008b9 	.word	0x080008b9
 80006e4:	20000080 	.word	0x20000080
 80006e8:	200000e8 	.word	0x200000e8
 80006ec:	20000150 	.word	0x20000150

080006f0 <stdio_exit_handler>:
 80006f0:	b510      	push	{r4, lr}
 80006f2:	4a03      	ldr	r2, [pc, #12]	; (8000700 <stdio_exit_handler+0x10>)
 80006f4:	4903      	ldr	r1, [pc, #12]	; (8000704 <stdio_exit_handler+0x14>)
 80006f6:	4804      	ldr	r0, [pc, #16]	; (8000708 <stdio_exit_handler+0x18>)
 80006f8:	f000 f86c 	bl	80007d4 <_fwalk_sglue>
 80006fc:	bd10      	pop	{r4, pc}
 80006fe:	46c0      	nop			; (mov r8, r8)
 8000700:	20000000 	.word	0x20000000
 8000704:	08001265 	.word	0x08001265
 8000708:	2000000c 	.word	0x2000000c

0800070c <cleanup_stdio>:
 800070c:	6841      	ldr	r1, [r0, #4]
 800070e:	4b0b      	ldr	r3, [pc, #44]	; (800073c <cleanup_stdio+0x30>)
 8000710:	b510      	push	{r4, lr}
 8000712:	0004      	movs	r4, r0
 8000714:	4299      	cmp	r1, r3
 8000716:	d001      	beq.n	800071c <cleanup_stdio+0x10>
 8000718:	f000 fda4 	bl	8001264 <_fflush_r>
 800071c:	68a1      	ldr	r1, [r4, #8]
 800071e:	4b08      	ldr	r3, [pc, #32]	; (8000740 <cleanup_stdio+0x34>)
 8000720:	4299      	cmp	r1, r3
 8000722:	d002      	beq.n	800072a <cleanup_stdio+0x1e>
 8000724:	0020      	movs	r0, r4
 8000726:	f000 fd9d 	bl	8001264 <_fflush_r>
 800072a:	68e1      	ldr	r1, [r4, #12]
 800072c:	4b05      	ldr	r3, [pc, #20]	; (8000744 <cleanup_stdio+0x38>)
 800072e:	4299      	cmp	r1, r3
 8000730:	d002      	beq.n	8000738 <cleanup_stdio+0x2c>
 8000732:	0020      	movs	r0, r4
 8000734:	f000 fd96 	bl	8001264 <_fflush_r>
 8000738:	bd10      	pop	{r4, pc}
 800073a:	46c0      	nop			; (mov r8, r8)
 800073c:	20000080 	.word	0x20000080
 8000740:	200000e8 	.word	0x200000e8
 8000744:	20000150 	.word	0x20000150

08000748 <global_stdio_init.part.0>:
 8000748:	b510      	push	{r4, lr}
 800074a:	4b09      	ldr	r3, [pc, #36]	; (8000770 <global_stdio_init.part.0+0x28>)
 800074c:	4a09      	ldr	r2, [pc, #36]	; (8000774 <global_stdio_init.part.0+0x2c>)
 800074e:	2104      	movs	r1, #4
 8000750:	601a      	str	r2, [r3, #0]
 8000752:	4809      	ldr	r0, [pc, #36]	; (8000778 <global_stdio_init.part.0+0x30>)
 8000754:	2200      	movs	r2, #0
 8000756:	f7ff ff95 	bl	8000684 <std>
 800075a:	2201      	movs	r2, #1
 800075c:	2109      	movs	r1, #9
 800075e:	4807      	ldr	r0, [pc, #28]	; (800077c <global_stdio_init.part.0+0x34>)
 8000760:	f7ff ff90 	bl	8000684 <std>
 8000764:	2202      	movs	r2, #2
 8000766:	2112      	movs	r1, #18
 8000768:	4805      	ldr	r0, [pc, #20]	; (8000780 <global_stdio_init.part.0+0x38>)
 800076a:	f7ff ff8b 	bl	8000684 <std>
 800076e:	bd10      	pop	{r4, pc}
 8000770:	200001b8 	.word	0x200001b8
 8000774:	080006f1 	.word	0x080006f1
 8000778:	20000080 	.word	0x20000080
 800077c:	200000e8 	.word	0x200000e8
 8000780:	20000150 	.word	0x20000150

08000784 <__sfp_lock_acquire>:
 8000784:	b510      	push	{r4, lr}
 8000786:	4802      	ldr	r0, [pc, #8]	; (8000790 <__sfp_lock_acquire+0xc>)
 8000788:	f000 f91d 	bl	80009c6 <__retarget_lock_acquire_recursive>
 800078c:	bd10      	pop	{r4, pc}
 800078e:	46c0      	nop			; (mov r8, r8)
 8000790:	200001c1 	.word	0x200001c1

08000794 <__sfp_lock_release>:
 8000794:	b510      	push	{r4, lr}
 8000796:	4802      	ldr	r0, [pc, #8]	; (80007a0 <__sfp_lock_release+0xc>)
 8000798:	f000 f916 	bl	80009c8 <__retarget_lock_release_recursive>
 800079c:	bd10      	pop	{r4, pc}
 800079e:	46c0      	nop			; (mov r8, r8)
 80007a0:	200001c1 	.word	0x200001c1

080007a4 <__sinit>:
 80007a4:	b510      	push	{r4, lr}
 80007a6:	0004      	movs	r4, r0
 80007a8:	f7ff ffec 	bl	8000784 <__sfp_lock_acquire>
 80007ac:	6a23      	ldr	r3, [r4, #32]
 80007ae:	2b00      	cmp	r3, #0
 80007b0:	d002      	beq.n	80007b8 <__sinit+0x14>
 80007b2:	f7ff ffef 	bl	8000794 <__sfp_lock_release>
 80007b6:	bd10      	pop	{r4, pc}
 80007b8:	4b04      	ldr	r3, [pc, #16]	; (80007cc <__sinit+0x28>)
 80007ba:	6223      	str	r3, [r4, #32]
 80007bc:	4b04      	ldr	r3, [pc, #16]	; (80007d0 <__sinit+0x2c>)
 80007be:	681b      	ldr	r3, [r3, #0]
 80007c0:	2b00      	cmp	r3, #0
 80007c2:	d1f6      	bne.n	80007b2 <__sinit+0xe>
 80007c4:	f7ff ffc0 	bl	8000748 <global_stdio_init.part.0>
 80007c8:	e7f3      	b.n	80007b2 <__sinit+0xe>
 80007ca:	46c0      	nop			; (mov r8, r8)
 80007cc:	0800070d 	.word	0x0800070d
 80007d0:	200001b8 	.word	0x200001b8

080007d4 <_fwalk_sglue>:
 80007d4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80007d6:	0014      	movs	r4, r2
 80007d8:	2600      	movs	r6, #0
 80007da:	9000      	str	r0, [sp, #0]
 80007dc:	9101      	str	r1, [sp, #4]
 80007de:	68a5      	ldr	r5, [r4, #8]
 80007e0:	6867      	ldr	r7, [r4, #4]
 80007e2:	3f01      	subs	r7, #1
 80007e4:	d504      	bpl.n	80007f0 <_fwalk_sglue+0x1c>
 80007e6:	6824      	ldr	r4, [r4, #0]
 80007e8:	2c00      	cmp	r4, #0
 80007ea:	d1f8      	bne.n	80007de <_fwalk_sglue+0xa>
 80007ec:	0030      	movs	r0, r6
 80007ee:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80007f0:	89ab      	ldrh	r3, [r5, #12]
 80007f2:	2b01      	cmp	r3, #1
 80007f4:	d908      	bls.n	8000808 <_fwalk_sglue+0x34>
 80007f6:	220e      	movs	r2, #14
 80007f8:	5eab      	ldrsh	r3, [r5, r2]
 80007fa:	3301      	adds	r3, #1
 80007fc:	d004      	beq.n	8000808 <_fwalk_sglue+0x34>
 80007fe:	0029      	movs	r1, r5
 8000800:	9800      	ldr	r0, [sp, #0]
 8000802:	9b01      	ldr	r3, [sp, #4]
 8000804:	4798      	blx	r3
 8000806:	4306      	orrs	r6, r0
 8000808:	3568      	adds	r5, #104	; 0x68
 800080a:	e7ea      	b.n	80007e2 <_fwalk_sglue+0xe>

0800080c <iprintf>:
 800080c:	b40f      	push	{r0, r1, r2, r3}
 800080e:	b507      	push	{r0, r1, r2, lr}
 8000810:	4905      	ldr	r1, [pc, #20]	; (8000828 <iprintf+0x1c>)
 8000812:	ab04      	add	r3, sp, #16
 8000814:	6808      	ldr	r0, [r1, #0]
 8000816:	cb04      	ldmia	r3!, {r2}
 8000818:	6881      	ldr	r1, [r0, #8]
 800081a:	9301      	str	r3, [sp, #4]
 800081c:	f000 f9fc 	bl	8000c18 <_vfiprintf_r>
 8000820:	b003      	add	sp, #12
 8000822:	bc08      	pop	{r3}
 8000824:	b004      	add	sp, #16
 8000826:	4718      	bx	r3
 8000828:	20000058 	.word	0x20000058

0800082c <__sread>:
 800082c:	b570      	push	{r4, r5, r6, lr}
 800082e:	000c      	movs	r4, r1
 8000830:	250e      	movs	r5, #14
 8000832:	5f49      	ldrsh	r1, [r1, r5]
 8000834:	f000 f874 	bl	8000920 <_read_r>
 8000838:	2800      	cmp	r0, #0
 800083a:	db03      	blt.n	8000844 <__sread+0x18>
 800083c:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800083e:	181b      	adds	r3, r3, r0
 8000840:	6563      	str	r3, [r4, #84]	; 0x54
 8000842:	bd70      	pop	{r4, r5, r6, pc}
 8000844:	89a3      	ldrh	r3, [r4, #12]
 8000846:	4a02      	ldr	r2, [pc, #8]	; (8000850 <__sread+0x24>)
 8000848:	4013      	ands	r3, r2
 800084a:	81a3      	strh	r3, [r4, #12]
 800084c:	e7f9      	b.n	8000842 <__sread+0x16>
 800084e:	46c0      	nop			; (mov r8, r8)
 8000850:	ffffefff 	.word	0xffffefff

08000854 <__swrite>:
 8000854:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000856:	001f      	movs	r7, r3
 8000858:	898b      	ldrh	r3, [r1, #12]
 800085a:	0005      	movs	r5, r0
 800085c:	000c      	movs	r4, r1
 800085e:	0016      	movs	r6, r2
 8000860:	05db      	lsls	r3, r3, #23
 8000862:	d505      	bpl.n	8000870 <__swrite+0x1c>
 8000864:	230e      	movs	r3, #14
 8000866:	5ec9      	ldrsh	r1, [r1, r3]
 8000868:	2200      	movs	r2, #0
 800086a:	2302      	movs	r3, #2
 800086c:	f000 f844 	bl	80008f8 <_lseek_r>
 8000870:	89a3      	ldrh	r3, [r4, #12]
 8000872:	4a05      	ldr	r2, [pc, #20]	; (8000888 <__swrite+0x34>)
 8000874:	0028      	movs	r0, r5
 8000876:	4013      	ands	r3, r2
 8000878:	81a3      	strh	r3, [r4, #12]
 800087a:	0032      	movs	r2, r6
 800087c:	230e      	movs	r3, #14
 800087e:	5ee1      	ldrsh	r1, [r4, r3]
 8000880:	003b      	movs	r3, r7
 8000882:	f000 f861 	bl	8000948 <_write_r>
 8000886:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000888:	ffffefff 	.word	0xffffefff

0800088c <__sseek>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	000c      	movs	r4, r1
 8000890:	250e      	movs	r5, #14
 8000892:	5f49      	ldrsh	r1, [r1, r5]
 8000894:	f000 f830 	bl	80008f8 <_lseek_r>
 8000898:	89a3      	ldrh	r3, [r4, #12]
 800089a:	1c42      	adds	r2, r0, #1
 800089c:	d103      	bne.n	80008a6 <__sseek+0x1a>
 800089e:	4a05      	ldr	r2, [pc, #20]	; (80008b4 <__sseek+0x28>)
 80008a0:	4013      	ands	r3, r2
 80008a2:	81a3      	strh	r3, [r4, #12]
 80008a4:	bd70      	pop	{r4, r5, r6, pc}
 80008a6:	2280      	movs	r2, #128	; 0x80
 80008a8:	0152      	lsls	r2, r2, #5
 80008aa:	4313      	orrs	r3, r2
 80008ac:	81a3      	strh	r3, [r4, #12]
 80008ae:	6560      	str	r0, [r4, #84]	; 0x54
 80008b0:	e7f8      	b.n	80008a4 <__sseek+0x18>
 80008b2:	46c0      	nop			; (mov r8, r8)
 80008b4:	ffffefff 	.word	0xffffefff

080008b8 <__sclose>:
 80008b8:	b510      	push	{r4, lr}
 80008ba:	230e      	movs	r3, #14
 80008bc:	5ec9      	ldrsh	r1, [r1, r3]
 80008be:	f000 f809 	bl	80008d4 <_close_r>
 80008c2:	bd10      	pop	{r4, pc}

080008c4 <memset>:
 80008c4:	0003      	movs	r3, r0
 80008c6:	1882      	adds	r2, r0, r2
 80008c8:	4293      	cmp	r3, r2
 80008ca:	d100      	bne.n	80008ce <memset+0xa>
 80008cc:	4770      	bx	lr
 80008ce:	7019      	strb	r1, [r3, #0]
 80008d0:	3301      	adds	r3, #1
 80008d2:	e7f9      	b.n	80008c8 <memset+0x4>

080008d4 <_close_r>:
 80008d4:	2300      	movs	r3, #0
 80008d6:	b570      	push	{r4, r5, r6, lr}
 80008d8:	4d06      	ldr	r5, [pc, #24]	; (80008f4 <_close_r+0x20>)
 80008da:	0004      	movs	r4, r0
 80008dc:	0008      	movs	r0, r1
 80008de:	602b      	str	r3, [r5, #0]
 80008e0:	f7ff fe43 	bl	800056a <_close>
 80008e4:	1c43      	adds	r3, r0, #1
 80008e6:	d103      	bne.n	80008f0 <_close_r+0x1c>
 80008e8:	682b      	ldr	r3, [r5, #0]
 80008ea:	2b00      	cmp	r3, #0
 80008ec:	d000      	beq.n	80008f0 <_close_r+0x1c>
 80008ee:	6023      	str	r3, [r4, #0]
 80008f0:	bd70      	pop	{r4, r5, r6, pc}
 80008f2:	46c0      	nop			; (mov r8, r8)
 80008f4:	200001bc 	.word	0x200001bc

080008f8 <_lseek_r>:
 80008f8:	b570      	push	{r4, r5, r6, lr}
 80008fa:	0004      	movs	r4, r0
 80008fc:	0008      	movs	r0, r1
 80008fe:	0011      	movs	r1, r2
 8000900:	001a      	movs	r2, r3
 8000902:	2300      	movs	r3, #0
 8000904:	4d05      	ldr	r5, [pc, #20]	; (800091c <_lseek_r+0x24>)
 8000906:	602b      	str	r3, [r5, #0]
 8000908:	f7ff fe50 	bl	80005ac <_lseek>
 800090c:	1c43      	adds	r3, r0, #1
 800090e:	d103      	bne.n	8000918 <_lseek_r+0x20>
 8000910:	682b      	ldr	r3, [r5, #0]
 8000912:	2b00      	cmp	r3, #0
 8000914:	d000      	beq.n	8000918 <_lseek_r+0x20>
 8000916:	6023      	str	r3, [r4, #0]
 8000918:	bd70      	pop	{r4, r5, r6, pc}
 800091a:	46c0      	nop			; (mov r8, r8)
 800091c:	200001bc 	.word	0x200001bc

08000920 <_read_r>:
 8000920:	b570      	push	{r4, r5, r6, lr}
 8000922:	0004      	movs	r4, r0
 8000924:	0008      	movs	r0, r1
 8000926:	0011      	movs	r1, r2
 8000928:	001a      	movs	r2, r3
 800092a:	2300      	movs	r3, #0
 800092c:	4d05      	ldr	r5, [pc, #20]	; (8000944 <_read_r+0x24>)
 800092e:	602b      	str	r3, [r5, #0]
 8000930:	f7ff fde2 	bl	80004f8 <_read>
 8000934:	1c43      	adds	r3, r0, #1
 8000936:	d103      	bne.n	8000940 <_read_r+0x20>
 8000938:	682b      	ldr	r3, [r5, #0]
 800093a:	2b00      	cmp	r3, #0
 800093c:	d000      	beq.n	8000940 <_read_r+0x20>
 800093e:	6023      	str	r3, [r4, #0]
 8000940:	bd70      	pop	{r4, r5, r6, pc}
 8000942:	46c0      	nop			; (mov r8, r8)
 8000944:	200001bc 	.word	0x200001bc

08000948 <_write_r>:
 8000948:	b570      	push	{r4, r5, r6, lr}
 800094a:	0004      	movs	r4, r0
 800094c:	0008      	movs	r0, r1
 800094e:	0011      	movs	r1, r2
 8000950:	001a      	movs	r2, r3
 8000952:	2300      	movs	r3, #0
 8000954:	4d05      	ldr	r5, [pc, #20]	; (800096c <_write_r+0x24>)
 8000956:	602b      	str	r3, [r5, #0]
 8000958:	f7ff fdeb 	bl	8000532 <_write>
 800095c:	1c43      	adds	r3, r0, #1
 800095e:	d103      	bne.n	8000968 <_write_r+0x20>
 8000960:	682b      	ldr	r3, [r5, #0]
 8000962:	2b00      	cmp	r3, #0
 8000964:	d000      	beq.n	8000968 <_write_r+0x20>
 8000966:	6023      	str	r3, [r4, #0]
 8000968:	bd70      	pop	{r4, r5, r6, pc}
 800096a:	46c0      	nop			; (mov r8, r8)
 800096c:	200001bc 	.word	0x200001bc

08000970 <__errno>:
 8000970:	4b01      	ldr	r3, [pc, #4]	; (8000978 <__errno+0x8>)
 8000972:	6818      	ldr	r0, [r3, #0]
 8000974:	4770      	bx	lr
 8000976:	46c0      	nop			; (mov r8, r8)
 8000978:	20000058 	.word	0x20000058

0800097c <__libc_init_array>:
 800097c:	b570      	push	{r4, r5, r6, lr}
 800097e:	2600      	movs	r6, #0
 8000980:	4c0c      	ldr	r4, [pc, #48]	; (80009b4 <__libc_init_array+0x38>)
 8000982:	4d0d      	ldr	r5, [pc, #52]	; (80009b8 <__libc_init_array+0x3c>)
 8000984:	1b64      	subs	r4, r4, r5
 8000986:	10a4      	asrs	r4, r4, #2
 8000988:	42a6      	cmp	r6, r4
 800098a:	d109      	bne.n	80009a0 <__libc_init_array+0x24>
 800098c:	2600      	movs	r6, #0
 800098e:	f000 fde3 	bl	8001558 <_init>
 8000992:	4c0a      	ldr	r4, [pc, #40]	; (80009bc <__libc_init_array+0x40>)
 8000994:	4d0a      	ldr	r5, [pc, #40]	; (80009c0 <__libc_init_array+0x44>)
 8000996:	1b64      	subs	r4, r4, r5
 8000998:	10a4      	asrs	r4, r4, #2
 800099a:	42a6      	cmp	r6, r4
 800099c:	d105      	bne.n	80009aa <__libc_init_array+0x2e>
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	00b3      	lsls	r3, r6, #2
 80009a2:	58eb      	ldr	r3, [r5, r3]
 80009a4:	4798      	blx	r3
 80009a6:	3601      	adds	r6, #1
 80009a8:	e7ee      	b.n	8000988 <__libc_init_array+0xc>
 80009aa:	00b3      	lsls	r3, r6, #2
 80009ac:	58eb      	ldr	r3, [r5, r3]
 80009ae:	4798      	blx	r3
 80009b0:	3601      	adds	r6, #1
 80009b2:	e7f2      	b.n	800099a <__libc_init_array+0x1e>
 80009b4:	080015b4 	.word	0x080015b4
 80009b8:	080015b4 	.word	0x080015b4
 80009bc:	080015b8 	.word	0x080015b8
 80009c0:	080015b4 	.word	0x080015b4

080009c4 <__retarget_lock_init_recursive>:
 80009c4:	4770      	bx	lr

080009c6 <__retarget_lock_acquire_recursive>:
 80009c6:	4770      	bx	lr

080009c8 <__retarget_lock_release_recursive>:
 80009c8:	4770      	bx	lr
	...

080009cc <_free_r>:
 80009cc:	b570      	push	{r4, r5, r6, lr}
 80009ce:	0005      	movs	r5, r0
 80009d0:	2900      	cmp	r1, #0
 80009d2:	d010      	beq.n	80009f6 <_free_r+0x2a>
 80009d4:	1f0c      	subs	r4, r1, #4
 80009d6:	6823      	ldr	r3, [r4, #0]
 80009d8:	2b00      	cmp	r3, #0
 80009da:	da00      	bge.n	80009de <_free_r+0x12>
 80009dc:	18e4      	adds	r4, r4, r3
 80009de:	0028      	movs	r0, r5
 80009e0:	f000 f8e2 	bl	8000ba8 <__malloc_lock>
 80009e4:	4a1d      	ldr	r2, [pc, #116]	; (8000a5c <_free_r+0x90>)
 80009e6:	6813      	ldr	r3, [r2, #0]
 80009e8:	2b00      	cmp	r3, #0
 80009ea:	d105      	bne.n	80009f8 <_free_r+0x2c>
 80009ec:	6063      	str	r3, [r4, #4]
 80009ee:	6014      	str	r4, [r2, #0]
 80009f0:	0028      	movs	r0, r5
 80009f2:	f000 f8e1 	bl	8000bb8 <__malloc_unlock>
 80009f6:	bd70      	pop	{r4, r5, r6, pc}
 80009f8:	42a3      	cmp	r3, r4
 80009fa:	d908      	bls.n	8000a0e <_free_r+0x42>
 80009fc:	6820      	ldr	r0, [r4, #0]
 80009fe:	1821      	adds	r1, r4, r0
 8000a00:	428b      	cmp	r3, r1
 8000a02:	d1f3      	bne.n	80009ec <_free_r+0x20>
 8000a04:	6819      	ldr	r1, [r3, #0]
 8000a06:	685b      	ldr	r3, [r3, #4]
 8000a08:	1809      	adds	r1, r1, r0
 8000a0a:	6021      	str	r1, [r4, #0]
 8000a0c:	e7ee      	b.n	80009ec <_free_r+0x20>
 8000a0e:	001a      	movs	r2, r3
 8000a10:	685b      	ldr	r3, [r3, #4]
 8000a12:	2b00      	cmp	r3, #0
 8000a14:	d001      	beq.n	8000a1a <_free_r+0x4e>
 8000a16:	42a3      	cmp	r3, r4
 8000a18:	d9f9      	bls.n	8000a0e <_free_r+0x42>
 8000a1a:	6811      	ldr	r1, [r2, #0]
 8000a1c:	1850      	adds	r0, r2, r1
 8000a1e:	42a0      	cmp	r0, r4
 8000a20:	d10b      	bne.n	8000a3a <_free_r+0x6e>
 8000a22:	6820      	ldr	r0, [r4, #0]
 8000a24:	1809      	adds	r1, r1, r0
 8000a26:	1850      	adds	r0, r2, r1
 8000a28:	6011      	str	r1, [r2, #0]
 8000a2a:	4283      	cmp	r3, r0
 8000a2c:	d1e0      	bne.n	80009f0 <_free_r+0x24>
 8000a2e:	6818      	ldr	r0, [r3, #0]
 8000a30:	685b      	ldr	r3, [r3, #4]
 8000a32:	1841      	adds	r1, r0, r1
 8000a34:	6011      	str	r1, [r2, #0]
 8000a36:	6053      	str	r3, [r2, #4]
 8000a38:	e7da      	b.n	80009f0 <_free_r+0x24>
 8000a3a:	42a0      	cmp	r0, r4
 8000a3c:	d902      	bls.n	8000a44 <_free_r+0x78>
 8000a3e:	230c      	movs	r3, #12
 8000a40:	602b      	str	r3, [r5, #0]
 8000a42:	e7d5      	b.n	80009f0 <_free_r+0x24>
 8000a44:	6820      	ldr	r0, [r4, #0]
 8000a46:	1821      	adds	r1, r4, r0
 8000a48:	428b      	cmp	r3, r1
 8000a4a:	d103      	bne.n	8000a54 <_free_r+0x88>
 8000a4c:	6819      	ldr	r1, [r3, #0]
 8000a4e:	685b      	ldr	r3, [r3, #4]
 8000a50:	1809      	adds	r1, r1, r0
 8000a52:	6021      	str	r1, [r4, #0]
 8000a54:	6063      	str	r3, [r4, #4]
 8000a56:	6054      	str	r4, [r2, #4]
 8000a58:	e7ca      	b.n	80009f0 <_free_r+0x24>
 8000a5a:	46c0      	nop			; (mov r8, r8)
 8000a5c:	200001c4 	.word	0x200001c4

08000a60 <sbrk_aligned>:
 8000a60:	b570      	push	{r4, r5, r6, lr}
 8000a62:	4e0f      	ldr	r6, [pc, #60]	; (8000aa0 <sbrk_aligned+0x40>)
 8000a64:	000d      	movs	r5, r1
 8000a66:	6831      	ldr	r1, [r6, #0]
 8000a68:	0004      	movs	r4, r0
 8000a6a:	2900      	cmp	r1, #0
 8000a6c:	d102      	bne.n	8000a74 <sbrk_aligned+0x14>
 8000a6e:	f000 fccb 	bl	8001408 <_sbrk_r>
 8000a72:	6030      	str	r0, [r6, #0]
 8000a74:	0029      	movs	r1, r5
 8000a76:	0020      	movs	r0, r4
 8000a78:	f000 fcc6 	bl	8001408 <_sbrk_r>
 8000a7c:	1c43      	adds	r3, r0, #1
 8000a7e:	d00a      	beq.n	8000a96 <sbrk_aligned+0x36>
 8000a80:	2303      	movs	r3, #3
 8000a82:	1cc5      	adds	r5, r0, #3
 8000a84:	439d      	bics	r5, r3
 8000a86:	42a8      	cmp	r0, r5
 8000a88:	d007      	beq.n	8000a9a <sbrk_aligned+0x3a>
 8000a8a:	1a29      	subs	r1, r5, r0
 8000a8c:	0020      	movs	r0, r4
 8000a8e:	f000 fcbb 	bl	8001408 <_sbrk_r>
 8000a92:	3001      	adds	r0, #1
 8000a94:	d101      	bne.n	8000a9a <sbrk_aligned+0x3a>
 8000a96:	2501      	movs	r5, #1
 8000a98:	426d      	negs	r5, r5
 8000a9a:	0028      	movs	r0, r5
 8000a9c:	bd70      	pop	{r4, r5, r6, pc}
 8000a9e:	46c0      	nop			; (mov r8, r8)
 8000aa0:	200001c8 	.word	0x200001c8

08000aa4 <_malloc_r>:
 8000aa4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000aa6:	2203      	movs	r2, #3
 8000aa8:	1ccb      	adds	r3, r1, #3
 8000aaa:	4393      	bics	r3, r2
 8000aac:	3308      	adds	r3, #8
 8000aae:	0006      	movs	r6, r0
 8000ab0:	001f      	movs	r7, r3
 8000ab2:	2b0c      	cmp	r3, #12
 8000ab4:	d238      	bcs.n	8000b28 <_malloc_r+0x84>
 8000ab6:	270c      	movs	r7, #12
 8000ab8:	42b9      	cmp	r1, r7
 8000aba:	d837      	bhi.n	8000b2c <_malloc_r+0x88>
 8000abc:	0030      	movs	r0, r6
 8000abe:	f000 f873 	bl	8000ba8 <__malloc_lock>
 8000ac2:	4b38      	ldr	r3, [pc, #224]	; (8000ba4 <_malloc_r+0x100>)
 8000ac4:	9300      	str	r3, [sp, #0]
 8000ac6:	681b      	ldr	r3, [r3, #0]
 8000ac8:	001c      	movs	r4, r3
 8000aca:	2c00      	cmp	r4, #0
 8000acc:	d133      	bne.n	8000b36 <_malloc_r+0x92>
 8000ace:	0039      	movs	r1, r7
 8000ad0:	0030      	movs	r0, r6
 8000ad2:	f7ff ffc5 	bl	8000a60 <sbrk_aligned>
 8000ad6:	0004      	movs	r4, r0
 8000ad8:	1c43      	adds	r3, r0, #1
 8000ada:	d15e      	bne.n	8000b9a <_malloc_r+0xf6>
 8000adc:	9b00      	ldr	r3, [sp, #0]
 8000ade:	681c      	ldr	r4, [r3, #0]
 8000ae0:	0025      	movs	r5, r4
 8000ae2:	2d00      	cmp	r5, #0
 8000ae4:	d14e      	bne.n	8000b84 <_malloc_r+0xe0>
 8000ae6:	2c00      	cmp	r4, #0
 8000ae8:	d051      	beq.n	8000b8e <_malloc_r+0xea>
 8000aea:	6823      	ldr	r3, [r4, #0]
 8000aec:	0029      	movs	r1, r5
 8000aee:	18e3      	adds	r3, r4, r3
 8000af0:	0030      	movs	r0, r6
 8000af2:	9301      	str	r3, [sp, #4]
 8000af4:	f000 fc88 	bl	8001408 <_sbrk_r>
 8000af8:	9b01      	ldr	r3, [sp, #4]
 8000afa:	4283      	cmp	r3, r0
 8000afc:	d147      	bne.n	8000b8e <_malloc_r+0xea>
 8000afe:	6823      	ldr	r3, [r4, #0]
 8000b00:	0030      	movs	r0, r6
 8000b02:	1aff      	subs	r7, r7, r3
 8000b04:	0039      	movs	r1, r7
 8000b06:	f7ff ffab 	bl	8000a60 <sbrk_aligned>
 8000b0a:	3001      	adds	r0, #1
 8000b0c:	d03f      	beq.n	8000b8e <_malloc_r+0xea>
 8000b0e:	6823      	ldr	r3, [r4, #0]
 8000b10:	19db      	adds	r3, r3, r7
 8000b12:	6023      	str	r3, [r4, #0]
 8000b14:	9b00      	ldr	r3, [sp, #0]
 8000b16:	681b      	ldr	r3, [r3, #0]
 8000b18:	2b00      	cmp	r3, #0
 8000b1a:	d040      	beq.n	8000b9e <_malloc_r+0xfa>
 8000b1c:	685a      	ldr	r2, [r3, #4]
 8000b1e:	42a2      	cmp	r2, r4
 8000b20:	d133      	bne.n	8000b8a <_malloc_r+0xe6>
 8000b22:	2200      	movs	r2, #0
 8000b24:	605a      	str	r2, [r3, #4]
 8000b26:	e014      	b.n	8000b52 <_malloc_r+0xae>
 8000b28:	2b00      	cmp	r3, #0
 8000b2a:	dac5      	bge.n	8000ab8 <_malloc_r+0x14>
 8000b2c:	230c      	movs	r3, #12
 8000b2e:	2500      	movs	r5, #0
 8000b30:	6033      	str	r3, [r6, #0]
 8000b32:	0028      	movs	r0, r5
 8000b34:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000b36:	6821      	ldr	r1, [r4, #0]
 8000b38:	1bc9      	subs	r1, r1, r7
 8000b3a:	d420      	bmi.n	8000b7e <_malloc_r+0xda>
 8000b3c:	290b      	cmp	r1, #11
 8000b3e:	d918      	bls.n	8000b72 <_malloc_r+0xce>
 8000b40:	19e2      	adds	r2, r4, r7
 8000b42:	6027      	str	r7, [r4, #0]
 8000b44:	42a3      	cmp	r3, r4
 8000b46:	d112      	bne.n	8000b6e <_malloc_r+0xca>
 8000b48:	9b00      	ldr	r3, [sp, #0]
 8000b4a:	601a      	str	r2, [r3, #0]
 8000b4c:	6863      	ldr	r3, [r4, #4]
 8000b4e:	6011      	str	r1, [r2, #0]
 8000b50:	6053      	str	r3, [r2, #4]
 8000b52:	0030      	movs	r0, r6
 8000b54:	0025      	movs	r5, r4
 8000b56:	f000 f82f 	bl	8000bb8 <__malloc_unlock>
 8000b5a:	2207      	movs	r2, #7
 8000b5c:	350b      	adds	r5, #11
 8000b5e:	1d23      	adds	r3, r4, #4
 8000b60:	4395      	bics	r5, r2
 8000b62:	1aea      	subs	r2, r5, r3
 8000b64:	429d      	cmp	r5, r3
 8000b66:	d0e4      	beq.n	8000b32 <_malloc_r+0x8e>
 8000b68:	1b5b      	subs	r3, r3, r5
 8000b6a:	50a3      	str	r3, [r4, r2]
 8000b6c:	e7e1      	b.n	8000b32 <_malloc_r+0x8e>
 8000b6e:	605a      	str	r2, [r3, #4]
 8000b70:	e7ec      	b.n	8000b4c <_malloc_r+0xa8>
 8000b72:	6862      	ldr	r2, [r4, #4]
 8000b74:	42a3      	cmp	r3, r4
 8000b76:	d1d5      	bne.n	8000b24 <_malloc_r+0x80>
 8000b78:	9b00      	ldr	r3, [sp, #0]
 8000b7a:	601a      	str	r2, [r3, #0]
 8000b7c:	e7e9      	b.n	8000b52 <_malloc_r+0xae>
 8000b7e:	0023      	movs	r3, r4
 8000b80:	6864      	ldr	r4, [r4, #4]
 8000b82:	e7a2      	b.n	8000aca <_malloc_r+0x26>
 8000b84:	002c      	movs	r4, r5
 8000b86:	686d      	ldr	r5, [r5, #4]
 8000b88:	e7ab      	b.n	8000ae2 <_malloc_r+0x3e>
 8000b8a:	0013      	movs	r3, r2
 8000b8c:	e7c4      	b.n	8000b18 <_malloc_r+0x74>
 8000b8e:	230c      	movs	r3, #12
 8000b90:	0030      	movs	r0, r6
 8000b92:	6033      	str	r3, [r6, #0]
 8000b94:	f000 f810 	bl	8000bb8 <__malloc_unlock>
 8000b98:	e7cb      	b.n	8000b32 <_malloc_r+0x8e>
 8000b9a:	6027      	str	r7, [r4, #0]
 8000b9c:	e7d9      	b.n	8000b52 <_malloc_r+0xae>
 8000b9e:	605b      	str	r3, [r3, #4]
 8000ba0:	deff      	udf	#255	; 0xff
 8000ba2:	46c0      	nop			; (mov r8, r8)
 8000ba4:	200001c4 	.word	0x200001c4

08000ba8 <__malloc_lock>:
 8000ba8:	b510      	push	{r4, lr}
 8000baa:	4802      	ldr	r0, [pc, #8]	; (8000bb4 <__malloc_lock+0xc>)
 8000bac:	f7ff ff0b 	bl	80009c6 <__retarget_lock_acquire_recursive>
 8000bb0:	bd10      	pop	{r4, pc}
 8000bb2:	46c0      	nop			; (mov r8, r8)
 8000bb4:	200001c0 	.word	0x200001c0

08000bb8 <__malloc_unlock>:
 8000bb8:	b510      	push	{r4, lr}
 8000bba:	4802      	ldr	r0, [pc, #8]	; (8000bc4 <__malloc_unlock+0xc>)
 8000bbc:	f7ff ff04 	bl	80009c8 <__retarget_lock_release_recursive>
 8000bc0:	bd10      	pop	{r4, pc}
 8000bc2:	46c0      	nop			; (mov r8, r8)
 8000bc4:	200001c0 	.word	0x200001c0

08000bc8 <__sfputc_r>:
 8000bc8:	6893      	ldr	r3, [r2, #8]
 8000bca:	b510      	push	{r4, lr}
 8000bcc:	3b01      	subs	r3, #1
 8000bce:	6093      	str	r3, [r2, #8]
 8000bd0:	2b00      	cmp	r3, #0
 8000bd2:	da04      	bge.n	8000bde <__sfputc_r+0x16>
 8000bd4:	6994      	ldr	r4, [r2, #24]
 8000bd6:	42a3      	cmp	r3, r4
 8000bd8:	db07      	blt.n	8000bea <__sfputc_r+0x22>
 8000bda:	290a      	cmp	r1, #10
 8000bdc:	d005      	beq.n	8000bea <__sfputc_r+0x22>
 8000bde:	6813      	ldr	r3, [r2, #0]
 8000be0:	1c58      	adds	r0, r3, #1
 8000be2:	6010      	str	r0, [r2, #0]
 8000be4:	7019      	strb	r1, [r3, #0]
 8000be6:	0008      	movs	r0, r1
 8000be8:	bd10      	pop	{r4, pc}
 8000bea:	f000 fb66 	bl	80012ba <__swbuf_r>
 8000bee:	0001      	movs	r1, r0
 8000bf0:	e7f9      	b.n	8000be6 <__sfputc_r+0x1e>

08000bf2 <__sfputs_r>:
 8000bf2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000bf4:	0006      	movs	r6, r0
 8000bf6:	000f      	movs	r7, r1
 8000bf8:	0014      	movs	r4, r2
 8000bfa:	18d5      	adds	r5, r2, r3
 8000bfc:	42ac      	cmp	r4, r5
 8000bfe:	d101      	bne.n	8000c04 <__sfputs_r+0x12>
 8000c00:	2000      	movs	r0, #0
 8000c02:	e007      	b.n	8000c14 <__sfputs_r+0x22>
 8000c04:	7821      	ldrb	r1, [r4, #0]
 8000c06:	003a      	movs	r2, r7
 8000c08:	0030      	movs	r0, r6
 8000c0a:	f7ff ffdd 	bl	8000bc8 <__sfputc_r>
 8000c0e:	3401      	adds	r4, #1
 8000c10:	1c43      	adds	r3, r0, #1
 8000c12:	d1f3      	bne.n	8000bfc <__sfputs_r+0xa>
 8000c14:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000c18 <_vfiprintf_r>:
 8000c18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000c1a:	b0a1      	sub	sp, #132	; 0x84
 8000c1c:	000f      	movs	r7, r1
 8000c1e:	0015      	movs	r5, r2
 8000c20:	001e      	movs	r6, r3
 8000c22:	9003      	str	r0, [sp, #12]
 8000c24:	2800      	cmp	r0, #0
 8000c26:	d004      	beq.n	8000c32 <_vfiprintf_r+0x1a>
 8000c28:	6a03      	ldr	r3, [r0, #32]
 8000c2a:	2b00      	cmp	r3, #0
 8000c2c:	d101      	bne.n	8000c32 <_vfiprintf_r+0x1a>
 8000c2e:	f7ff fdb9 	bl	80007a4 <__sinit>
 8000c32:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8000c34:	07db      	lsls	r3, r3, #31
 8000c36:	d405      	bmi.n	8000c44 <_vfiprintf_r+0x2c>
 8000c38:	89bb      	ldrh	r3, [r7, #12]
 8000c3a:	059b      	lsls	r3, r3, #22
 8000c3c:	d402      	bmi.n	8000c44 <_vfiprintf_r+0x2c>
 8000c3e:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8000c40:	f7ff fec1 	bl	80009c6 <__retarget_lock_acquire_recursive>
 8000c44:	89bb      	ldrh	r3, [r7, #12]
 8000c46:	071b      	lsls	r3, r3, #28
 8000c48:	d502      	bpl.n	8000c50 <_vfiprintf_r+0x38>
 8000c4a:	693b      	ldr	r3, [r7, #16]
 8000c4c:	2b00      	cmp	r3, #0
 8000c4e:	d113      	bne.n	8000c78 <_vfiprintf_r+0x60>
 8000c50:	0039      	movs	r1, r7
 8000c52:	9803      	ldr	r0, [sp, #12]
 8000c54:	f000 fb74 	bl	8001340 <__swsetup_r>
 8000c58:	2800      	cmp	r0, #0
 8000c5a:	d00d      	beq.n	8000c78 <_vfiprintf_r+0x60>
 8000c5c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8000c5e:	07db      	lsls	r3, r3, #31
 8000c60:	d503      	bpl.n	8000c6a <_vfiprintf_r+0x52>
 8000c62:	2001      	movs	r0, #1
 8000c64:	4240      	negs	r0, r0
 8000c66:	b021      	add	sp, #132	; 0x84
 8000c68:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000c6a:	89bb      	ldrh	r3, [r7, #12]
 8000c6c:	059b      	lsls	r3, r3, #22
 8000c6e:	d4f8      	bmi.n	8000c62 <_vfiprintf_r+0x4a>
 8000c70:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8000c72:	f7ff fea9 	bl	80009c8 <__retarget_lock_release_recursive>
 8000c76:	e7f4      	b.n	8000c62 <_vfiprintf_r+0x4a>
 8000c78:	2300      	movs	r3, #0
 8000c7a:	ac08      	add	r4, sp, #32
 8000c7c:	6163      	str	r3, [r4, #20]
 8000c7e:	3320      	adds	r3, #32
 8000c80:	7663      	strb	r3, [r4, #25]
 8000c82:	3310      	adds	r3, #16
 8000c84:	76a3      	strb	r3, [r4, #26]
 8000c86:	9607      	str	r6, [sp, #28]
 8000c88:	002e      	movs	r6, r5
 8000c8a:	7833      	ldrb	r3, [r6, #0]
 8000c8c:	2b00      	cmp	r3, #0
 8000c8e:	d001      	beq.n	8000c94 <_vfiprintf_r+0x7c>
 8000c90:	2b25      	cmp	r3, #37	; 0x25
 8000c92:	d148      	bne.n	8000d26 <_vfiprintf_r+0x10e>
 8000c94:	1b73      	subs	r3, r6, r5
 8000c96:	9305      	str	r3, [sp, #20]
 8000c98:	42ae      	cmp	r6, r5
 8000c9a:	d00b      	beq.n	8000cb4 <_vfiprintf_r+0x9c>
 8000c9c:	002a      	movs	r2, r5
 8000c9e:	0039      	movs	r1, r7
 8000ca0:	9803      	ldr	r0, [sp, #12]
 8000ca2:	f7ff ffa6 	bl	8000bf2 <__sfputs_r>
 8000ca6:	3001      	adds	r0, #1
 8000ca8:	d100      	bne.n	8000cac <_vfiprintf_r+0x94>
 8000caa:	e0af      	b.n	8000e0c <_vfiprintf_r+0x1f4>
 8000cac:	6963      	ldr	r3, [r4, #20]
 8000cae:	9a05      	ldr	r2, [sp, #20]
 8000cb0:	189b      	adds	r3, r3, r2
 8000cb2:	6163      	str	r3, [r4, #20]
 8000cb4:	7833      	ldrb	r3, [r6, #0]
 8000cb6:	2b00      	cmp	r3, #0
 8000cb8:	d100      	bne.n	8000cbc <_vfiprintf_r+0xa4>
 8000cba:	e0a7      	b.n	8000e0c <_vfiprintf_r+0x1f4>
 8000cbc:	2201      	movs	r2, #1
 8000cbe:	2300      	movs	r3, #0
 8000cc0:	4252      	negs	r2, r2
 8000cc2:	6062      	str	r2, [r4, #4]
 8000cc4:	a904      	add	r1, sp, #16
 8000cc6:	3254      	adds	r2, #84	; 0x54
 8000cc8:	1852      	adds	r2, r2, r1
 8000cca:	1c75      	adds	r5, r6, #1
 8000ccc:	6023      	str	r3, [r4, #0]
 8000cce:	60e3      	str	r3, [r4, #12]
 8000cd0:	60a3      	str	r3, [r4, #8]
 8000cd2:	7013      	strb	r3, [r2, #0]
 8000cd4:	65a3      	str	r3, [r4, #88]	; 0x58
 8000cd6:	4b59      	ldr	r3, [pc, #356]	; (8000e3c <_vfiprintf_r+0x224>)
 8000cd8:	2205      	movs	r2, #5
 8000cda:	0018      	movs	r0, r3
 8000cdc:	7829      	ldrb	r1, [r5, #0]
 8000cde:	9305      	str	r3, [sp, #20]
 8000ce0:	f000 fba4 	bl	800142c <memchr>
 8000ce4:	1c6e      	adds	r6, r5, #1
 8000ce6:	2800      	cmp	r0, #0
 8000ce8:	d11f      	bne.n	8000d2a <_vfiprintf_r+0x112>
 8000cea:	6822      	ldr	r2, [r4, #0]
 8000cec:	06d3      	lsls	r3, r2, #27
 8000cee:	d504      	bpl.n	8000cfa <_vfiprintf_r+0xe2>
 8000cf0:	2353      	movs	r3, #83	; 0x53
 8000cf2:	a904      	add	r1, sp, #16
 8000cf4:	185b      	adds	r3, r3, r1
 8000cf6:	2120      	movs	r1, #32
 8000cf8:	7019      	strb	r1, [r3, #0]
 8000cfa:	0713      	lsls	r3, r2, #28
 8000cfc:	d504      	bpl.n	8000d08 <_vfiprintf_r+0xf0>
 8000cfe:	2353      	movs	r3, #83	; 0x53
 8000d00:	a904      	add	r1, sp, #16
 8000d02:	185b      	adds	r3, r3, r1
 8000d04:	212b      	movs	r1, #43	; 0x2b
 8000d06:	7019      	strb	r1, [r3, #0]
 8000d08:	782b      	ldrb	r3, [r5, #0]
 8000d0a:	2b2a      	cmp	r3, #42	; 0x2a
 8000d0c:	d016      	beq.n	8000d3c <_vfiprintf_r+0x124>
 8000d0e:	002e      	movs	r6, r5
 8000d10:	2100      	movs	r1, #0
 8000d12:	200a      	movs	r0, #10
 8000d14:	68e3      	ldr	r3, [r4, #12]
 8000d16:	7832      	ldrb	r2, [r6, #0]
 8000d18:	1c75      	adds	r5, r6, #1
 8000d1a:	3a30      	subs	r2, #48	; 0x30
 8000d1c:	2a09      	cmp	r2, #9
 8000d1e:	d94e      	bls.n	8000dbe <_vfiprintf_r+0x1a6>
 8000d20:	2900      	cmp	r1, #0
 8000d22:	d111      	bne.n	8000d48 <_vfiprintf_r+0x130>
 8000d24:	e017      	b.n	8000d56 <_vfiprintf_r+0x13e>
 8000d26:	3601      	adds	r6, #1
 8000d28:	e7af      	b.n	8000c8a <_vfiprintf_r+0x72>
 8000d2a:	9b05      	ldr	r3, [sp, #20]
 8000d2c:	6822      	ldr	r2, [r4, #0]
 8000d2e:	1ac0      	subs	r0, r0, r3
 8000d30:	2301      	movs	r3, #1
 8000d32:	4083      	lsls	r3, r0
 8000d34:	4313      	orrs	r3, r2
 8000d36:	0035      	movs	r5, r6
 8000d38:	6023      	str	r3, [r4, #0]
 8000d3a:	e7cc      	b.n	8000cd6 <_vfiprintf_r+0xbe>
 8000d3c:	9b07      	ldr	r3, [sp, #28]
 8000d3e:	1d19      	adds	r1, r3, #4
 8000d40:	681b      	ldr	r3, [r3, #0]
 8000d42:	9107      	str	r1, [sp, #28]
 8000d44:	2b00      	cmp	r3, #0
 8000d46:	db01      	blt.n	8000d4c <_vfiprintf_r+0x134>
 8000d48:	930b      	str	r3, [sp, #44]	; 0x2c
 8000d4a:	e004      	b.n	8000d56 <_vfiprintf_r+0x13e>
 8000d4c:	425b      	negs	r3, r3
 8000d4e:	60e3      	str	r3, [r4, #12]
 8000d50:	2302      	movs	r3, #2
 8000d52:	4313      	orrs	r3, r2
 8000d54:	6023      	str	r3, [r4, #0]
 8000d56:	7833      	ldrb	r3, [r6, #0]
 8000d58:	2b2e      	cmp	r3, #46	; 0x2e
 8000d5a:	d10a      	bne.n	8000d72 <_vfiprintf_r+0x15a>
 8000d5c:	7873      	ldrb	r3, [r6, #1]
 8000d5e:	2b2a      	cmp	r3, #42	; 0x2a
 8000d60:	d135      	bne.n	8000dce <_vfiprintf_r+0x1b6>
 8000d62:	9b07      	ldr	r3, [sp, #28]
 8000d64:	3602      	adds	r6, #2
 8000d66:	1d1a      	adds	r2, r3, #4
 8000d68:	681b      	ldr	r3, [r3, #0]
 8000d6a:	9207      	str	r2, [sp, #28]
 8000d6c:	2b00      	cmp	r3, #0
 8000d6e:	db2b      	blt.n	8000dc8 <_vfiprintf_r+0x1b0>
 8000d70:	9309      	str	r3, [sp, #36]	; 0x24
 8000d72:	4d33      	ldr	r5, [pc, #204]	; (8000e40 <_vfiprintf_r+0x228>)
 8000d74:	2203      	movs	r2, #3
 8000d76:	0028      	movs	r0, r5
 8000d78:	7831      	ldrb	r1, [r6, #0]
 8000d7a:	f000 fb57 	bl	800142c <memchr>
 8000d7e:	2800      	cmp	r0, #0
 8000d80:	d006      	beq.n	8000d90 <_vfiprintf_r+0x178>
 8000d82:	2340      	movs	r3, #64	; 0x40
 8000d84:	1b40      	subs	r0, r0, r5
 8000d86:	4083      	lsls	r3, r0
 8000d88:	6822      	ldr	r2, [r4, #0]
 8000d8a:	3601      	adds	r6, #1
 8000d8c:	4313      	orrs	r3, r2
 8000d8e:	6023      	str	r3, [r4, #0]
 8000d90:	7831      	ldrb	r1, [r6, #0]
 8000d92:	2206      	movs	r2, #6
 8000d94:	482b      	ldr	r0, [pc, #172]	; (8000e44 <_vfiprintf_r+0x22c>)
 8000d96:	1c75      	adds	r5, r6, #1
 8000d98:	7621      	strb	r1, [r4, #24]
 8000d9a:	f000 fb47 	bl	800142c <memchr>
 8000d9e:	2800      	cmp	r0, #0
 8000da0:	d043      	beq.n	8000e2a <_vfiprintf_r+0x212>
 8000da2:	4b29      	ldr	r3, [pc, #164]	; (8000e48 <_vfiprintf_r+0x230>)
 8000da4:	2b00      	cmp	r3, #0
 8000da6:	d125      	bne.n	8000df4 <_vfiprintf_r+0x1dc>
 8000da8:	2207      	movs	r2, #7
 8000daa:	9b07      	ldr	r3, [sp, #28]
 8000dac:	3307      	adds	r3, #7
 8000dae:	4393      	bics	r3, r2
 8000db0:	3308      	adds	r3, #8
 8000db2:	9307      	str	r3, [sp, #28]
 8000db4:	6963      	ldr	r3, [r4, #20]
 8000db6:	9a04      	ldr	r2, [sp, #16]
 8000db8:	189b      	adds	r3, r3, r2
 8000dba:	6163      	str	r3, [r4, #20]
 8000dbc:	e764      	b.n	8000c88 <_vfiprintf_r+0x70>
 8000dbe:	4343      	muls	r3, r0
 8000dc0:	002e      	movs	r6, r5
 8000dc2:	2101      	movs	r1, #1
 8000dc4:	189b      	adds	r3, r3, r2
 8000dc6:	e7a6      	b.n	8000d16 <_vfiprintf_r+0xfe>
 8000dc8:	2301      	movs	r3, #1
 8000dca:	425b      	negs	r3, r3
 8000dcc:	e7d0      	b.n	8000d70 <_vfiprintf_r+0x158>
 8000dce:	2300      	movs	r3, #0
 8000dd0:	200a      	movs	r0, #10
 8000dd2:	001a      	movs	r2, r3
 8000dd4:	3601      	adds	r6, #1
 8000dd6:	6063      	str	r3, [r4, #4]
 8000dd8:	7831      	ldrb	r1, [r6, #0]
 8000dda:	1c75      	adds	r5, r6, #1
 8000ddc:	3930      	subs	r1, #48	; 0x30
 8000dde:	2909      	cmp	r1, #9
 8000de0:	d903      	bls.n	8000dea <_vfiprintf_r+0x1d2>
 8000de2:	2b00      	cmp	r3, #0
 8000de4:	d0c5      	beq.n	8000d72 <_vfiprintf_r+0x15a>
 8000de6:	9209      	str	r2, [sp, #36]	; 0x24
 8000de8:	e7c3      	b.n	8000d72 <_vfiprintf_r+0x15a>
 8000dea:	4342      	muls	r2, r0
 8000dec:	002e      	movs	r6, r5
 8000dee:	2301      	movs	r3, #1
 8000df0:	1852      	adds	r2, r2, r1
 8000df2:	e7f1      	b.n	8000dd8 <_vfiprintf_r+0x1c0>
 8000df4:	aa07      	add	r2, sp, #28
 8000df6:	9200      	str	r2, [sp, #0]
 8000df8:	0021      	movs	r1, r4
 8000dfa:	003a      	movs	r2, r7
 8000dfc:	4b13      	ldr	r3, [pc, #76]	; (8000e4c <_vfiprintf_r+0x234>)
 8000dfe:	9803      	ldr	r0, [sp, #12]
 8000e00:	e000      	b.n	8000e04 <_vfiprintf_r+0x1ec>
 8000e02:	bf00      	nop
 8000e04:	9004      	str	r0, [sp, #16]
 8000e06:	9b04      	ldr	r3, [sp, #16]
 8000e08:	3301      	adds	r3, #1
 8000e0a:	d1d3      	bne.n	8000db4 <_vfiprintf_r+0x19c>
 8000e0c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8000e0e:	07db      	lsls	r3, r3, #31
 8000e10:	d405      	bmi.n	8000e1e <_vfiprintf_r+0x206>
 8000e12:	89bb      	ldrh	r3, [r7, #12]
 8000e14:	059b      	lsls	r3, r3, #22
 8000e16:	d402      	bmi.n	8000e1e <_vfiprintf_r+0x206>
 8000e18:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8000e1a:	f7ff fdd5 	bl	80009c8 <__retarget_lock_release_recursive>
 8000e1e:	89bb      	ldrh	r3, [r7, #12]
 8000e20:	065b      	lsls	r3, r3, #25
 8000e22:	d500      	bpl.n	8000e26 <_vfiprintf_r+0x20e>
 8000e24:	e71d      	b.n	8000c62 <_vfiprintf_r+0x4a>
 8000e26:	980d      	ldr	r0, [sp, #52]	; 0x34
 8000e28:	e71d      	b.n	8000c66 <_vfiprintf_r+0x4e>
 8000e2a:	aa07      	add	r2, sp, #28
 8000e2c:	9200      	str	r2, [sp, #0]
 8000e2e:	0021      	movs	r1, r4
 8000e30:	003a      	movs	r2, r7
 8000e32:	4b06      	ldr	r3, [pc, #24]	; (8000e4c <_vfiprintf_r+0x234>)
 8000e34:	9803      	ldr	r0, [sp, #12]
 8000e36:	f000 f87b 	bl	8000f30 <_printf_i>
 8000e3a:	e7e3      	b.n	8000e04 <_vfiprintf_r+0x1ec>
 8000e3c:	08001581 	.word	0x08001581
 8000e40:	08001587 	.word	0x08001587
 8000e44:	0800158b 	.word	0x0800158b
 8000e48:	00000000 	.word	0x00000000
 8000e4c:	08000bf3 	.word	0x08000bf3

08000e50 <_printf_common>:
 8000e50:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000e52:	0016      	movs	r6, r2
 8000e54:	9301      	str	r3, [sp, #4]
 8000e56:	688a      	ldr	r2, [r1, #8]
 8000e58:	690b      	ldr	r3, [r1, #16]
 8000e5a:	000c      	movs	r4, r1
 8000e5c:	9000      	str	r0, [sp, #0]
 8000e5e:	4293      	cmp	r3, r2
 8000e60:	da00      	bge.n	8000e64 <_printf_common+0x14>
 8000e62:	0013      	movs	r3, r2
 8000e64:	0022      	movs	r2, r4
 8000e66:	6033      	str	r3, [r6, #0]
 8000e68:	3243      	adds	r2, #67	; 0x43
 8000e6a:	7812      	ldrb	r2, [r2, #0]
 8000e6c:	2a00      	cmp	r2, #0
 8000e6e:	d001      	beq.n	8000e74 <_printf_common+0x24>
 8000e70:	3301      	adds	r3, #1
 8000e72:	6033      	str	r3, [r6, #0]
 8000e74:	6823      	ldr	r3, [r4, #0]
 8000e76:	069b      	lsls	r3, r3, #26
 8000e78:	d502      	bpl.n	8000e80 <_printf_common+0x30>
 8000e7a:	6833      	ldr	r3, [r6, #0]
 8000e7c:	3302      	adds	r3, #2
 8000e7e:	6033      	str	r3, [r6, #0]
 8000e80:	6822      	ldr	r2, [r4, #0]
 8000e82:	2306      	movs	r3, #6
 8000e84:	0015      	movs	r5, r2
 8000e86:	401d      	ands	r5, r3
 8000e88:	421a      	tst	r2, r3
 8000e8a:	d027      	beq.n	8000edc <_printf_common+0x8c>
 8000e8c:	0023      	movs	r3, r4
 8000e8e:	3343      	adds	r3, #67	; 0x43
 8000e90:	781b      	ldrb	r3, [r3, #0]
 8000e92:	1e5a      	subs	r2, r3, #1
 8000e94:	4193      	sbcs	r3, r2
 8000e96:	6822      	ldr	r2, [r4, #0]
 8000e98:	0692      	lsls	r2, r2, #26
 8000e9a:	d430      	bmi.n	8000efe <_printf_common+0xae>
 8000e9c:	0022      	movs	r2, r4
 8000e9e:	9901      	ldr	r1, [sp, #4]
 8000ea0:	9800      	ldr	r0, [sp, #0]
 8000ea2:	9d08      	ldr	r5, [sp, #32]
 8000ea4:	3243      	adds	r2, #67	; 0x43
 8000ea6:	47a8      	blx	r5
 8000ea8:	3001      	adds	r0, #1
 8000eaa:	d025      	beq.n	8000ef8 <_printf_common+0xa8>
 8000eac:	2206      	movs	r2, #6
 8000eae:	6823      	ldr	r3, [r4, #0]
 8000eb0:	2500      	movs	r5, #0
 8000eb2:	4013      	ands	r3, r2
 8000eb4:	2b04      	cmp	r3, #4
 8000eb6:	d105      	bne.n	8000ec4 <_printf_common+0x74>
 8000eb8:	6833      	ldr	r3, [r6, #0]
 8000eba:	68e5      	ldr	r5, [r4, #12]
 8000ebc:	1aed      	subs	r5, r5, r3
 8000ebe:	43eb      	mvns	r3, r5
 8000ec0:	17db      	asrs	r3, r3, #31
 8000ec2:	401d      	ands	r5, r3
 8000ec4:	68a3      	ldr	r3, [r4, #8]
 8000ec6:	6922      	ldr	r2, [r4, #16]
 8000ec8:	4293      	cmp	r3, r2
 8000eca:	dd01      	ble.n	8000ed0 <_printf_common+0x80>
 8000ecc:	1a9b      	subs	r3, r3, r2
 8000ece:	18ed      	adds	r5, r5, r3
 8000ed0:	2600      	movs	r6, #0
 8000ed2:	42b5      	cmp	r5, r6
 8000ed4:	d120      	bne.n	8000f18 <_printf_common+0xc8>
 8000ed6:	2000      	movs	r0, #0
 8000ed8:	e010      	b.n	8000efc <_printf_common+0xac>
 8000eda:	3501      	adds	r5, #1
 8000edc:	68e3      	ldr	r3, [r4, #12]
 8000ede:	6832      	ldr	r2, [r6, #0]
 8000ee0:	1a9b      	subs	r3, r3, r2
 8000ee2:	42ab      	cmp	r3, r5
 8000ee4:	ddd2      	ble.n	8000e8c <_printf_common+0x3c>
 8000ee6:	0022      	movs	r2, r4
 8000ee8:	2301      	movs	r3, #1
 8000eea:	9901      	ldr	r1, [sp, #4]
 8000eec:	9800      	ldr	r0, [sp, #0]
 8000eee:	9f08      	ldr	r7, [sp, #32]
 8000ef0:	3219      	adds	r2, #25
 8000ef2:	47b8      	blx	r7
 8000ef4:	3001      	adds	r0, #1
 8000ef6:	d1f0      	bne.n	8000eda <_printf_common+0x8a>
 8000ef8:	2001      	movs	r0, #1
 8000efa:	4240      	negs	r0, r0
 8000efc:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000efe:	2030      	movs	r0, #48	; 0x30
 8000f00:	18e1      	adds	r1, r4, r3
 8000f02:	3143      	adds	r1, #67	; 0x43
 8000f04:	7008      	strb	r0, [r1, #0]
 8000f06:	0021      	movs	r1, r4
 8000f08:	1c5a      	adds	r2, r3, #1
 8000f0a:	3145      	adds	r1, #69	; 0x45
 8000f0c:	7809      	ldrb	r1, [r1, #0]
 8000f0e:	18a2      	adds	r2, r4, r2
 8000f10:	3243      	adds	r2, #67	; 0x43
 8000f12:	3302      	adds	r3, #2
 8000f14:	7011      	strb	r1, [r2, #0]
 8000f16:	e7c1      	b.n	8000e9c <_printf_common+0x4c>
 8000f18:	0022      	movs	r2, r4
 8000f1a:	2301      	movs	r3, #1
 8000f1c:	9901      	ldr	r1, [sp, #4]
 8000f1e:	9800      	ldr	r0, [sp, #0]
 8000f20:	9f08      	ldr	r7, [sp, #32]
 8000f22:	321a      	adds	r2, #26
 8000f24:	47b8      	blx	r7
 8000f26:	3001      	adds	r0, #1
 8000f28:	d0e6      	beq.n	8000ef8 <_printf_common+0xa8>
 8000f2a:	3601      	adds	r6, #1
 8000f2c:	e7d1      	b.n	8000ed2 <_printf_common+0x82>
	...

08000f30 <_printf_i>:
 8000f30:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000f32:	b08b      	sub	sp, #44	; 0x2c
 8000f34:	9206      	str	r2, [sp, #24]
 8000f36:	000a      	movs	r2, r1
 8000f38:	3243      	adds	r2, #67	; 0x43
 8000f3a:	9307      	str	r3, [sp, #28]
 8000f3c:	9005      	str	r0, [sp, #20]
 8000f3e:	9204      	str	r2, [sp, #16]
 8000f40:	7e0a      	ldrb	r2, [r1, #24]
 8000f42:	000c      	movs	r4, r1
 8000f44:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8000f46:	2a78      	cmp	r2, #120	; 0x78
 8000f48:	d809      	bhi.n	8000f5e <_printf_i+0x2e>
 8000f4a:	2a62      	cmp	r2, #98	; 0x62
 8000f4c:	d80b      	bhi.n	8000f66 <_printf_i+0x36>
 8000f4e:	2a00      	cmp	r2, #0
 8000f50:	d100      	bne.n	8000f54 <_printf_i+0x24>
 8000f52:	e0be      	b.n	80010d2 <_printf_i+0x1a2>
 8000f54:	497c      	ldr	r1, [pc, #496]	; (8001148 <_printf_i+0x218>)
 8000f56:	9103      	str	r1, [sp, #12]
 8000f58:	2a58      	cmp	r2, #88	; 0x58
 8000f5a:	d100      	bne.n	8000f5e <_printf_i+0x2e>
 8000f5c:	e093      	b.n	8001086 <_printf_i+0x156>
 8000f5e:	0026      	movs	r6, r4
 8000f60:	3642      	adds	r6, #66	; 0x42
 8000f62:	7032      	strb	r2, [r6, #0]
 8000f64:	e022      	b.n	8000fac <_printf_i+0x7c>
 8000f66:	0010      	movs	r0, r2
 8000f68:	3863      	subs	r0, #99	; 0x63
 8000f6a:	2815      	cmp	r0, #21
 8000f6c:	d8f7      	bhi.n	8000f5e <_printf_i+0x2e>
 8000f6e:	f7ff f8cb 	bl	8000108 <__gnu_thumb1_case_shi>
 8000f72:	0016      	.short	0x0016
 8000f74:	fff6001f 	.word	0xfff6001f
 8000f78:	fff6fff6 	.word	0xfff6fff6
 8000f7c:	001ffff6 	.word	0x001ffff6
 8000f80:	fff6fff6 	.word	0xfff6fff6
 8000f84:	fff6fff6 	.word	0xfff6fff6
 8000f88:	003600a3 	.word	0x003600a3
 8000f8c:	fff60083 	.word	0xfff60083
 8000f90:	00b4fff6 	.word	0x00b4fff6
 8000f94:	0036fff6 	.word	0x0036fff6
 8000f98:	fff6fff6 	.word	0xfff6fff6
 8000f9c:	0087      	.short	0x0087
 8000f9e:	0026      	movs	r6, r4
 8000fa0:	681a      	ldr	r2, [r3, #0]
 8000fa2:	3642      	adds	r6, #66	; 0x42
 8000fa4:	1d11      	adds	r1, r2, #4
 8000fa6:	6019      	str	r1, [r3, #0]
 8000fa8:	6813      	ldr	r3, [r2, #0]
 8000faa:	7033      	strb	r3, [r6, #0]
 8000fac:	2301      	movs	r3, #1
 8000fae:	e0a2      	b.n	80010f6 <_printf_i+0x1c6>
 8000fb0:	6818      	ldr	r0, [r3, #0]
 8000fb2:	6809      	ldr	r1, [r1, #0]
 8000fb4:	1d02      	adds	r2, r0, #4
 8000fb6:	060d      	lsls	r5, r1, #24
 8000fb8:	d50b      	bpl.n	8000fd2 <_printf_i+0xa2>
 8000fba:	6805      	ldr	r5, [r0, #0]
 8000fbc:	601a      	str	r2, [r3, #0]
 8000fbe:	2d00      	cmp	r5, #0
 8000fc0:	da03      	bge.n	8000fca <_printf_i+0x9a>
 8000fc2:	232d      	movs	r3, #45	; 0x2d
 8000fc4:	9a04      	ldr	r2, [sp, #16]
 8000fc6:	426d      	negs	r5, r5
 8000fc8:	7013      	strb	r3, [r2, #0]
 8000fca:	4b5f      	ldr	r3, [pc, #380]	; (8001148 <_printf_i+0x218>)
 8000fcc:	270a      	movs	r7, #10
 8000fce:	9303      	str	r3, [sp, #12]
 8000fd0:	e01b      	b.n	800100a <_printf_i+0xda>
 8000fd2:	6805      	ldr	r5, [r0, #0]
 8000fd4:	601a      	str	r2, [r3, #0]
 8000fd6:	0649      	lsls	r1, r1, #25
 8000fd8:	d5f1      	bpl.n	8000fbe <_printf_i+0x8e>
 8000fda:	b22d      	sxth	r5, r5
 8000fdc:	e7ef      	b.n	8000fbe <_printf_i+0x8e>
 8000fde:	680d      	ldr	r5, [r1, #0]
 8000fe0:	6819      	ldr	r1, [r3, #0]
 8000fe2:	1d08      	adds	r0, r1, #4
 8000fe4:	6018      	str	r0, [r3, #0]
 8000fe6:	062e      	lsls	r6, r5, #24
 8000fe8:	d501      	bpl.n	8000fee <_printf_i+0xbe>
 8000fea:	680d      	ldr	r5, [r1, #0]
 8000fec:	e003      	b.n	8000ff6 <_printf_i+0xc6>
 8000fee:	066d      	lsls	r5, r5, #25
 8000ff0:	d5fb      	bpl.n	8000fea <_printf_i+0xba>
 8000ff2:	680d      	ldr	r5, [r1, #0]
 8000ff4:	b2ad      	uxth	r5, r5
 8000ff6:	4b54      	ldr	r3, [pc, #336]	; (8001148 <_printf_i+0x218>)
 8000ff8:	2708      	movs	r7, #8
 8000ffa:	9303      	str	r3, [sp, #12]
 8000ffc:	2a6f      	cmp	r2, #111	; 0x6f
 8000ffe:	d000      	beq.n	8001002 <_printf_i+0xd2>
 8001000:	3702      	adds	r7, #2
 8001002:	0023      	movs	r3, r4
 8001004:	2200      	movs	r2, #0
 8001006:	3343      	adds	r3, #67	; 0x43
 8001008:	701a      	strb	r2, [r3, #0]
 800100a:	6863      	ldr	r3, [r4, #4]
 800100c:	60a3      	str	r3, [r4, #8]
 800100e:	2b00      	cmp	r3, #0
 8001010:	db03      	blt.n	800101a <_printf_i+0xea>
 8001012:	2104      	movs	r1, #4
 8001014:	6822      	ldr	r2, [r4, #0]
 8001016:	438a      	bics	r2, r1
 8001018:	6022      	str	r2, [r4, #0]
 800101a:	2d00      	cmp	r5, #0
 800101c:	d102      	bne.n	8001024 <_printf_i+0xf4>
 800101e:	9e04      	ldr	r6, [sp, #16]
 8001020:	2b00      	cmp	r3, #0
 8001022:	d00c      	beq.n	800103e <_printf_i+0x10e>
 8001024:	9e04      	ldr	r6, [sp, #16]
 8001026:	0028      	movs	r0, r5
 8001028:	0039      	movs	r1, r7
 800102a:	f7ff f8fd 	bl	8000228 <__aeabi_uidivmod>
 800102e:	9b03      	ldr	r3, [sp, #12]
 8001030:	3e01      	subs	r6, #1
 8001032:	5c5b      	ldrb	r3, [r3, r1]
 8001034:	7033      	strb	r3, [r6, #0]
 8001036:	002b      	movs	r3, r5
 8001038:	0005      	movs	r5, r0
 800103a:	429f      	cmp	r7, r3
 800103c:	d9f3      	bls.n	8001026 <_printf_i+0xf6>
 800103e:	2f08      	cmp	r7, #8
 8001040:	d109      	bne.n	8001056 <_printf_i+0x126>
 8001042:	6823      	ldr	r3, [r4, #0]
 8001044:	07db      	lsls	r3, r3, #31
 8001046:	d506      	bpl.n	8001056 <_printf_i+0x126>
 8001048:	6862      	ldr	r2, [r4, #4]
 800104a:	6923      	ldr	r3, [r4, #16]
 800104c:	429a      	cmp	r2, r3
 800104e:	dc02      	bgt.n	8001056 <_printf_i+0x126>
 8001050:	2330      	movs	r3, #48	; 0x30
 8001052:	3e01      	subs	r6, #1
 8001054:	7033      	strb	r3, [r6, #0]
 8001056:	9b04      	ldr	r3, [sp, #16]
 8001058:	1b9b      	subs	r3, r3, r6
 800105a:	6123      	str	r3, [r4, #16]
 800105c:	9b07      	ldr	r3, [sp, #28]
 800105e:	0021      	movs	r1, r4
 8001060:	9300      	str	r3, [sp, #0]
 8001062:	9805      	ldr	r0, [sp, #20]
 8001064:	9b06      	ldr	r3, [sp, #24]
 8001066:	aa09      	add	r2, sp, #36	; 0x24
 8001068:	f7ff fef2 	bl	8000e50 <_printf_common>
 800106c:	3001      	adds	r0, #1
 800106e:	d147      	bne.n	8001100 <_printf_i+0x1d0>
 8001070:	2001      	movs	r0, #1
 8001072:	4240      	negs	r0, r0
 8001074:	b00b      	add	sp, #44	; 0x2c
 8001076:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001078:	2220      	movs	r2, #32
 800107a:	6809      	ldr	r1, [r1, #0]
 800107c:	430a      	orrs	r2, r1
 800107e:	6022      	str	r2, [r4, #0]
 8001080:	2278      	movs	r2, #120	; 0x78
 8001082:	4932      	ldr	r1, [pc, #200]	; (800114c <_printf_i+0x21c>)
 8001084:	9103      	str	r1, [sp, #12]
 8001086:	0021      	movs	r1, r4
 8001088:	3145      	adds	r1, #69	; 0x45
 800108a:	700a      	strb	r2, [r1, #0]
 800108c:	6819      	ldr	r1, [r3, #0]
 800108e:	6822      	ldr	r2, [r4, #0]
 8001090:	c920      	ldmia	r1!, {r5}
 8001092:	0610      	lsls	r0, r2, #24
 8001094:	d402      	bmi.n	800109c <_printf_i+0x16c>
 8001096:	0650      	lsls	r0, r2, #25
 8001098:	d500      	bpl.n	800109c <_printf_i+0x16c>
 800109a:	b2ad      	uxth	r5, r5
 800109c:	6019      	str	r1, [r3, #0]
 800109e:	07d3      	lsls	r3, r2, #31
 80010a0:	d502      	bpl.n	80010a8 <_printf_i+0x178>
 80010a2:	2320      	movs	r3, #32
 80010a4:	4313      	orrs	r3, r2
 80010a6:	6023      	str	r3, [r4, #0]
 80010a8:	2710      	movs	r7, #16
 80010aa:	2d00      	cmp	r5, #0
 80010ac:	d1a9      	bne.n	8001002 <_printf_i+0xd2>
 80010ae:	2220      	movs	r2, #32
 80010b0:	6823      	ldr	r3, [r4, #0]
 80010b2:	4393      	bics	r3, r2
 80010b4:	6023      	str	r3, [r4, #0]
 80010b6:	e7a4      	b.n	8001002 <_printf_i+0xd2>
 80010b8:	681a      	ldr	r2, [r3, #0]
 80010ba:	680d      	ldr	r5, [r1, #0]
 80010bc:	1d10      	adds	r0, r2, #4
 80010be:	6949      	ldr	r1, [r1, #20]
 80010c0:	6018      	str	r0, [r3, #0]
 80010c2:	6813      	ldr	r3, [r2, #0]
 80010c4:	062e      	lsls	r6, r5, #24
 80010c6:	d501      	bpl.n	80010cc <_printf_i+0x19c>
 80010c8:	6019      	str	r1, [r3, #0]
 80010ca:	e002      	b.n	80010d2 <_printf_i+0x1a2>
 80010cc:	066d      	lsls	r5, r5, #25
 80010ce:	d5fb      	bpl.n	80010c8 <_printf_i+0x198>
 80010d0:	8019      	strh	r1, [r3, #0]
 80010d2:	2300      	movs	r3, #0
 80010d4:	9e04      	ldr	r6, [sp, #16]
 80010d6:	6123      	str	r3, [r4, #16]
 80010d8:	e7c0      	b.n	800105c <_printf_i+0x12c>
 80010da:	681a      	ldr	r2, [r3, #0]
 80010dc:	1d11      	adds	r1, r2, #4
 80010de:	6019      	str	r1, [r3, #0]
 80010e0:	6816      	ldr	r6, [r2, #0]
 80010e2:	2100      	movs	r1, #0
 80010e4:	0030      	movs	r0, r6
 80010e6:	6862      	ldr	r2, [r4, #4]
 80010e8:	f000 f9a0 	bl	800142c <memchr>
 80010ec:	2800      	cmp	r0, #0
 80010ee:	d001      	beq.n	80010f4 <_printf_i+0x1c4>
 80010f0:	1b80      	subs	r0, r0, r6
 80010f2:	6060      	str	r0, [r4, #4]
 80010f4:	6863      	ldr	r3, [r4, #4]
 80010f6:	6123      	str	r3, [r4, #16]
 80010f8:	2300      	movs	r3, #0
 80010fa:	9a04      	ldr	r2, [sp, #16]
 80010fc:	7013      	strb	r3, [r2, #0]
 80010fe:	e7ad      	b.n	800105c <_printf_i+0x12c>
 8001100:	0032      	movs	r2, r6
 8001102:	6923      	ldr	r3, [r4, #16]
 8001104:	9906      	ldr	r1, [sp, #24]
 8001106:	9805      	ldr	r0, [sp, #20]
 8001108:	9d07      	ldr	r5, [sp, #28]
 800110a:	47a8      	blx	r5
 800110c:	3001      	adds	r0, #1
 800110e:	d0af      	beq.n	8001070 <_printf_i+0x140>
 8001110:	6823      	ldr	r3, [r4, #0]
 8001112:	079b      	lsls	r3, r3, #30
 8001114:	d415      	bmi.n	8001142 <_printf_i+0x212>
 8001116:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001118:	68e0      	ldr	r0, [r4, #12]
 800111a:	4298      	cmp	r0, r3
 800111c:	daaa      	bge.n	8001074 <_printf_i+0x144>
 800111e:	0018      	movs	r0, r3
 8001120:	e7a8      	b.n	8001074 <_printf_i+0x144>
 8001122:	0022      	movs	r2, r4
 8001124:	2301      	movs	r3, #1
 8001126:	9906      	ldr	r1, [sp, #24]
 8001128:	9805      	ldr	r0, [sp, #20]
 800112a:	9e07      	ldr	r6, [sp, #28]
 800112c:	3219      	adds	r2, #25
 800112e:	47b0      	blx	r6
 8001130:	3001      	adds	r0, #1
 8001132:	d09d      	beq.n	8001070 <_printf_i+0x140>
 8001134:	3501      	adds	r5, #1
 8001136:	68e3      	ldr	r3, [r4, #12]
 8001138:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800113a:	1a9b      	subs	r3, r3, r2
 800113c:	42ab      	cmp	r3, r5
 800113e:	dcf0      	bgt.n	8001122 <_printf_i+0x1f2>
 8001140:	e7e9      	b.n	8001116 <_printf_i+0x1e6>
 8001142:	2500      	movs	r5, #0
 8001144:	e7f7      	b.n	8001136 <_printf_i+0x206>
 8001146:	46c0      	nop			; (mov r8, r8)
 8001148:	08001592 	.word	0x08001592
 800114c:	080015a3 	.word	0x080015a3

08001150 <__sflush_r>:
 8001150:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001152:	898b      	ldrh	r3, [r1, #12]
 8001154:	0005      	movs	r5, r0
 8001156:	000c      	movs	r4, r1
 8001158:	071a      	lsls	r2, r3, #28
 800115a:	d45c      	bmi.n	8001216 <__sflush_r+0xc6>
 800115c:	684a      	ldr	r2, [r1, #4]
 800115e:	2a00      	cmp	r2, #0
 8001160:	dc04      	bgt.n	800116c <__sflush_r+0x1c>
 8001162:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 8001164:	2a00      	cmp	r2, #0
 8001166:	dc01      	bgt.n	800116c <__sflush_r+0x1c>
 8001168:	2000      	movs	r0, #0
 800116a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800116c:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800116e:	2f00      	cmp	r7, #0
 8001170:	d0fa      	beq.n	8001168 <__sflush_r+0x18>
 8001172:	2200      	movs	r2, #0
 8001174:	2080      	movs	r0, #128	; 0x80
 8001176:	682e      	ldr	r6, [r5, #0]
 8001178:	602a      	str	r2, [r5, #0]
 800117a:	001a      	movs	r2, r3
 800117c:	0140      	lsls	r0, r0, #5
 800117e:	6a21      	ldr	r1, [r4, #32]
 8001180:	4002      	ands	r2, r0
 8001182:	4203      	tst	r3, r0
 8001184:	d034      	beq.n	80011f0 <__sflush_r+0xa0>
 8001186:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001188:	89a3      	ldrh	r3, [r4, #12]
 800118a:	075b      	lsls	r3, r3, #29
 800118c:	d506      	bpl.n	800119c <__sflush_r+0x4c>
 800118e:	6863      	ldr	r3, [r4, #4]
 8001190:	1ac0      	subs	r0, r0, r3
 8001192:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001194:	2b00      	cmp	r3, #0
 8001196:	d001      	beq.n	800119c <__sflush_r+0x4c>
 8001198:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800119a:	1ac0      	subs	r0, r0, r3
 800119c:	0002      	movs	r2, r0
 800119e:	2300      	movs	r3, #0
 80011a0:	0028      	movs	r0, r5
 80011a2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80011a4:	6a21      	ldr	r1, [r4, #32]
 80011a6:	47b8      	blx	r7
 80011a8:	89a2      	ldrh	r2, [r4, #12]
 80011aa:	1c43      	adds	r3, r0, #1
 80011ac:	d106      	bne.n	80011bc <__sflush_r+0x6c>
 80011ae:	6829      	ldr	r1, [r5, #0]
 80011b0:	291d      	cmp	r1, #29
 80011b2:	d82c      	bhi.n	800120e <__sflush_r+0xbe>
 80011b4:	4b2a      	ldr	r3, [pc, #168]	; (8001260 <__sflush_r+0x110>)
 80011b6:	410b      	asrs	r3, r1
 80011b8:	07db      	lsls	r3, r3, #31
 80011ba:	d428      	bmi.n	800120e <__sflush_r+0xbe>
 80011bc:	2300      	movs	r3, #0
 80011be:	6063      	str	r3, [r4, #4]
 80011c0:	6923      	ldr	r3, [r4, #16]
 80011c2:	6023      	str	r3, [r4, #0]
 80011c4:	04d2      	lsls	r2, r2, #19
 80011c6:	d505      	bpl.n	80011d4 <__sflush_r+0x84>
 80011c8:	1c43      	adds	r3, r0, #1
 80011ca:	d102      	bne.n	80011d2 <__sflush_r+0x82>
 80011cc:	682b      	ldr	r3, [r5, #0]
 80011ce:	2b00      	cmp	r3, #0
 80011d0:	d100      	bne.n	80011d4 <__sflush_r+0x84>
 80011d2:	6560      	str	r0, [r4, #84]	; 0x54
 80011d4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80011d6:	602e      	str	r6, [r5, #0]
 80011d8:	2900      	cmp	r1, #0
 80011da:	d0c5      	beq.n	8001168 <__sflush_r+0x18>
 80011dc:	0023      	movs	r3, r4
 80011de:	3344      	adds	r3, #68	; 0x44
 80011e0:	4299      	cmp	r1, r3
 80011e2:	d002      	beq.n	80011ea <__sflush_r+0x9a>
 80011e4:	0028      	movs	r0, r5
 80011e6:	f7ff fbf1 	bl	80009cc <_free_r>
 80011ea:	2000      	movs	r0, #0
 80011ec:	6360      	str	r0, [r4, #52]	; 0x34
 80011ee:	e7bc      	b.n	800116a <__sflush_r+0x1a>
 80011f0:	2301      	movs	r3, #1
 80011f2:	0028      	movs	r0, r5
 80011f4:	47b8      	blx	r7
 80011f6:	1c43      	adds	r3, r0, #1
 80011f8:	d1c6      	bne.n	8001188 <__sflush_r+0x38>
 80011fa:	682b      	ldr	r3, [r5, #0]
 80011fc:	2b00      	cmp	r3, #0
 80011fe:	d0c3      	beq.n	8001188 <__sflush_r+0x38>
 8001200:	2b1d      	cmp	r3, #29
 8001202:	d001      	beq.n	8001208 <__sflush_r+0xb8>
 8001204:	2b16      	cmp	r3, #22
 8001206:	d101      	bne.n	800120c <__sflush_r+0xbc>
 8001208:	602e      	str	r6, [r5, #0]
 800120a:	e7ad      	b.n	8001168 <__sflush_r+0x18>
 800120c:	89a2      	ldrh	r2, [r4, #12]
 800120e:	2340      	movs	r3, #64	; 0x40
 8001210:	4313      	orrs	r3, r2
 8001212:	81a3      	strh	r3, [r4, #12]
 8001214:	e7a9      	b.n	800116a <__sflush_r+0x1a>
 8001216:	690e      	ldr	r6, [r1, #16]
 8001218:	2e00      	cmp	r6, #0
 800121a:	d0a5      	beq.n	8001168 <__sflush_r+0x18>
 800121c:	680f      	ldr	r7, [r1, #0]
 800121e:	600e      	str	r6, [r1, #0]
 8001220:	1bba      	subs	r2, r7, r6
 8001222:	9201      	str	r2, [sp, #4]
 8001224:	2200      	movs	r2, #0
 8001226:	079b      	lsls	r3, r3, #30
 8001228:	d100      	bne.n	800122c <__sflush_r+0xdc>
 800122a:	694a      	ldr	r2, [r1, #20]
 800122c:	60a2      	str	r2, [r4, #8]
 800122e:	9b01      	ldr	r3, [sp, #4]
 8001230:	2b00      	cmp	r3, #0
 8001232:	dd99      	ble.n	8001168 <__sflush_r+0x18>
 8001234:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8001236:	0032      	movs	r2, r6
 8001238:	001f      	movs	r7, r3
 800123a:	0028      	movs	r0, r5
 800123c:	9b01      	ldr	r3, [sp, #4]
 800123e:	6a21      	ldr	r1, [r4, #32]
 8001240:	47b8      	blx	r7
 8001242:	2800      	cmp	r0, #0
 8001244:	dc06      	bgt.n	8001254 <__sflush_r+0x104>
 8001246:	2340      	movs	r3, #64	; 0x40
 8001248:	2001      	movs	r0, #1
 800124a:	89a2      	ldrh	r2, [r4, #12]
 800124c:	4240      	negs	r0, r0
 800124e:	4313      	orrs	r3, r2
 8001250:	81a3      	strh	r3, [r4, #12]
 8001252:	e78a      	b.n	800116a <__sflush_r+0x1a>
 8001254:	9b01      	ldr	r3, [sp, #4]
 8001256:	1836      	adds	r6, r6, r0
 8001258:	1a1b      	subs	r3, r3, r0
 800125a:	9301      	str	r3, [sp, #4]
 800125c:	e7e7      	b.n	800122e <__sflush_r+0xde>
 800125e:	46c0      	nop			; (mov r8, r8)
 8001260:	dfbffffe 	.word	0xdfbffffe

08001264 <_fflush_r>:
 8001264:	690b      	ldr	r3, [r1, #16]
 8001266:	b570      	push	{r4, r5, r6, lr}
 8001268:	0005      	movs	r5, r0
 800126a:	000c      	movs	r4, r1
 800126c:	2b00      	cmp	r3, #0
 800126e:	d102      	bne.n	8001276 <_fflush_r+0x12>
 8001270:	2500      	movs	r5, #0
 8001272:	0028      	movs	r0, r5
 8001274:	bd70      	pop	{r4, r5, r6, pc}
 8001276:	2800      	cmp	r0, #0
 8001278:	d004      	beq.n	8001284 <_fflush_r+0x20>
 800127a:	6a03      	ldr	r3, [r0, #32]
 800127c:	2b00      	cmp	r3, #0
 800127e:	d101      	bne.n	8001284 <_fflush_r+0x20>
 8001280:	f7ff fa90 	bl	80007a4 <__sinit>
 8001284:	220c      	movs	r2, #12
 8001286:	5ea3      	ldrsh	r3, [r4, r2]
 8001288:	2b00      	cmp	r3, #0
 800128a:	d0f1      	beq.n	8001270 <_fflush_r+0xc>
 800128c:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800128e:	07d2      	lsls	r2, r2, #31
 8001290:	d404      	bmi.n	800129c <_fflush_r+0x38>
 8001292:	059b      	lsls	r3, r3, #22
 8001294:	d402      	bmi.n	800129c <_fflush_r+0x38>
 8001296:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001298:	f7ff fb95 	bl	80009c6 <__retarget_lock_acquire_recursive>
 800129c:	0028      	movs	r0, r5
 800129e:	0021      	movs	r1, r4
 80012a0:	f7ff ff56 	bl	8001150 <__sflush_r>
 80012a4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80012a6:	0005      	movs	r5, r0
 80012a8:	07db      	lsls	r3, r3, #31
 80012aa:	d4e2      	bmi.n	8001272 <_fflush_r+0xe>
 80012ac:	89a3      	ldrh	r3, [r4, #12]
 80012ae:	059b      	lsls	r3, r3, #22
 80012b0:	d4df      	bmi.n	8001272 <_fflush_r+0xe>
 80012b2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80012b4:	f7ff fb88 	bl	80009c8 <__retarget_lock_release_recursive>
 80012b8:	e7db      	b.n	8001272 <_fflush_r+0xe>

080012ba <__swbuf_r>:
 80012ba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012bc:	0006      	movs	r6, r0
 80012be:	000d      	movs	r5, r1
 80012c0:	0014      	movs	r4, r2
 80012c2:	2800      	cmp	r0, #0
 80012c4:	d004      	beq.n	80012d0 <__swbuf_r+0x16>
 80012c6:	6a03      	ldr	r3, [r0, #32]
 80012c8:	2b00      	cmp	r3, #0
 80012ca:	d101      	bne.n	80012d0 <__swbuf_r+0x16>
 80012cc:	f7ff fa6a 	bl	80007a4 <__sinit>
 80012d0:	69a3      	ldr	r3, [r4, #24]
 80012d2:	60a3      	str	r3, [r4, #8]
 80012d4:	89a3      	ldrh	r3, [r4, #12]
 80012d6:	071b      	lsls	r3, r3, #28
 80012d8:	d528      	bpl.n	800132c <__swbuf_r+0x72>
 80012da:	6923      	ldr	r3, [r4, #16]
 80012dc:	2b00      	cmp	r3, #0
 80012de:	d025      	beq.n	800132c <__swbuf_r+0x72>
 80012e0:	6923      	ldr	r3, [r4, #16]
 80012e2:	6820      	ldr	r0, [r4, #0]
 80012e4:	b2ef      	uxtb	r7, r5
 80012e6:	1ac0      	subs	r0, r0, r3
 80012e8:	6963      	ldr	r3, [r4, #20]
 80012ea:	b2ed      	uxtb	r5, r5
 80012ec:	4283      	cmp	r3, r0
 80012ee:	dc05      	bgt.n	80012fc <__swbuf_r+0x42>
 80012f0:	0021      	movs	r1, r4
 80012f2:	0030      	movs	r0, r6
 80012f4:	f7ff ffb6 	bl	8001264 <_fflush_r>
 80012f8:	2800      	cmp	r0, #0
 80012fa:	d11d      	bne.n	8001338 <__swbuf_r+0x7e>
 80012fc:	68a3      	ldr	r3, [r4, #8]
 80012fe:	3001      	adds	r0, #1
 8001300:	3b01      	subs	r3, #1
 8001302:	60a3      	str	r3, [r4, #8]
 8001304:	6823      	ldr	r3, [r4, #0]
 8001306:	1c5a      	adds	r2, r3, #1
 8001308:	6022      	str	r2, [r4, #0]
 800130a:	701f      	strb	r7, [r3, #0]
 800130c:	6963      	ldr	r3, [r4, #20]
 800130e:	4283      	cmp	r3, r0
 8001310:	d004      	beq.n	800131c <__swbuf_r+0x62>
 8001312:	89a3      	ldrh	r3, [r4, #12]
 8001314:	07db      	lsls	r3, r3, #31
 8001316:	d507      	bpl.n	8001328 <__swbuf_r+0x6e>
 8001318:	2d0a      	cmp	r5, #10
 800131a:	d105      	bne.n	8001328 <__swbuf_r+0x6e>
 800131c:	0021      	movs	r1, r4
 800131e:	0030      	movs	r0, r6
 8001320:	f7ff ffa0 	bl	8001264 <_fflush_r>
 8001324:	2800      	cmp	r0, #0
 8001326:	d107      	bne.n	8001338 <__swbuf_r+0x7e>
 8001328:	0028      	movs	r0, r5
 800132a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800132c:	0021      	movs	r1, r4
 800132e:	0030      	movs	r0, r6
 8001330:	f000 f806 	bl	8001340 <__swsetup_r>
 8001334:	2800      	cmp	r0, #0
 8001336:	d0d3      	beq.n	80012e0 <__swbuf_r+0x26>
 8001338:	2501      	movs	r5, #1
 800133a:	426d      	negs	r5, r5
 800133c:	e7f4      	b.n	8001328 <__swbuf_r+0x6e>
	...

08001340 <__swsetup_r>:
 8001340:	4b30      	ldr	r3, [pc, #192]	; (8001404 <__swsetup_r+0xc4>)
 8001342:	b570      	push	{r4, r5, r6, lr}
 8001344:	0005      	movs	r5, r0
 8001346:	6818      	ldr	r0, [r3, #0]
 8001348:	000c      	movs	r4, r1
 800134a:	2800      	cmp	r0, #0
 800134c:	d004      	beq.n	8001358 <__swsetup_r+0x18>
 800134e:	6a03      	ldr	r3, [r0, #32]
 8001350:	2b00      	cmp	r3, #0
 8001352:	d101      	bne.n	8001358 <__swsetup_r+0x18>
 8001354:	f7ff fa26 	bl	80007a4 <__sinit>
 8001358:	230c      	movs	r3, #12
 800135a:	5ee2      	ldrsh	r2, [r4, r3]
 800135c:	b293      	uxth	r3, r2
 800135e:	0711      	lsls	r1, r2, #28
 8001360:	d423      	bmi.n	80013aa <__swsetup_r+0x6a>
 8001362:	06d9      	lsls	r1, r3, #27
 8001364:	d407      	bmi.n	8001376 <__swsetup_r+0x36>
 8001366:	2309      	movs	r3, #9
 8001368:	2001      	movs	r0, #1
 800136a:	602b      	str	r3, [r5, #0]
 800136c:	3337      	adds	r3, #55	; 0x37
 800136e:	4313      	orrs	r3, r2
 8001370:	81a3      	strh	r3, [r4, #12]
 8001372:	4240      	negs	r0, r0
 8001374:	bd70      	pop	{r4, r5, r6, pc}
 8001376:	075b      	lsls	r3, r3, #29
 8001378:	d513      	bpl.n	80013a2 <__swsetup_r+0x62>
 800137a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800137c:	2900      	cmp	r1, #0
 800137e:	d008      	beq.n	8001392 <__swsetup_r+0x52>
 8001380:	0023      	movs	r3, r4
 8001382:	3344      	adds	r3, #68	; 0x44
 8001384:	4299      	cmp	r1, r3
 8001386:	d002      	beq.n	800138e <__swsetup_r+0x4e>
 8001388:	0028      	movs	r0, r5
 800138a:	f7ff fb1f 	bl	80009cc <_free_r>
 800138e:	2300      	movs	r3, #0
 8001390:	6363      	str	r3, [r4, #52]	; 0x34
 8001392:	2224      	movs	r2, #36	; 0x24
 8001394:	89a3      	ldrh	r3, [r4, #12]
 8001396:	4393      	bics	r3, r2
 8001398:	81a3      	strh	r3, [r4, #12]
 800139a:	2300      	movs	r3, #0
 800139c:	6063      	str	r3, [r4, #4]
 800139e:	6923      	ldr	r3, [r4, #16]
 80013a0:	6023      	str	r3, [r4, #0]
 80013a2:	2308      	movs	r3, #8
 80013a4:	89a2      	ldrh	r2, [r4, #12]
 80013a6:	4313      	orrs	r3, r2
 80013a8:	81a3      	strh	r3, [r4, #12]
 80013aa:	6923      	ldr	r3, [r4, #16]
 80013ac:	2b00      	cmp	r3, #0
 80013ae:	d10b      	bne.n	80013c8 <__swsetup_r+0x88>
 80013b0:	21a0      	movs	r1, #160	; 0xa0
 80013b2:	2280      	movs	r2, #128	; 0x80
 80013b4:	89a3      	ldrh	r3, [r4, #12]
 80013b6:	0089      	lsls	r1, r1, #2
 80013b8:	0092      	lsls	r2, r2, #2
 80013ba:	400b      	ands	r3, r1
 80013bc:	4293      	cmp	r3, r2
 80013be:	d003      	beq.n	80013c8 <__swsetup_r+0x88>
 80013c0:	0021      	movs	r1, r4
 80013c2:	0028      	movs	r0, r5
 80013c4:	f000 f866 	bl	8001494 <__smakebuf_r>
 80013c8:	220c      	movs	r2, #12
 80013ca:	5ea3      	ldrsh	r3, [r4, r2]
 80013cc:	2001      	movs	r0, #1
 80013ce:	001a      	movs	r2, r3
 80013d0:	b299      	uxth	r1, r3
 80013d2:	4002      	ands	r2, r0
 80013d4:	4203      	tst	r3, r0
 80013d6:	d00f      	beq.n	80013f8 <__swsetup_r+0xb8>
 80013d8:	2200      	movs	r2, #0
 80013da:	60a2      	str	r2, [r4, #8]
 80013dc:	6962      	ldr	r2, [r4, #20]
 80013de:	4252      	negs	r2, r2
 80013e0:	61a2      	str	r2, [r4, #24]
 80013e2:	2000      	movs	r0, #0
 80013e4:	6922      	ldr	r2, [r4, #16]
 80013e6:	4282      	cmp	r2, r0
 80013e8:	d1c4      	bne.n	8001374 <__swsetup_r+0x34>
 80013ea:	0609      	lsls	r1, r1, #24
 80013ec:	d5c2      	bpl.n	8001374 <__swsetup_r+0x34>
 80013ee:	2240      	movs	r2, #64	; 0x40
 80013f0:	4313      	orrs	r3, r2
 80013f2:	81a3      	strh	r3, [r4, #12]
 80013f4:	3801      	subs	r0, #1
 80013f6:	e7bd      	b.n	8001374 <__swsetup_r+0x34>
 80013f8:	0788      	lsls	r0, r1, #30
 80013fa:	d400      	bmi.n	80013fe <__swsetup_r+0xbe>
 80013fc:	6962      	ldr	r2, [r4, #20]
 80013fe:	60a2      	str	r2, [r4, #8]
 8001400:	e7ef      	b.n	80013e2 <__swsetup_r+0xa2>
 8001402:	46c0      	nop			; (mov r8, r8)
 8001404:	20000058 	.word	0x20000058

08001408 <_sbrk_r>:
 8001408:	2300      	movs	r3, #0
 800140a:	b570      	push	{r4, r5, r6, lr}
 800140c:	4d06      	ldr	r5, [pc, #24]	; (8001428 <_sbrk_r+0x20>)
 800140e:	0004      	movs	r4, r0
 8001410:	0008      	movs	r0, r1
 8001412:	602b      	str	r3, [r5, #0]
 8001414:	f7ff f8d6 	bl	80005c4 <_sbrk>
 8001418:	1c43      	adds	r3, r0, #1
 800141a:	d103      	bne.n	8001424 <_sbrk_r+0x1c>
 800141c:	682b      	ldr	r3, [r5, #0]
 800141e:	2b00      	cmp	r3, #0
 8001420:	d000      	beq.n	8001424 <_sbrk_r+0x1c>
 8001422:	6023      	str	r3, [r4, #0]
 8001424:	bd70      	pop	{r4, r5, r6, pc}
 8001426:	46c0      	nop			; (mov r8, r8)
 8001428:	200001bc 	.word	0x200001bc

0800142c <memchr>:
 800142c:	b2c9      	uxtb	r1, r1
 800142e:	1882      	adds	r2, r0, r2
 8001430:	4290      	cmp	r0, r2
 8001432:	d101      	bne.n	8001438 <memchr+0xc>
 8001434:	2000      	movs	r0, #0
 8001436:	4770      	bx	lr
 8001438:	7803      	ldrb	r3, [r0, #0]
 800143a:	428b      	cmp	r3, r1
 800143c:	d0fb      	beq.n	8001436 <memchr+0xa>
 800143e:	3001      	adds	r0, #1
 8001440:	e7f6      	b.n	8001430 <memchr+0x4>
	...

08001444 <__swhatbuf_r>:
 8001444:	b570      	push	{r4, r5, r6, lr}
 8001446:	000e      	movs	r6, r1
 8001448:	001d      	movs	r5, r3
 800144a:	230e      	movs	r3, #14
 800144c:	5ec9      	ldrsh	r1, [r1, r3]
 800144e:	0014      	movs	r4, r2
 8001450:	b096      	sub	sp, #88	; 0x58
 8001452:	2900      	cmp	r1, #0
 8001454:	da0c      	bge.n	8001470 <__swhatbuf_r+0x2c>
 8001456:	89b2      	ldrh	r2, [r6, #12]
 8001458:	2380      	movs	r3, #128	; 0x80
 800145a:	0011      	movs	r1, r2
 800145c:	4019      	ands	r1, r3
 800145e:	421a      	tst	r2, r3
 8001460:	d013      	beq.n	800148a <__swhatbuf_r+0x46>
 8001462:	2100      	movs	r1, #0
 8001464:	3b40      	subs	r3, #64	; 0x40
 8001466:	2000      	movs	r0, #0
 8001468:	6029      	str	r1, [r5, #0]
 800146a:	6023      	str	r3, [r4, #0]
 800146c:	b016      	add	sp, #88	; 0x58
 800146e:	bd70      	pop	{r4, r5, r6, pc}
 8001470:	466a      	mov	r2, sp
 8001472:	f000 f84d 	bl	8001510 <_fstat_r>
 8001476:	2800      	cmp	r0, #0
 8001478:	dbed      	blt.n	8001456 <__swhatbuf_r+0x12>
 800147a:	23f0      	movs	r3, #240	; 0xf0
 800147c:	9901      	ldr	r1, [sp, #4]
 800147e:	021b      	lsls	r3, r3, #8
 8001480:	4019      	ands	r1, r3
 8001482:	4b03      	ldr	r3, [pc, #12]	; (8001490 <__swhatbuf_r+0x4c>)
 8001484:	18c9      	adds	r1, r1, r3
 8001486:	424b      	negs	r3, r1
 8001488:	4159      	adcs	r1, r3
 800148a:	2380      	movs	r3, #128	; 0x80
 800148c:	00db      	lsls	r3, r3, #3
 800148e:	e7ea      	b.n	8001466 <__swhatbuf_r+0x22>
 8001490:	ffffe000 	.word	0xffffe000

08001494 <__smakebuf_r>:
 8001494:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001496:	2602      	movs	r6, #2
 8001498:	898b      	ldrh	r3, [r1, #12]
 800149a:	0005      	movs	r5, r0
 800149c:	000c      	movs	r4, r1
 800149e:	4233      	tst	r3, r6
 80014a0:	d006      	beq.n	80014b0 <__smakebuf_r+0x1c>
 80014a2:	0023      	movs	r3, r4
 80014a4:	3347      	adds	r3, #71	; 0x47
 80014a6:	6023      	str	r3, [r4, #0]
 80014a8:	6123      	str	r3, [r4, #16]
 80014aa:	2301      	movs	r3, #1
 80014ac:	6163      	str	r3, [r4, #20]
 80014ae:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 80014b0:	466a      	mov	r2, sp
 80014b2:	ab01      	add	r3, sp, #4
 80014b4:	f7ff ffc6 	bl	8001444 <__swhatbuf_r>
 80014b8:	9900      	ldr	r1, [sp, #0]
 80014ba:	0007      	movs	r7, r0
 80014bc:	0028      	movs	r0, r5
 80014be:	f7ff faf1 	bl	8000aa4 <_malloc_r>
 80014c2:	2800      	cmp	r0, #0
 80014c4:	d108      	bne.n	80014d8 <__smakebuf_r+0x44>
 80014c6:	220c      	movs	r2, #12
 80014c8:	5ea3      	ldrsh	r3, [r4, r2]
 80014ca:	059a      	lsls	r2, r3, #22
 80014cc:	d4ef      	bmi.n	80014ae <__smakebuf_r+0x1a>
 80014ce:	2203      	movs	r2, #3
 80014d0:	4393      	bics	r3, r2
 80014d2:	431e      	orrs	r6, r3
 80014d4:	81a6      	strh	r6, [r4, #12]
 80014d6:	e7e4      	b.n	80014a2 <__smakebuf_r+0xe>
 80014d8:	2380      	movs	r3, #128	; 0x80
 80014da:	89a2      	ldrh	r2, [r4, #12]
 80014dc:	6020      	str	r0, [r4, #0]
 80014de:	4313      	orrs	r3, r2
 80014e0:	81a3      	strh	r3, [r4, #12]
 80014e2:	9b00      	ldr	r3, [sp, #0]
 80014e4:	6120      	str	r0, [r4, #16]
 80014e6:	6163      	str	r3, [r4, #20]
 80014e8:	9b01      	ldr	r3, [sp, #4]
 80014ea:	2b00      	cmp	r3, #0
 80014ec:	d00c      	beq.n	8001508 <__smakebuf_r+0x74>
 80014ee:	0028      	movs	r0, r5
 80014f0:	230e      	movs	r3, #14
 80014f2:	5ee1      	ldrsh	r1, [r4, r3]
 80014f4:	f000 f81e 	bl	8001534 <_isatty_r>
 80014f8:	2800      	cmp	r0, #0
 80014fa:	d005      	beq.n	8001508 <__smakebuf_r+0x74>
 80014fc:	2303      	movs	r3, #3
 80014fe:	89a2      	ldrh	r2, [r4, #12]
 8001500:	439a      	bics	r2, r3
 8001502:	3b02      	subs	r3, #2
 8001504:	4313      	orrs	r3, r2
 8001506:	81a3      	strh	r3, [r4, #12]
 8001508:	89a3      	ldrh	r3, [r4, #12]
 800150a:	433b      	orrs	r3, r7
 800150c:	81a3      	strh	r3, [r4, #12]
 800150e:	e7ce      	b.n	80014ae <__smakebuf_r+0x1a>

08001510 <_fstat_r>:
 8001510:	2300      	movs	r3, #0
 8001512:	b570      	push	{r4, r5, r6, lr}
 8001514:	4d06      	ldr	r5, [pc, #24]	; (8001530 <_fstat_r+0x20>)
 8001516:	0004      	movs	r4, r0
 8001518:	0008      	movs	r0, r1
 800151a:	0011      	movs	r1, r2
 800151c:	602b      	str	r3, [r5, #0]
 800151e:	f7ff f82e 	bl	800057e <_fstat>
 8001522:	1c43      	adds	r3, r0, #1
 8001524:	d103      	bne.n	800152e <_fstat_r+0x1e>
 8001526:	682b      	ldr	r3, [r5, #0]
 8001528:	2b00      	cmp	r3, #0
 800152a:	d000      	beq.n	800152e <_fstat_r+0x1e>
 800152c:	6023      	str	r3, [r4, #0]
 800152e:	bd70      	pop	{r4, r5, r6, pc}
 8001530:	200001bc 	.word	0x200001bc

08001534 <_isatty_r>:
 8001534:	2300      	movs	r3, #0
 8001536:	b570      	push	{r4, r5, r6, lr}
 8001538:	4d06      	ldr	r5, [pc, #24]	; (8001554 <_isatty_r+0x20>)
 800153a:	0004      	movs	r4, r0
 800153c:	0008      	movs	r0, r1
 800153e:	602b      	str	r3, [r5, #0]
 8001540:	f7ff f82b 	bl	800059a <_isatty>
 8001544:	1c43      	adds	r3, r0, #1
 8001546:	d103      	bne.n	8001550 <_isatty_r+0x1c>
 8001548:	682b      	ldr	r3, [r5, #0]
 800154a:	2b00      	cmp	r3, #0
 800154c:	d000      	beq.n	8001550 <_isatty_r+0x1c>
 800154e:	6023      	str	r3, [r4, #0]
 8001550:	bd70      	pop	{r4, r5, r6, pc}
 8001552:	46c0      	nop			; (mov r8, r8)
 8001554:	200001bc 	.word	0x200001bc

08001558 <_init>:
 8001558:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800155a:	46c0      	nop			; (mov r8, r8)
 800155c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800155e:	bc08      	pop	{r3}
 8001560:	469e      	mov	lr, r3
 8001562:	4770      	bx	lr

08001564 <_fini>:
 8001564:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001566:	46c0      	nop			; (mov r8, r8)
 8001568:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800156a:	bc08      	pop	{r3}
 800156c:	469e      	mov	lr, r3
 800156e:	4770      	bx	lr
